{"version":3,"file":"5453.21213b2c.iframe.bundle.js","mappings":";AAsIA;AACA;ACsCA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AAGA;AAGA;AAYA;AACA;;AAEA;AAKA;AACA;;AAEA;;;;ACjMA;ACwCA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACOA;;;;;;;;AAQA;AACA;AACA;AACA;;;;;;AAMA;;;;;AC0kBA;;;;;;;;;;;;;;;;;;ACxbA;AACA;;;;;AAKA;;;ACvLA;;;;;AAKA;ACrCA;ACkCA;;AAEA;;AAIA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAIA;AACA;AAGA;AACA;AAGA;AACA;AAwCA;AACA;;;AAGA;ACiKA;AAAA;AChRA;AAAA;;ACaA;AACA;AACA;;ACWA;;AAEA;;AAEA;AACA;;;;AAIA;;;;;AAKA;;;;;;;;;;;;AAYA;AACA;AACA;;AAEA;AACA;;;;;;AAMA;;;;;;;ACtEA;;;;;;;ACZA;;;;;ACFA;;;;;;;;ACGA;;;;;;;;ACAA","sources":["webpack://atrc/./node_modules/@wordpress/block-editor/build-module/layouts/flex.js","webpack://atrc/./node_modules/@wordpress/block-editor/build-module/layouts/constrained.js","webpack://atrc/./node_modules/@wordpress/components/build-module/focal-point-picker/styles/focal-point-style.js","webpack://atrc/./node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","webpack://atrc/./node_modules/@wordpress/block-editor/build-module/components/duotone/utils.js","webpack://atrc/./node_modules/@wordpress/block-editor/build-module/components/global-styles/use-global-styles-output.js","webpack://atrc/./node_modules/@wordpress/block-editor/build-module/components/iframe/index.js","webpack://atrc/./node_modules/@wordpress/block-editor/build-module/components/inserter/preview-panel.js","webpack://atrc/./node_modules/@wordpress/components/build-module/navigator/navigator/component.js","webpack://atrc/./node_modules/@wordpress/block-editor/build-module/hooks/layout-child.js","webpack://atrc/./node_modules/@wordpress/blocks/build-module/api/serializer.js","webpack://atrc/./node_modules/@wordpress/blocks/build-module/api/raw-handling/markdown-converter.js","webpack://atrc/./node_modules/@wordpress/components/build-module/color-picker/styles.js","webpack://atrc/./node_modules/@wordpress/components/build-module/date-time/date/styles.js","webpack://atrc/./node_modules/@wordpress/components/build-module/spinner/styles.js","webpack://atrc/./node_modules/hoist-non-react-statics/node_modules/react-is/cjs/react-is.production.min.js","webpack://atrc/./node_modules/is-plain-object/dist/is-plain-object.mjs","webpack://atrc/./node_modules/react-is/cjs/react-is.production.min.js","webpack://atrc/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { justifyLeft, justifyCenter, justifyRight, justifySpaceBetween, justifyStretch, arrowRight, arrowDown } from '@wordpress/icons';\nimport { ToggleControl, Flex, FlexItem, __experimentalToggleGroupControl as ToggleGroupControl, __experimentalToggleGroupControlOptionIcon as ToggleGroupControlOptionIcon } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport { appendSelectors, getBlockGapCSS } from './utils';\nimport { getGapCSSValue } from '../hooks/gap';\nimport { BlockControls, JustifyContentControl, BlockVerticalAlignmentControl } from '../components';\nimport { shouldSkipSerialization } from '../hooks/utils';\nimport { LAYOUT_DEFINITIONS } from './definitions';\n\n// Used with the default, horizontal flex orientation.\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nconst justifyContentMap = {\n  left: 'flex-start',\n  right: 'flex-end',\n  center: 'center',\n  'space-between': 'space-between'\n};\n\n// Used with the vertical (column) flex orientation.\nconst alignItemsMap = {\n  left: 'flex-start',\n  right: 'flex-end',\n  center: 'center',\n  stretch: 'stretch'\n};\nconst verticalAlignmentMap = {\n  top: 'flex-start',\n  center: 'center',\n  bottom: 'flex-end',\n  stretch: 'stretch',\n  'space-between': 'space-between'\n};\nconst flexWrapOptions = ['wrap', 'nowrap'];\nexport default {\n  name: 'flex',\n  label: __('Flex'),\n  inspectorControls: function FlexLayoutInspectorControls({\n    layout = {},\n    onChange,\n    layoutBlockSupport = {}\n  }) {\n    const {\n      allowOrientation = true\n    } = layoutBlockSupport;\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsxs(Flex, {\n        children: [/*#__PURE__*/_jsx(FlexItem, {\n          children: /*#__PURE__*/_jsx(FlexLayoutJustifyContentControl, {\n            layout: layout,\n            onChange: onChange\n          })\n        }), /*#__PURE__*/_jsx(FlexItem, {\n          children: allowOrientation && /*#__PURE__*/_jsx(OrientationControl, {\n            layout: layout,\n            onChange: onChange\n          })\n        })]\n      }), /*#__PURE__*/_jsx(FlexWrapControl, {\n        layout: layout,\n        onChange: onChange\n      })]\n    });\n  },\n  toolBarControls: function FlexLayoutToolbarControls({\n    layout = {},\n    onChange,\n    layoutBlockSupport\n  }) {\n    if (layoutBlockSupport?.allowSwitching) {\n      return null;\n    }\n    const {\n      allowVerticalAlignment = true\n    } = layoutBlockSupport;\n    return /*#__PURE__*/_jsxs(BlockControls, {\n      group: \"block\",\n      __experimentalShareWithChildBlocks: true,\n      children: [/*#__PURE__*/_jsx(FlexLayoutJustifyContentControl, {\n        layout: layout,\n        onChange: onChange,\n        isToolbar: true\n      }), allowVerticalAlignment && /*#__PURE__*/_jsx(FlexLayoutVerticalAlignmentControl, {\n        layout: layout,\n        onChange: onChange\n      })]\n    });\n  },\n  getLayoutStyle: function getLayoutStyle({\n    selector,\n    layout,\n    style,\n    blockName,\n    hasBlockGapSupport,\n    layoutDefinitions = LAYOUT_DEFINITIONS\n  }) {\n    const {\n      orientation = 'horizontal'\n    } = layout;\n\n    // If a block's block.json skips serialization for spacing or spacing.blockGap,\n    // don't apply the user-defined value to the styles.\n    const blockGapValue = style?.spacing?.blockGap && !shouldSkipSerialization(blockName, 'spacing', 'blockGap') ? getGapCSSValue(style?.spacing?.blockGap, '0.5em') : undefined;\n    const justifyContent = justifyContentMap[layout.justifyContent];\n    const flexWrap = flexWrapOptions.includes(layout.flexWrap) ? layout.flexWrap : 'wrap';\n    const verticalAlignment = verticalAlignmentMap[layout.verticalAlignment];\n    const alignItems = alignItemsMap[layout.justifyContent] || alignItemsMap.left;\n    let output = '';\n    const rules = [];\n    if (flexWrap && flexWrap !== 'wrap') {\n      rules.push(`flex-wrap: ${flexWrap}`);\n    }\n    if (orientation === 'horizontal') {\n      if (verticalAlignment) {\n        rules.push(`align-items: ${verticalAlignment}`);\n      }\n      if (justifyContent) {\n        rules.push(`justify-content: ${justifyContent}`);\n      }\n    } else {\n      if (verticalAlignment) {\n        rules.push(`justify-content: ${verticalAlignment}`);\n      }\n      rules.push('flex-direction: column');\n      rules.push(`align-items: ${alignItems}`);\n    }\n    if (rules.length) {\n      output = `${appendSelectors(selector)} {\n\t\t\t\t${rules.join('; ')};\n\t\t\t}`;\n    }\n\n    // Output blockGap styles based on rules contained in layout definitions in theme.json.\n    if (hasBlockGapSupport && blockGapValue) {\n      output += getBlockGapCSS(selector, layoutDefinitions, 'flex', blockGapValue);\n    }\n    return output;\n  },\n  getOrientation(layout) {\n    const {\n      orientation = 'horizontal'\n    } = layout;\n    return orientation;\n  },\n  getAlignments() {\n    return [];\n  }\n};\nfunction FlexLayoutVerticalAlignmentControl({\n  layout,\n  onChange\n}) {\n  const {\n    orientation = 'horizontal'\n  } = layout;\n  const defaultVerticalAlignment = orientation === 'horizontal' ? verticalAlignmentMap.center : verticalAlignmentMap.top;\n  const {\n    verticalAlignment = defaultVerticalAlignment\n  } = layout;\n  const onVerticalAlignmentChange = value => {\n    onChange({\n      ...layout,\n      verticalAlignment: value\n    });\n  };\n  return /*#__PURE__*/_jsx(BlockVerticalAlignmentControl, {\n    onChange: onVerticalAlignmentChange,\n    value: verticalAlignment,\n    controls: orientation === 'horizontal' ? ['top', 'center', 'bottom', 'stretch'] : ['top', 'center', 'bottom', 'space-between']\n  });\n}\nconst POPOVER_PROPS = {\n  placement: 'bottom-start'\n};\nfunction FlexLayoutJustifyContentControl({\n  layout,\n  onChange,\n  isToolbar = false\n}) {\n  const {\n    justifyContent = 'left',\n    orientation = 'horizontal'\n  } = layout;\n  const onJustificationChange = value => {\n    onChange({\n      ...layout,\n      justifyContent: value\n    });\n  };\n  const allowedControls = ['left', 'center', 'right'];\n  if (orientation === 'horizontal') {\n    allowedControls.push('space-between');\n  } else {\n    allowedControls.push('stretch');\n  }\n  if (isToolbar) {\n    return /*#__PURE__*/_jsx(JustifyContentControl, {\n      allowedControls: allowedControls,\n      value: justifyContent,\n      onChange: onJustificationChange,\n      popoverProps: POPOVER_PROPS\n    });\n  }\n  const justificationOptions = [{\n    value: 'left',\n    icon: justifyLeft,\n    label: __('Justify items left')\n  }, {\n    value: 'center',\n    icon: justifyCenter,\n    label: __('Justify items center')\n  }, {\n    value: 'right',\n    icon: justifyRight,\n    label: __('Justify items right')\n  }];\n  if (orientation === 'horizontal') {\n    justificationOptions.push({\n      value: 'space-between',\n      icon: justifySpaceBetween,\n      label: __('Space between items')\n    });\n  } else {\n    justificationOptions.push({\n      value: 'stretch',\n      icon: justifyStretch,\n      label: __('Stretch items')\n    });\n  }\n  return /*#__PURE__*/_jsx(ToggleGroupControl, {\n    __next40pxDefaultSize: true,\n    __nextHasNoMarginBottom: true,\n    label: __('Justification'),\n    value: justifyContent,\n    onChange: onJustificationChange,\n    className: \"block-editor-hooks__flex-layout-justification-controls\",\n    children: justificationOptions.map(({\n      value,\n      icon,\n      label\n    }) => {\n      return /*#__PURE__*/_jsx(ToggleGroupControlOptionIcon, {\n        value: value,\n        icon: icon,\n        label: label\n      }, value);\n    })\n  });\n}\nfunction FlexWrapControl({\n  layout,\n  onChange\n}) {\n  const {\n    flexWrap = 'wrap'\n  } = layout;\n  return /*#__PURE__*/_jsx(ToggleControl, {\n    __nextHasNoMarginBottom: true,\n    label: __('Allow to wrap to multiple lines'),\n    onChange: value => {\n      onChange({\n        ...layout,\n        flexWrap: value ? 'wrap' : 'nowrap'\n      });\n    },\n    checked: flexWrap === 'wrap'\n  });\n}\nfunction OrientationControl({\n  layout,\n  onChange\n}) {\n  const {\n    orientation = 'horizontal',\n    verticalAlignment,\n    justifyContent\n  } = layout;\n  return /*#__PURE__*/_jsxs(ToggleGroupControl, {\n    __next40pxDefaultSize: true,\n    __nextHasNoMarginBottom: true,\n    className: \"block-editor-hooks__flex-layout-orientation-controls\",\n    label: __('Orientation'),\n    value: orientation,\n    onChange: value => {\n      // Make sure the vertical alignment and justification are compatible with the new orientation.\n      let newVerticalAlignment = verticalAlignment;\n      let newJustification = justifyContent;\n      if (value === 'horizontal') {\n        if (verticalAlignment === 'space-between') {\n          newVerticalAlignment = 'center';\n        }\n        if (justifyContent === 'stretch') {\n          newJustification = 'left';\n        }\n      } else {\n        if (verticalAlignment === 'stretch') {\n          newVerticalAlignment = 'top';\n        }\n        if (justifyContent === 'space-between') {\n          newJustification = 'left';\n        }\n      }\n      return onChange({\n        ...layout,\n        orientation: value,\n        verticalAlignment: newVerticalAlignment,\n        justifyContent: newJustification\n      });\n    },\n    children: [/*#__PURE__*/_jsx(ToggleGroupControlOptionIcon, {\n      icon: arrowRight,\n      value: \"horizontal\",\n      label: __('Horizontal')\n    }), /*#__PURE__*/_jsx(ToggleGroupControlOptionIcon, {\n      icon: arrowDown,\n      value: \"vertical\",\n      label: __('Vertical')\n    })]\n  });\n}\n//# sourceMappingURL=flex.js.map","/**\n * WordPress dependencies\n */\nimport { __experimentalUseCustomUnits as useCustomUnits, __experimentalUnitControl as UnitControl, __experimentalToggleGroupControl as ToggleGroupControl, __experimentalToggleGroupControlOptionIcon as ToggleGroupControlOptionIcon, __experimentalInputControlPrefixWrapper as InputControlPrefixWrapper, __experimentalVStack as VStack } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { Icon, alignNone, stretchWide, justifyLeft, justifyCenter, justifyRight } from '@wordpress/icons';\nimport { getCSSRules } from '@wordpress/style-engine';\n\n/**\n * Internal dependencies\n */\nimport { useSettings } from '../components/use-settings';\nimport { appendSelectors, getBlockGapCSS, getAlignmentsInfo } from './utils';\nimport { getGapCSSValue } from '../hooks/gap';\nimport { BlockControls, JustifyContentControl } from '../components';\nimport { shouldSkipSerialization } from '../hooks/utils';\nimport { LAYOUT_DEFINITIONS } from './definitions';\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default {\n  name: 'constrained',\n  label: __('Constrained'),\n  inspectorControls: function DefaultLayoutInspectorControls({\n    layout,\n    onChange,\n    layoutBlockSupport = {}\n  }) {\n    const {\n      wideSize,\n      contentSize,\n      justifyContent = 'center'\n    } = layout;\n    const {\n      allowJustification = true,\n      allowCustomContentAndWideSize = true\n    } = layoutBlockSupport;\n    const onJustificationChange = value => {\n      onChange({\n        ...layout,\n        justifyContent: value\n      });\n    };\n    const justificationOptions = [{\n      value: 'left',\n      icon: justifyLeft,\n      label: __('Justify items left')\n    }, {\n      value: 'center',\n      icon: justifyCenter,\n      label: __('Justify items center')\n    }, {\n      value: 'right',\n      icon: justifyRight,\n      label: __('Justify items right')\n    }];\n    const [availableUnits] = useSettings('spacing.units');\n    const units = useCustomUnits({\n      availableUnits: availableUnits || ['%', 'px', 'em', 'rem', 'vw']\n    });\n    return /*#__PURE__*/_jsxs(VStack, {\n      spacing: 4,\n      className: \"block-editor-hooks__layout-constrained\",\n      children: [allowCustomContentAndWideSize && /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(UnitControl, {\n          __next40pxDefaultSize: true,\n          label: __('Content width'),\n          labelPosition: \"top\",\n          value: contentSize || wideSize || '',\n          onChange: nextWidth => {\n            nextWidth = 0 > parseFloat(nextWidth) ? '0' : nextWidth;\n            onChange({\n              ...layout,\n              contentSize: nextWidth\n            });\n          },\n          units: units,\n          prefix: /*#__PURE__*/_jsx(InputControlPrefixWrapper, {\n            variant: \"icon\",\n            children: /*#__PURE__*/_jsx(Icon, {\n              icon: alignNone\n            })\n          })\n        }), /*#__PURE__*/_jsx(UnitControl, {\n          __next40pxDefaultSize: true,\n          label: __('Wide width'),\n          labelPosition: \"top\",\n          value: wideSize || contentSize || '',\n          onChange: nextWidth => {\n            nextWidth = 0 > parseFloat(nextWidth) ? '0' : nextWidth;\n            onChange({\n              ...layout,\n              wideSize: nextWidth\n            });\n          },\n          units: units,\n          prefix: /*#__PURE__*/_jsx(InputControlPrefixWrapper, {\n            variant: \"icon\",\n            children: /*#__PURE__*/_jsx(Icon, {\n              icon: stretchWide\n            })\n          })\n        }), /*#__PURE__*/_jsx(\"p\", {\n          className: \"block-editor-hooks__layout-constrained-helptext\",\n          children: __('Customize the width for all elements that are assigned to the center or wide columns.')\n        })]\n      }), allowJustification && /*#__PURE__*/_jsx(ToggleGroupControl, {\n        __next40pxDefaultSize: true,\n        __nextHasNoMarginBottom: true,\n        label: __('Justification'),\n        value: justifyContent,\n        onChange: onJustificationChange,\n        children: justificationOptions.map(({\n          value,\n          icon,\n          label\n        }) => {\n          return /*#__PURE__*/_jsx(ToggleGroupControlOptionIcon, {\n            value: value,\n            icon: icon,\n            label: label\n          }, value);\n        })\n      })]\n    });\n  },\n  toolBarControls: function DefaultLayoutToolbarControls({\n    layout = {},\n    onChange,\n    layoutBlockSupport\n  }) {\n    const {\n      allowJustification = true\n    } = layoutBlockSupport;\n    if (!allowJustification) {\n      return null;\n    }\n    return /*#__PURE__*/_jsx(BlockControls, {\n      group: \"block\",\n      __experimentalShareWithChildBlocks: true,\n      children: /*#__PURE__*/_jsx(DefaultLayoutJustifyContentControl, {\n        layout: layout,\n        onChange: onChange\n      })\n    });\n  },\n  getLayoutStyle: function getLayoutStyle({\n    selector,\n    layout = {},\n    style,\n    blockName,\n    hasBlockGapSupport,\n    layoutDefinitions = LAYOUT_DEFINITIONS\n  }) {\n    const {\n      contentSize,\n      wideSize,\n      justifyContent\n    } = layout;\n    const blockGapStyleValue = getGapCSSValue(style?.spacing?.blockGap);\n\n    // If a block's block.json skips serialization for spacing or\n    // spacing.blockGap, don't apply the user-defined value to the styles.\n    let blockGapValue = '';\n    if (!shouldSkipSerialization(blockName, 'spacing', 'blockGap')) {\n      // If an object is provided only use the 'top' value for this kind of gap.\n      if (blockGapStyleValue?.top) {\n        blockGapValue = getGapCSSValue(blockGapStyleValue?.top);\n      } else if (typeof blockGapStyleValue === 'string') {\n        blockGapValue = getGapCSSValue(blockGapStyleValue);\n      }\n    }\n    const marginLeft = justifyContent === 'left' ? '0 !important' : 'auto !important';\n    const marginRight = justifyContent === 'right' ? '0 !important' : 'auto !important';\n    let output = !!contentSize || !!wideSize ? `\n\t\t\t\t\t${appendSelectors(selector, '> :where(:not(.alignleft):not(.alignright):not(.alignfull))')} {\n\t\t\t\t\t\tmax-width: ${contentSize !== null && contentSize !== void 0 ? contentSize : wideSize};\n\t\t\t\t\t\tmargin-left: ${marginLeft};\n\t\t\t\t\t\tmargin-right: ${marginRight};\n\t\t\t\t\t}\n\t\t\t\t\t${appendSelectors(selector, '> .alignwide')}  {\n\t\t\t\t\t\tmax-width: ${wideSize !== null && wideSize !== void 0 ? wideSize : contentSize};\n\t\t\t\t\t}\n\t\t\t\t\t${appendSelectors(selector, '> .alignfull')} {\n\t\t\t\t\t\tmax-width: none;\n\t\t\t\t\t}\n\t\t\t\t` : '';\n    if (justifyContent === 'left') {\n      output += `${appendSelectors(selector, '> :where(:not(.alignleft):not(.alignright):not(.alignfull))')}\n\t\t\t{ margin-left: ${marginLeft}; }`;\n    } else if (justifyContent === 'right') {\n      output += `${appendSelectors(selector, '> :where(:not(.alignleft):not(.alignright):not(.alignfull))')}\n\t\t\t{ margin-right: ${marginRight}; }`;\n    }\n\n    // If there is custom padding, add negative margins for alignfull blocks.\n    if (style?.spacing?.padding) {\n      // The style object might be storing a preset so we need to make sure we get a usable value.\n      const paddingValues = getCSSRules(style);\n      paddingValues.forEach(rule => {\n        if (rule.key === 'paddingRight') {\n          // Add unit if 0, to avoid calc(0 * -1) which is invalid.\n          const paddingRightValue = rule.value === '0' ? '0px' : rule.value;\n          output += `\n\t\t\t\t\t${appendSelectors(selector, '> .alignfull')} {\n\t\t\t\t\t\tmargin-right: calc(${paddingRightValue} * -1);\n\t\t\t\t\t}\n\t\t\t\t\t`;\n        } else if (rule.key === 'paddingLeft') {\n          // Add unit if 0, to avoid calc(0 * -1) which is invalid.\n          const paddingLeftValue = rule.value === '0' ? '0px' : rule.value;\n          output += `\n\t\t\t\t\t${appendSelectors(selector, '> .alignfull')} {\n\t\t\t\t\t\tmargin-left: calc(${paddingLeftValue} * -1);\n\t\t\t\t\t}\n\t\t\t\t\t`;\n        }\n      });\n    }\n\n    // Output blockGap styles based on rules contained in layout definitions in theme.json.\n    if (hasBlockGapSupport && blockGapValue) {\n      output += getBlockGapCSS(selector, layoutDefinitions, 'constrained', blockGapValue);\n    }\n    return output;\n  },\n  getOrientation() {\n    return 'vertical';\n  },\n  getAlignments(layout) {\n    const alignmentInfo = getAlignmentsInfo(layout);\n    if (layout.alignments !== undefined) {\n      if (!layout.alignments.includes('none')) {\n        layout.alignments.unshift('none');\n      }\n      return layout.alignments.map(alignment => ({\n        name: alignment,\n        info: alignmentInfo[alignment]\n      }));\n    }\n    const {\n      contentSize,\n      wideSize\n    } = layout;\n    const alignments = [{\n      name: 'left'\n    }, {\n      name: 'center'\n    }, {\n      name: 'right'\n    }];\n    if (contentSize) {\n      alignments.unshift({\n        name: 'full'\n      });\n    }\n    if (wideSize) {\n      alignments.unshift({\n        name: 'wide',\n        info: alignmentInfo.wide\n      });\n    }\n    alignments.unshift({\n      name: 'none',\n      info: alignmentInfo.none\n    });\n    return alignments;\n  }\n};\nconst POPOVER_PROPS = {\n  placement: 'bottom-start'\n};\nfunction DefaultLayoutJustifyContentControl({\n  layout,\n  onChange\n}) {\n  const {\n    justifyContent = 'center'\n  } = layout;\n  const onJustificationChange = value => {\n    onChange({\n      ...layout,\n      justifyContent: value\n    });\n  };\n  const allowedControls = ['left', 'center', 'right'];\n  return /*#__PURE__*/_jsx(JustifyContentControl, {\n    allowedControls: allowedControls,\n    value: justifyContent,\n    onChange: onJustificationChange,\n    popoverProps: POPOVER_PROPS\n  });\n}\n//# sourceMappingURL=constrained.js.map","import _styled from \"@emotion/styled/base\";\n/**\n * External dependencies\n */\n\n/**\n * Internal dependencies\n */\nimport { CONFIG } from '../../utils';\nexport const PointerCircle = /*#__PURE__*/_styled(\"div\", process.env.NODE_ENV === \"production\" ? {\n  target: \"e19snlhg0\"\n} : {\n  target: \"e19snlhg0\",\n  label: \"PointerCircle\"\n})(\"background-color:transparent;cursor:grab;height:40px;margin:-20px 0 0 -20px;position:absolute;user-select:none;width:40px;will-change:transform;z-index:10000;background:rgba( 255, 255, 255, 0.4 );border:1px solid rgba( 255, 255, 255, 0.4 );border-radius:\", CONFIG.radiusRound, \";backdrop-filter:blur( 16px ) saturate( 180% );box-shadow:rgb( 0 0 0 / 10% ) 0px 0px 8px;@media not ( prefers-reduced-motion ){transition:transform 100ms linear;}\", ({\n  isDragging\n}) => isDragging && `\n\t\t\tbox-shadow: rgb( 0 0 0 / 12% ) 0px 0px 10px;\n\t\t\ttransform: scale( 1.1 );\n\t\t\tcursor: grabbing;\n\t\t\t`, \";\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvZm9jYWwtcG9pbnQtcGlja2VyL3N0eWxlcy9mb2NhbC1wb2ludC1zdHlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFVdUMiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9mb2NhbC1wb2ludC1waWNrZXIvc3R5bGVzL2ZvY2FsLXBvaW50LXN0eWxlLnRzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuXG4vKipcbiAqIEludGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBDT05GSUcgfSBmcm9tICcuLi8uLi91dGlscyc7XG5cbmV4cG9ydCBjb25zdCBQb2ludGVyQ2lyY2xlID0gc3R5bGVkLmRpdmBcblx0YmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5cdGN1cnNvcjogZ3JhYjtcblx0aGVpZ2h0OiA0MHB4O1xuXHRtYXJnaW46IC0yMHB4IDAgMCAtMjBweDtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR1c2VyLXNlbGVjdDogbm9uZTtcblx0d2lkdGg6IDQwcHg7XG5cdHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm07XG5cdHotaW5kZXg6IDEwMDAwO1xuXHRiYWNrZ3JvdW5kOiByZ2JhKCAyNTUsIDI1NSwgMjU1LCAwLjQgKTtcblx0Ym9yZGVyOiAxcHggc29saWQgcmdiYSggMjU1LCAyNTUsIDI1NSwgMC40ICk7XG5cdGJvcmRlci1yYWRpdXM6ICR7IENPTkZJRy5yYWRpdXNSb3VuZCB9O1xuXHRiYWNrZHJvcC1maWx0ZXI6IGJsdXIoIDE2cHggKSBzYXR1cmF0ZSggMTgwJSApO1xuXHRib3gtc2hhZG93OiByZ2IoIDAgMCAwIC8gMTAlICkgMHB4IDBweCA4cHg7XG5cblx0QG1lZGlhIG5vdCAoIHByZWZlcnMtcmVkdWNlZC1tb3Rpb24gKSB7XG5cdFx0dHJhbnNpdGlvbjogdHJhbnNmb3JtIDEwMG1zIGxpbmVhcjtcblx0fVxuXG5cdCR7ICggeyBpc0RyYWdnaW5nIH06IHsgaXNEcmFnZ2luZzogYm9vbGVhbiB9ICkgPT5cblx0XHRpc0RyYWdnaW5nICYmXG5cdFx0YFxuXHRcdFx0Ym94LXNoYWRvdzogcmdiKCAwIDAgMCAvIDEyJSApIDBweCAwcHggMTBweDtcblx0XHRcdHRyYW5zZm9ybTogc2NhbGUoIDEuMSApO1xuXHRcdFx0Y3Vyc29yOiBncmFiYmluZztcblx0XHRcdGAgfVxuYDtcbiJdfQ== */\"));\n//# sourceMappingURL=focal-point-style.js.map","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","/**\n * External dependencies\n */\nimport { colord } from 'colord';\n\n/**\n * Convert a list of colors to an object of R, G, and B values.\n *\n * @param {string[]} colors Array of RBG color strings.\n *\n * @return {Object} R, G, and B values.\n */\nexport function getValuesFromColors(colors = []) {\n  const values = {\n    r: [],\n    g: [],\n    b: [],\n    a: []\n  };\n  colors.forEach(color => {\n    const rgbColor = colord(color).toRgb();\n    values.r.push(rgbColor.r / 255);\n    values.g.push(rgbColor.g / 255);\n    values.b.push(rgbColor.b / 255);\n    values.a.push(rgbColor.a);\n  });\n  return values;\n}\n\n/**\n * Stylesheet for disabling a global styles duotone filter.\n *\n * @param {string} selector Selector to disable the filter for.\n *\n * @return {string} Filter none style.\n */\nexport function getDuotoneUnsetStylesheet(selector) {\n  return `${selector}{filter:none}`;\n}\n\n/**\n * SVG and stylesheet needed for rendering the duotone filter.\n *\n * @param {string} selector Selector to apply the filter to.\n * @param {string} id       Unique id for this duotone filter.\n *\n * @return {string} Duotone filter style.\n */\nexport function getDuotoneStylesheet(selector, id) {\n  return `${selector}{filter:url(#${id})}`;\n}\n\n/**\n * The SVG part of the duotone filter.\n *\n * @param {string}   id     Unique id for this duotone filter.\n * @param {string[]} colors Color strings from dark to light.\n *\n * @return {string} Duotone SVG.\n */\nexport function getDuotoneFilter(id, colors) {\n  const values = getValuesFromColors(colors);\n  return `\n<svg\n\txmlns:xlink=\"http://www.w3.org/1999/xlink\"\n\tviewBox=\"0 0 0 0\"\n\twidth=\"0\"\n\theight=\"0\"\n\tfocusable=\"false\"\n\trole=\"none\"\n\taria-hidden=\"true\"\n\tstyle=\"visibility: hidden; position: absolute; left: -9999px; overflow: hidden;\"\n>\n\t<defs>\n\t\t<filter id=\"${id}\">\n\t\t\t<!--\n\t\t\t\tUse sRGB instead of linearRGB so transparency looks correct.\n\t\t\t\tUse perceptual brightness to convert to grayscale.\n\t\t\t-->\n\t\t\t<feColorMatrix color-interpolation-filters=\"sRGB\" type=\"matrix\" values=\" .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 .299 .587 .114 0 0 \"></feColorMatrix>\n\t\t\t<!-- Use sRGB instead of linearRGB to be consistent with how CSS gradients work. -->\n\t\t\t<feComponentTransfer color-interpolation-filters=\"sRGB\">\n\t\t\t\t<feFuncR type=\"table\" tableValues=\"${values.r.join(' ')}\"></feFuncR>\n\t\t\t\t<feFuncG type=\"table\" tableValues=\"${values.g.join(' ')}\"></feFuncG>\n\t\t\t\t<feFuncB type=\"table\" tableValues=\"${values.b.join(' ')}\"></feFuncB>\n\t\t\t\t<feFuncA type=\"table\" tableValues=\"${values.a.join(' ')}\"></feFuncA>\n\t\t\t</feComponentTransfer>\n\t\t\t<!-- Re-mask the image with the original transparency since the feColorMatrix above loses that information. -->\n\t\t\t<feComposite in2=\"SourceGraphic\" operator=\"in\"></feComposite>\n\t\t</filter>\n\t</defs>\n</svg>`;\n}\n//# sourceMappingURL=utils.js.map","/**\n * WordPress dependencies\n */\nimport { __EXPERIMENTAL_STYLE_PROPERTY as STYLE_PROPERTY, __EXPERIMENTAL_ELEMENTS as ELEMENTS, getBlockSupport, getBlockTypes, store as blocksStore } from '@wordpress/blocks';\nimport { useSelect } from '@wordpress/data';\nimport { useContext, useMemo } from '@wordpress/element';\nimport { getCSSRules, getCSSValueFromRawStyle } from '@wordpress/style-engine';\nimport { privateApis as componentsPrivateApis } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport { PRESET_METADATA, ROOT_BLOCK_SELECTOR, ROOT_CSS_PROPERTIES_SELECTOR, scopeSelector, scopeFeatureSelectors, appendToSelector, getBlockStyleVariationSelector, getResolvedValue } from './utils';\nimport { getBlockCSSSelector } from './get-block-css-selector';\nimport { getTypographyFontSizeValue } from './typography-utils';\nimport { GlobalStylesContext } from './context';\nimport { useGlobalSetting } from './hooks';\nimport { getDuotoneFilter } from '../duotone/utils';\nimport { getGapCSSValue } from '../../hooks/gap';\nimport { setBackgroundStyleDefaults } from '../../hooks/background';\nimport { store as blockEditorStore } from '../../store';\nimport { LAYOUT_DEFINITIONS } from '../../layouts/definitions';\nimport { getValueFromObjectPath, setImmutably } from '../../utils/object';\nimport { unlock } from '../../lock-unlock';\n\n// Elements that rely on class names in their selectors.\nconst ELEMENT_CLASS_NAMES = {\n  button: 'wp-element-button',\n  caption: 'wp-element-caption'\n};\n\n// List of block support features that can have their related styles\n// generated under their own feature level selector rather than the block's.\nconst BLOCK_SUPPORT_FEATURE_LEVEL_SELECTORS = {\n  __experimentalBorder: 'border',\n  color: 'color',\n  spacing: 'spacing',\n  typography: 'typography'\n};\nconst {\n  kebabCase\n} = unlock(componentsPrivateApis);\n\n/**\n * Transform given preset tree into a set of style declarations.\n *\n * @param {Object} blockPresets\n * @param {Object} mergedSettings Merged theme.json settings.\n *\n * @return {Array<Object>} An array of style declarations.\n */\nfunction getPresetsDeclarations(blockPresets = {}, mergedSettings) {\n  return PRESET_METADATA.reduce((declarations, {\n    path,\n    valueKey,\n    valueFunc,\n    cssVarInfix\n  }) => {\n    const presetByOrigin = getValueFromObjectPath(blockPresets, path, []);\n    ['default', 'theme', 'custom'].forEach(origin => {\n      if (presetByOrigin[origin]) {\n        presetByOrigin[origin].forEach(value => {\n          if (valueKey && !valueFunc) {\n            declarations.push(`--wp--preset--${cssVarInfix}--${kebabCase(value.slug)}: ${value[valueKey]}`);\n          } else if (valueFunc && typeof valueFunc === 'function') {\n            declarations.push(`--wp--preset--${cssVarInfix}--${kebabCase(value.slug)}: ${valueFunc(value, mergedSettings)}`);\n          }\n        });\n      }\n    });\n    return declarations;\n  }, []);\n}\n\n/**\n * Transform given preset tree into a set of preset class declarations.\n *\n * @param {?string} blockSelector\n * @param {Object}  blockPresets\n * @return {string} CSS declarations for the preset classes.\n */\nfunction getPresetsClasses(blockSelector = '*', blockPresets = {}) {\n  return PRESET_METADATA.reduce((declarations, {\n    path,\n    cssVarInfix,\n    classes\n  }) => {\n    if (!classes) {\n      return declarations;\n    }\n    const presetByOrigin = getValueFromObjectPath(blockPresets, path, []);\n    ['default', 'theme', 'custom'].forEach(origin => {\n      if (presetByOrigin[origin]) {\n        presetByOrigin[origin].forEach(({\n          slug\n        }) => {\n          classes.forEach(({\n            classSuffix,\n            propertyName\n          }) => {\n            const classSelectorToUse = `.has-${kebabCase(slug)}-${classSuffix}`;\n            const selectorToUse = blockSelector.split(',') // Selector can be \"h1, h2, h3\"\n            .map(selector => `${selector}${classSelectorToUse}`).join(',');\n            const value = `var(--wp--preset--${cssVarInfix}--${kebabCase(slug)})`;\n            declarations += `${selectorToUse}{${propertyName}: ${value} !important;}`;\n          });\n        });\n      }\n    });\n    return declarations;\n  }, '');\n}\nfunction getPresetsSvgFilters(blockPresets = {}) {\n  return PRESET_METADATA.filter(\n  // Duotone are the only type of filters for now.\n  metadata => metadata.path.at(-1) === 'duotone').flatMap(metadata => {\n    const presetByOrigin = getValueFromObjectPath(blockPresets, metadata.path, {});\n    return ['default', 'theme'].filter(origin => presetByOrigin[origin]).flatMap(origin => presetByOrigin[origin].map(preset => getDuotoneFilter(`wp-duotone-${preset.slug}`, preset.colors))).join('');\n  });\n}\nfunction flattenTree(input = {}, prefix, token) {\n  let result = [];\n  Object.keys(input).forEach(key => {\n    const newKey = prefix + kebabCase(key.replace('/', '-'));\n    const newLeaf = input[key];\n    if (newLeaf instanceof Object) {\n      const newPrefix = newKey + token;\n      result = [...result, ...flattenTree(newLeaf, newPrefix, token)];\n    } else {\n      result.push(`${newKey}: ${newLeaf}`);\n    }\n  });\n  return result;\n}\n\n/**\n * Gets variation selector string from feature selector.\n *\n * @param {string} featureSelector        The feature selector.\n *\n * @param {string} styleVariationSelector The style variation selector.\n * @return {string} Combined selector string.\n */\nfunction concatFeatureVariationSelectorString(featureSelector, styleVariationSelector) {\n  const featureSelectors = featureSelector.split(',');\n  const combinedSelectors = [];\n  featureSelectors.forEach(selector => {\n    combinedSelectors.push(`${styleVariationSelector.trim()}${selector.trim()}`);\n  });\n  return combinedSelectors.join(', ');\n}\n\n/**\n * Generate style declarations for a block's custom feature and subfeature\n * selectors.\n *\n * NOTE: The passed `styles` object will be mutated by this function.\n *\n * @param {Object} selectors Custom selectors object for a block.\n * @param {Object} styles    A block's styles object.\n *\n * @return {Object} Style declarations.\n */\nconst getFeatureDeclarations = (selectors, styles) => {\n  const declarations = {};\n  Object.entries(selectors).forEach(([feature, selector]) => {\n    // We're only processing features/subfeatures that have styles.\n    if (feature === 'root' || !styles?.[feature]) {\n      return;\n    }\n    const isShorthand = typeof selector === 'string';\n\n    // If we have a selector object instead of shorthand process it.\n    if (!isShorthand) {\n      Object.entries(selector).forEach(([subfeature, subfeatureSelector]) => {\n        // Don't process root feature selector yet or any\n        // subfeature that doesn't have a style.\n        if (subfeature === 'root' || !styles?.[feature][subfeature]) {\n          return;\n        }\n\n        // Create a temporary styles object and build\n        // declarations for subfeature.\n        const subfeatureStyles = {\n          [feature]: {\n            [subfeature]: styles[feature][subfeature]\n          }\n        };\n        const newDeclarations = getStylesDeclarations(subfeatureStyles);\n\n        // Merge new declarations in with any others that\n        // share the same selector.\n        declarations[subfeatureSelector] = [...(declarations[subfeatureSelector] || []), ...newDeclarations];\n\n        // Remove the subfeature's style now it will be\n        // included under its own selector not the block's.\n        delete styles[feature][subfeature];\n      });\n    }\n\n    // Now subfeatures have been processed and removed, we can\n    // process root, or shorthand, feature selectors.\n    if (isShorthand || selector.root) {\n      const featureSelector = isShorthand ? selector : selector.root;\n\n      // Create temporary style object and build declarations for feature.\n      const featureStyles = {\n        [feature]: styles[feature]\n      };\n      const newDeclarations = getStylesDeclarations(featureStyles);\n\n      // Merge new declarations with any others that share the selector.\n      declarations[featureSelector] = [...(declarations[featureSelector] || []), ...newDeclarations];\n\n      // Remove the feature from the block's styles now as it will be\n      // included under its own selector not the block's.\n      delete styles[feature];\n    }\n  });\n  return declarations;\n};\n\n/**\n * Transform given style tree into a set of style declarations.\n *\n * @param {Object}  blockStyles         Block styles.\n *\n * @param {string}  selector            The selector these declarations should attach to.\n *\n * @param {boolean} useRootPaddingAlign Whether to use CSS custom properties in root selector.\n *\n * @param {Object}  tree                A theme.json tree containing layout definitions.\n *\n * @param {boolean} disableRootPadding  Whether to force disable the root padding styles.\n * @return {Array} An array of style declarations.\n */\nexport function getStylesDeclarations(blockStyles = {}, selector = '', useRootPaddingAlign, tree = {}, disableRootPadding = false) {\n  const isRoot = ROOT_BLOCK_SELECTOR === selector;\n  const output = Object.entries(STYLE_PROPERTY).reduce((declarations, [key, {\n    value,\n    properties,\n    useEngine,\n    rootOnly\n  }]) => {\n    if (rootOnly && !isRoot) {\n      return declarations;\n    }\n    const pathToValue = value;\n    if (pathToValue[0] === 'elements' || useEngine) {\n      return declarations;\n    }\n    const styleValue = getValueFromObjectPath(blockStyles, pathToValue);\n\n    // Root-level padding styles don't currently support strings with CSS shorthand values.\n    // This may change: https://github.com/WordPress/gutenberg/issues/40132.\n    if (key === '--wp--style--root--padding' && (typeof styleValue === 'string' || !useRootPaddingAlign)) {\n      return declarations;\n    }\n    if (properties && typeof styleValue !== 'string') {\n      Object.entries(properties).forEach(entry => {\n        const [name, prop] = entry;\n        if (!getValueFromObjectPath(styleValue, [prop], false)) {\n          // Do not create a declaration\n          // for sub-properties that don't have any value.\n          return;\n        }\n        const cssProperty = name.startsWith('--') ? name : kebabCase(name);\n        declarations.push(`${cssProperty}: ${getCSSValueFromRawStyle(getValueFromObjectPath(styleValue, [prop]))}`);\n      });\n    } else if (getValueFromObjectPath(blockStyles, pathToValue, false)) {\n      const cssProperty = key.startsWith('--') ? key : kebabCase(key);\n      declarations.push(`${cssProperty}: ${getCSSValueFromRawStyle(getValueFromObjectPath(blockStyles, pathToValue))}`);\n    }\n    return declarations;\n  }, []);\n\n  /*\n   * Preprocess background image values.\n   *\n   * Note: As we absorb more and more styles into the engine, we could simplify this function.\n   * A refactor is for the style engine to handle ref resolution (and possibly defaults)\n   * via a public util used internally and externally. Theme.json tree and defaults could be passed\n   * as options.\n   */\n  if (!!blockStyles.background) {\n    /*\n     * Resolve dynamic values before they are compiled by the style engine,\n     * which doesn't (yet) resolve dynamic values.\n     */\n    if (blockStyles.background?.backgroundImage) {\n      blockStyles.background.backgroundImage = getResolvedValue(blockStyles.background.backgroundImage, tree);\n    }\n\n    /*\n     * Set default values for block background styles.\n     * Top-level styles are an exception as they are applied to the body.\n     */\n    if (!isRoot && !!blockStyles.background?.backgroundImage?.id) {\n      blockStyles = {\n        ...blockStyles,\n        background: {\n          ...blockStyles.background,\n          ...setBackgroundStyleDefaults(blockStyles.background)\n        }\n      };\n    }\n  }\n  const extraRules = getCSSRules(blockStyles);\n  extraRules.forEach(rule => {\n    // Don't output padding properties if padding variables are set or if we're not editing a full template.\n    if (isRoot && (useRootPaddingAlign || disableRootPadding) && rule.key.startsWith('padding')) {\n      return;\n    }\n    const cssProperty = rule.key.startsWith('--') ? rule.key : kebabCase(rule.key);\n    let ruleValue = getResolvedValue(rule.value, tree, null);\n\n    // Calculate fluid typography rules where available.\n    if (cssProperty === 'font-size') {\n      /*\n       * getTypographyFontSizeValue() will check\n       * if fluid typography has been activated and also\n       * whether the incoming value can be converted to a fluid value.\n       * Values that already have a \"clamp()\" function will not pass the test,\n       * and therefore the original $value will be returned.\n       */\n      ruleValue = getTypographyFontSizeValue({\n        size: ruleValue\n      }, tree?.settings);\n    }\n\n    // For aspect ratio to work, other dimensions rules (and Cover block defaults) must be unset.\n    // This ensures that a fixed height does not override the aspect ratio.\n    if (cssProperty === 'aspect-ratio') {\n      output.push('min-height: unset');\n    }\n    output.push(`${cssProperty}: ${ruleValue}`);\n  });\n  return output;\n}\n\n/**\n * Get generated CSS for layout styles by looking up layout definitions provided\n * in theme.json, and outputting common layout styles, and specific blockGap values.\n *\n * @param {Object}  props\n * @param {Object}  props.layoutDefinitions     Layout definitions, keyed by layout type.\n * @param {Object}  props.style                 A style object containing spacing values.\n * @param {string}  props.selector              Selector used to group together layout styling rules.\n * @param {boolean} props.hasBlockGapSupport    Whether or not the theme opts-in to blockGap support.\n * @param {boolean} props.hasFallbackGapSupport Whether or not the theme allows fallback gap styles.\n * @param {?string} props.fallbackGapValue      An optional fallback gap value if no real gap value is available.\n * @return {string} Generated CSS rules for the layout styles.\n */\nexport function getLayoutStyles({\n  layoutDefinitions = LAYOUT_DEFINITIONS,\n  style,\n  selector,\n  hasBlockGapSupport,\n  hasFallbackGapSupport,\n  fallbackGapValue\n}) {\n  let ruleset = '';\n  let gapValue = hasBlockGapSupport ? getGapCSSValue(style?.spacing?.blockGap) : '';\n\n  // Ensure a fallback gap value for the root layout definitions,\n  // and use a fallback value if one is provided for the current block.\n  if (hasFallbackGapSupport) {\n    if (selector === ROOT_BLOCK_SELECTOR) {\n      gapValue = !gapValue ? '0.5em' : gapValue;\n    } else if (!hasBlockGapSupport && fallbackGapValue) {\n      gapValue = fallbackGapValue;\n    }\n  }\n  if (gapValue && layoutDefinitions) {\n    Object.values(layoutDefinitions).forEach(({\n      className,\n      name,\n      spacingStyles\n    }) => {\n      // Allow outputting fallback gap styles for flex layout type when block gap support isn't available.\n      if (!hasBlockGapSupport && 'flex' !== name && 'grid' !== name) {\n        return;\n      }\n      if (spacingStyles?.length) {\n        spacingStyles.forEach(spacingStyle => {\n          const declarations = [];\n          if (spacingStyle.rules) {\n            Object.entries(spacingStyle.rules).forEach(([cssProperty, cssValue]) => {\n              declarations.push(`${cssProperty}: ${cssValue ? cssValue : gapValue}`);\n            });\n          }\n          if (declarations.length) {\n            let combinedSelector = '';\n            if (!hasBlockGapSupport) {\n              // For fallback gap styles, use lower specificity, to ensure styles do not unintentionally override theme styles.\n              combinedSelector = selector === ROOT_BLOCK_SELECTOR ? `:where(.${className}${spacingStyle?.selector || ''})` : `:where(${selector}.${className}${spacingStyle?.selector || ''})`;\n            } else {\n              combinedSelector = selector === ROOT_BLOCK_SELECTOR ? `:root :where(.${className})${spacingStyle?.selector || ''}` : `:root :where(${selector}-${className})${spacingStyle?.selector || ''}`;\n            }\n            ruleset += `${combinedSelector} { ${declarations.join('; ')}; }`;\n          }\n        });\n      }\n    });\n    // For backwards compatibility, ensure the legacy block gap CSS variable is still available.\n    if (selector === ROOT_BLOCK_SELECTOR && hasBlockGapSupport) {\n      ruleset += `${ROOT_CSS_PROPERTIES_SELECTOR} { --wp--style--block-gap: ${gapValue}; }`;\n    }\n  }\n\n  // Output base styles\n  if (selector === ROOT_BLOCK_SELECTOR && layoutDefinitions) {\n    const validDisplayModes = ['block', 'flex', 'grid'];\n    Object.values(layoutDefinitions).forEach(({\n      className,\n      displayMode,\n      baseStyles\n    }) => {\n      if (displayMode && validDisplayModes.includes(displayMode)) {\n        ruleset += `${selector} .${className} { display:${displayMode}; }`;\n      }\n      if (baseStyles?.length) {\n        baseStyles.forEach(baseStyle => {\n          const declarations = [];\n          if (baseStyle.rules) {\n            Object.entries(baseStyle.rules).forEach(([cssProperty, cssValue]) => {\n              declarations.push(`${cssProperty}: ${cssValue}`);\n            });\n          }\n          if (declarations.length) {\n            const combinedSelector = `.${className}${baseStyle?.selector || ''}`;\n            ruleset += `${combinedSelector} { ${declarations.join('; ')}; }`;\n          }\n        });\n      }\n    });\n  }\n  return ruleset;\n}\nconst STYLE_KEYS = ['border', 'color', 'dimensions', 'spacing', 'typography', 'filter', 'outline', 'shadow', 'background'];\nfunction pickStyleKeys(treeToPickFrom) {\n  if (!treeToPickFrom) {\n    return {};\n  }\n  const entries = Object.entries(treeToPickFrom);\n  const pickedEntries = entries.filter(([key]) => STYLE_KEYS.includes(key));\n  // clone the style objects so that `getFeatureDeclarations` can remove consumed keys from it\n  const clonedEntries = pickedEntries.map(([key, style]) => [key, JSON.parse(JSON.stringify(style))]);\n  return Object.fromEntries(clonedEntries);\n}\nexport const getNodesWithStyles = (tree, blockSelectors) => {\n  var _tree$styles$blocks;\n  const nodes = [];\n  if (!tree?.styles) {\n    return nodes;\n  }\n\n  // Top-level.\n  const styles = pickStyleKeys(tree.styles);\n  if (styles) {\n    nodes.push({\n      styles,\n      selector: ROOT_BLOCK_SELECTOR,\n      // Root selector (body) styles should not be wrapped in `:root where()` to keep\n      // specificity at (0,0,1) and maintain backwards compatibility.\n      skipSelectorWrapper: true\n    });\n  }\n  Object.entries(ELEMENTS).forEach(([name, selector]) => {\n    if (tree.styles?.elements?.[name]) {\n      nodes.push({\n        styles: tree.styles?.elements?.[name],\n        selector,\n        // Top level elements that don't use a class name should not receive the\n        // `:root :where()` wrapper to maintain backwards compatibility.\n        skipSelectorWrapper: !ELEMENT_CLASS_NAMES[name]\n      });\n    }\n  });\n\n  // Iterate over blocks: they can have styles & elements.\n  Object.entries((_tree$styles$blocks = tree.styles?.blocks) !== null && _tree$styles$blocks !== void 0 ? _tree$styles$blocks : {}).forEach(([blockName, node]) => {\n    var _node$elements;\n    const blockStyles = pickStyleKeys(node);\n    if (node?.variations) {\n      const variations = {};\n      Object.entries(node.variations).forEach(([variationName, variation]) => {\n        var _variation$elements, _variation$blocks;\n        variations[variationName] = pickStyleKeys(variation);\n        if (variation?.css) {\n          variations[variationName].css = variation.css;\n        }\n        const variationSelector = blockSelectors[blockName]?.styleVariationSelectors?.[variationName];\n\n        // Process the variation's inner element styles.\n        // This comes before the inner block styles so the\n        // element styles within the block type styles take\n        // precedence over these.\n        Object.entries((_variation$elements = variation?.elements) !== null && _variation$elements !== void 0 ? _variation$elements : {}).forEach(([element, elementStyles]) => {\n          if (elementStyles && ELEMENTS[element]) {\n            nodes.push({\n              styles: elementStyles,\n              selector: scopeSelector(variationSelector, ELEMENTS[element])\n            });\n          }\n        });\n\n        // Process the variations inner block type styles.\n        Object.entries((_variation$blocks = variation?.blocks) !== null && _variation$blocks !== void 0 ? _variation$blocks : {}).forEach(([variationBlockName, variationBlockStyles]) => {\n          var _variationBlockStyles;\n          const variationBlockSelector = scopeSelector(variationSelector, blockSelectors[variationBlockName]?.selector);\n          const variationDuotoneSelector = scopeSelector(variationSelector, blockSelectors[variationBlockName]?.duotoneSelector);\n          const variationFeatureSelectors = scopeFeatureSelectors(variationSelector, blockSelectors[variationBlockName]?.featureSelectors);\n          const variationBlockStyleNodes = pickStyleKeys(variationBlockStyles);\n          if (variationBlockStyles?.css) {\n            variationBlockStyleNodes.css = variationBlockStyles.css;\n          }\n          nodes.push({\n            selector: variationBlockSelector,\n            duotoneSelector: variationDuotoneSelector,\n            featureSelectors: variationFeatureSelectors,\n            fallbackGapValue: blockSelectors[variationBlockName]?.fallbackGapValue,\n            hasLayoutSupport: blockSelectors[variationBlockName]?.hasLayoutSupport,\n            styles: variationBlockStyleNodes\n          });\n\n          // Process element styles for the inner blocks\n          // of the variation.\n          Object.entries((_variationBlockStyles = variationBlockStyles.elements) !== null && _variationBlockStyles !== void 0 ? _variationBlockStyles : {}).forEach(([variationBlockElement, variationBlockElementStyles]) => {\n            if (variationBlockElementStyles && ELEMENTS[variationBlockElement]) {\n              nodes.push({\n                styles: variationBlockElementStyles,\n                selector: scopeSelector(variationBlockSelector, ELEMENTS[variationBlockElement])\n              });\n            }\n          });\n        });\n      });\n      blockStyles.variations = variations;\n    }\n    if (blockSelectors?.[blockName]?.selector) {\n      nodes.push({\n        duotoneSelector: blockSelectors[blockName].duotoneSelector,\n        fallbackGapValue: blockSelectors[blockName].fallbackGapValue,\n        hasLayoutSupport: blockSelectors[blockName].hasLayoutSupport,\n        selector: blockSelectors[blockName].selector,\n        styles: blockStyles,\n        featureSelectors: blockSelectors[blockName].featureSelectors,\n        styleVariationSelectors: blockSelectors[blockName].styleVariationSelectors\n      });\n    }\n    Object.entries((_node$elements = node?.elements) !== null && _node$elements !== void 0 ? _node$elements : {}).forEach(([elementName, value]) => {\n      if (value && blockSelectors?.[blockName] && ELEMENTS[elementName]) {\n        nodes.push({\n          styles: value,\n          selector: blockSelectors[blockName]?.selector.split(',').map(sel => {\n            const elementSelectors = ELEMENTS[elementName].split(',');\n            return elementSelectors.map(elementSelector => sel + ' ' + elementSelector);\n          }).join(',')\n        });\n      }\n    });\n  });\n  return nodes;\n};\nexport const getNodesWithSettings = (tree, blockSelectors) => {\n  var _tree$settings$blocks;\n  const nodes = [];\n  if (!tree?.settings) {\n    return nodes;\n  }\n  const pickPresets = treeToPickFrom => {\n    let presets = {};\n    PRESET_METADATA.forEach(({\n      path\n    }) => {\n      const value = getValueFromObjectPath(treeToPickFrom, path, false);\n      if (value !== false) {\n        presets = setImmutably(presets, path, value);\n      }\n    });\n    return presets;\n  };\n\n  // Top-level.\n  const presets = pickPresets(tree.settings);\n  const custom = tree.settings?.custom;\n  if (Object.keys(presets).length > 0 || custom) {\n    nodes.push({\n      presets,\n      custom,\n      selector: ROOT_CSS_PROPERTIES_SELECTOR\n    });\n  }\n\n  // Blocks.\n  Object.entries((_tree$settings$blocks = tree.settings?.blocks) !== null && _tree$settings$blocks !== void 0 ? _tree$settings$blocks : {}).forEach(([blockName, node]) => {\n    const blockPresets = pickPresets(node);\n    const blockCustom = node.custom;\n    if (Object.keys(blockPresets).length > 0 || blockCustom) {\n      nodes.push({\n        presets: blockPresets,\n        custom: blockCustom,\n        selector: blockSelectors[blockName]?.selector\n      });\n    }\n  });\n  return nodes;\n};\nexport const toCustomProperties = (tree, blockSelectors) => {\n  const settings = getNodesWithSettings(tree, blockSelectors);\n  let ruleset = '';\n  settings.forEach(({\n    presets,\n    custom,\n    selector\n  }) => {\n    const declarations = getPresetsDeclarations(presets, tree?.settings);\n    const customProps = flattenTree(custom, '--wp--custom--', '--');\n    if (customProps.length > 0) {\n      declarations.push(...customProps);\n    }\n    if (declarations.length > 0) {\n      ruleset += `${selector}{${declarations.join(';')};}`;\n    }\n  });\n  return ruleset;\n};\nexport const toStyles = (tree, blockSelectors, hasBlockGapSupport, hasFallbackGapSupport, disableLayoutStyles = false, disableRootPadding = false, styleOptions = undefined) => {\n  // These allow opting out of certain sets of styles.\n  const options = {\n    blockGap: true,\n    blockStyles: true,\n    layoutStyles: true,\n    marginReset: true,\n    presets: true,\n    rootPadding: true,\n    variationStyles: false,\n    ...styleOptions\n  };\n  const nodesWithStyles = getNodesWithStyles(tree, blockSelectors);\n  const nodesWithSettings = getNodesWithSettings(tree, blockSelectors);\n  const useRootPaddingAlign = tree?.settings?.useRootPaddingAwareAlignments;\n  const {\n    contentSize,\n    wideSize\n  } = tree?.settings?.layout || {};\n  const hasBodyStyles = options.marginReset || options.rootPadding || options.layoutStyles;\n  let ruleset = '';\n  if (options.presets && (contentSize || wideSize)) {\n    ruleset += `${ROOT_CSS_PROPERTIES_SELECTOR} {`;\n    ruleset = contentSize ? ruleset + ` --wp--style--global--content-size: ${contentSize};` : ruleset;\n    ruleset = wideSize ? ruleset + ` --wp--style--global--wide-size: ${wideSize};` : ruleset;\n    ruleset += '}';\n  }\n  if (hasBodyStyles) {\n    /*\n     * Reset default browser margin on the body element.\n     * This is set on the body selector **before** generating the ruleset\n     * from the `theme.json`. This is to ensure that if the `theme.json` declares\n     * `margin` in its `spacing` declaration for the `body` element then these\n     * user-generated values take precedence in the CSS cascade.\n     * @link https://github.com/WordPress/gutenberg/issues/36147.\n     */\n    ruleset += ':where(body) {margin: 0;';\n\n    // Root padding styles should be output for full templates, patterns and template parts.\n    if (options.rootPadding && useRootPaddingAlign) {\n      /*\n       * These rules reproduce the ones from https://github.com/WordPress/gutenberg/blob/79103f124925d1f457f627e154f52a56228ed5ad/lib/class-wp-theme-json-gutenberg.php#L2508\n       * almost exactly, but for the selectors that target block wrappers in the front end. This code only runs in the editor, so it doesn't need those selectors.\n       */\n      ruleset += `padding-right: 0; padding-left: 0; padding-top: var(--wp--style--root--padding-top); padding-bottom: var(--wp--style--root--padding-bottom) }\n\t\t\t\t.has-global-padding { padding-right: var(--wp--style--root--padding-right); padding-left: var(--wp--style--root--padding-left); }\n\t\t\t\t.has-global-padding > .alignfull { margin-right: calc(var(--wp--style--root--padding-right) * -1); margin-left: calc(var(--wp--style--root--padding-left) * -1); }\n\t\t\t\t.has-global-padding :where(:not(.alignfull.is-layout-flow) > .has-global-padding:not(.wp-block-block, .alignfull)) { padding-right: 0; padding-left: 0; }\n\t\t\t\t.has-global-padding :where(:not(.alignfull.is-layout-flow) > .has-global-padding:not(.wp-block-block, .alignfull)) > .alignfull { margin-left: 0; margin-right: 0;\n\t\t\t\t`;\n    }\n    ruleset += '}';\n  }\n  if (options.blockStyles) {\n    nodesWithStyles.forEach(({\n      selector,\n      duotoneSelector,\n      styles,\n      fallbackGapValue,\n      hasLayoutSupport,\n      featureSelectors,\n      styleVariationSelectors,\n      skipSelectorWrapper\n    }) => {\n      // Process styles for block support features with custom feature level\n      // CSS selectors set.\n      if (featureSelectors) {\n        const featureDeclarations = getFeatureDeclarations(featureSelectors, styles);\n        Object.entries(featureDeclarations).forEach(([cssSelector, declarations]) => {\n          if (declarations.length) {\n            const rules = declarations.join(';');\n            ruleset += `:root :where(${cssSelector}){${rules};}`;\n          }\n        });\n      }\n\n      // Process duotone styles.\n      if (duotoneSelector) {\n        const duotoneStyles = {};\n        if (styles?.filter) {\n          duotoneStyles.filter = styles.filter;\n          delete styles.filter;\n        }\n        const duotoneDeclarations = getStylesDeclarations(duotoneStyles);\n        if (duotoneDeclarations.length) {\n          ruleset += `${duotoneSelector}{${duotoneDeclarations.join(';')};}`;\n        }\n      }\n\n      // Process blockGap and layout styles.\n      if (!disableLayoutStyles && (ROOT_BLOCK_SELECTOR === selector || hasLayoutSupport)) {\n        ruleset += getLayoutStyles({\n          style: styles,\n          selector,\n          hasBlockGapSupport,\n          hasFallbackGapSupport,\n          fallbackGapValue\n        });\n      }\n\n      // Process the remaining block styles (they use either normal block class or __experimentalSelector).\n      const styleDeclarations = getStylesDeclarations(styles, selector, useRootPaddingAlign, tree, disableRootPadding);\n      if (styleDeclarations?.length) {\n        const generalSelector = skipSelectorWrapper ? selector : `:root :where(${selector})`;\n        ruleset += `${generalSelector}{${styleDeclarations.join(';')};}`;\n      }\n      if (styles?.css) {\n        ruleset += processCSSNesting(styles.css, `:root :where(${selector})`);\n      }\n      if (options.variationStyles && styleVariationSelectors) {\n        Object.entries(styleVariationSelectors).forEach(([styleVariationName, styleVariationSelector]) => {\n          const styleVariations = styles?.variations?.[styleVariationName];\n          if (styleVariations) {\n            // If the block uses any custom selectors for block support, add those first.\n            if (featureSelectors) {\n              const featureDeclarations = getFeatureDeclarations(featureSelectors, styleVariations);\n              Object.entries(featureDeclarations).forEach(([baseSelector, declarations]) => {\n                if (declarations.length) {\n                  const cssSelector = concatFeatureVariationSelectorString(baseSelector, styleVariationSelector);\n                  const rules = declarations.join(';');\n                  ruleset += `:root :where(${cssSelector}){${rules};}`;\n                }\n              });\n            }\n\n            // Otherwise add regular selectors.\n            const styleVariationDeclarations = getStylesDeclarations(styleVariations, styleVariationSelector, useRootPaddingAlign, tree);\n            if (styleVariationDeclarations.length) {\n              ruleset += `:root :where(${styleVariationSelector}){${styleVariationDeclarations.join(';')};}`;\n            }\n            if (styleVariations?.css) {\n              ruleset += processCSSNesting(styleVariations.css, `:root :where(${styleVariationSelector})`);\n            }\n          }\n        });\n      }\n\n      // Check for pseudo selector in `styles` and handle separately.\n      const pseudoSelectorStyles = Object.entries(styles).filter(([key]) => key.startsWith(':'));\n      if (pseudoSelectorStyles?.length) {\n        pseudoSelectorStyles.forEach(([pseudoKey, pseudoStyle]) => {\n          const pseudoDeclarations = getStylesDeclarations(pseudoStyle);\n          if (!pseudoDeclarations?.length) {\n            return;\n          }\n\n          // `selector` may be provided in a form\n          // where block level selectors have sub element\n          // selectors appended to them as a comma separated\n          // string.\n          // e.g. `h1 a,h2 a,h3 a,h4 a,h5 a,h6 a`;\n          // Split and append pseudo selector to create\n          // the proper rules to target the elements.\n          const _selector = selector.split(',').map(sel => sel + pseudoKey).join(',');\n\n          // As pseudo classes such as :hover, :focus etc. have class-level\n          // specificity, they must use the `:root :where()` wrapper. This.\n          // caps the specificity at `0-1-0` to allow proper nesting of variations\n          // and block type element styles.\n          const pseudoRule = `:root :where(${_selector}){${pseudoDeclarations.join(';')};}`;\n          ruleset += pseudoRule;\n        });\n      }\n    });\n  }\n  if (options.layoutStyles) {\n    /* Add alignment / layout styles */\n    ruleset = ruleset + '.wp-site-blocks > .alignleft { float: left; margin-right: 2em; }';\n    ruleset = ruleset + '.wp-site-blocks > .alignright { float: right; margin-left: 2em; }';\n    ruleset = ruleset + '.wp-site-blocks > .aligncenter { justify-content: center; margin-left: auto; margin-right: auto; }';\n  }\n  if (options.blockGap && hasBlockGapSupport) {\n    // Use fallback of `0.5em` just in case, however if there is blockGap support, there should nearly always be a real value.\n    const gapValue = getGapCSSValue(tree?.styles?.spacing?.blockGap) || '0.5em';\n    ruleset = ruleset + `:root :where(.wp-site-blocks) > * { margin-block-start: ${gapValue}; margin-block-end: 0; }`;\n    ruleset = ruleset + ':root :where(.wp-site-blocks) > :first-child { margin-block-start: 0; }';\n    ruleset = ruleset + ':root :where(.wp-site-blocks) > :last-child { margin-block-end: 0; }';\n  }\n  if (options.presets) {\n    nodesWithSettings.forEach(({\n      selector,\n      presets\n    }) => {\n      if (ROOT_BLOCK_SELECTOR === selector || ROOT_CSS_PROPERTIES_SELECTOR === selector) {\n        // Do not add extra specificity for top-level classes.\n        selector = '';\n      }\n      const classes = getPresetsClasses(selector, presets);\n      if (classes.length > 0) {\n        ruleset += classes;\n      }\n    });\n  }\n  return ruleset;\n};\nexport function toSvgFilters(tree, blockSelectors) {\n  const nodesWithSettings = getNodesWithSettings(tree, blockSelectors);\n  return nodesWithSettings.flatMap(({\n    presets\n  }) => {\n    return getPresetsSvgFilters(presets);\n  });\n}\nconst getSelectorsConfig = (blockType, rootSelector) => {\n  if (blockType?.selectors && Object.keys(blockType.selectors).length > 0) {\n    return blockType.selectors;\n  }\n  const config = {\n    root: rootSelector\n  };\n  Object.entries(BLOCK_SUPPORT_FEATURE_LEVEL_SELECTORS).forEach(([featureKey, featureName]) => {\n    const featureSelector = getBlockCSSSelector(blockType, featureKey);\n    if (featureSelector) {\n      config[featureName] = featureSelector;\n    }\n  });\n  return config;\n};\nexport const getBlockSelectors = (blockTypes, getBlockStyles, variationInstanceId) => {\n  const result = {};\n  blockTypes.forEach(blockType => {\n    const name = blockType.name;\n    const selector = getBlockCSSSelector(blockType);\n    let duotoneSelector = getBlockCSSSelector(blockType, 'filter.duotone');\n\n    // Keep backwards compatibility for support.color.__experimentalDuotone.\n    if (!duotoneSelector) {\n      const rootSelector = getBlockCSSSelector(blockType);\n      const duotoneSupport = getBlockSupport(blockType, 'color.__experimentalDuotone', false);\n      duotoneSelector = duotoneSupport && scopeSelector(rootSelector, duotoneSupport);\n    }\n    const hasLayoutSupport = !!blockType?.supports?.layout || !!blockType?.supports?.__experimentalLayout;\n    const fallbackGapValue = blockType?.supports?.spacing?.blockGap?.__experimentalDefault;\n    const blockStyleVariations = getBlockStyles(name);\n    const styleVariationSelectors = {};\n    blockStyleVariations?.forEach(variation => {\n      const variationSuffix = variationInstanceId ? `-${variationInstanceId}` : '';\n      const variationName = `${variation.name}${variationSuffix}`;\n      const styleVariationSelector = getBlockStyleVariationSelector(variationName, selector);\n      styleVariationSelectors[variationName] = styleVariationSelector;\n    });\n\n    // For each block support feature add any custom selectors.\n    const featureSelectors = getSelectorsConfig(blockType, selector);\n    result[name] = {\n      duotoneSelector,\n      fallbackGapValue,\n      featureSelectors: Object.keys(featureSelectors).length ? featureSelectors : undefined,\n      hasLayoutSupport,\n      name,\n      selector,\n      styleVariationSelectors: blockStyleVariations?.length ? styleVariationSelectors : undefined\n    };\n  });\n  return result;\n};\n\n/**\n * If there is a separator block whose color is defined in theme.json via background,\n * update the separator color to the same value by using border color.\n *\n * @param {Object} config Theme.json configuration file object.\n * @return {Object} configTheme.json configuration file object updated.\n */\nfunction updateConfigWithSeparator(config) {\n  const needsSeparatorStyleUpdate = config.styles?.blocks?.['core/separator'] && config.styles?.blocks?.['core/separator'].color?.background && !config.styles?.blocks?.['core/separator'].color?.text && !config.styles?.blocks?.['core/separator'].border?.color;\n  if (needsSeparatorStyleUpdate) {\n    return {\n      ...config,\n      styles: {\n        ...config.styles,\n        blocks: {\n          ...config.styles.blocks,\n          'core/separator': {\n            ...config.styles.blocks['core/separator'],\n            color: {\n              ...config.styles.blocks['core/separator'].color,\n              text: config.styles?.blocks['core/separator'].color.background\n            }\n          }\n        }\n      }\n    };\n  }\n  return config;\n}\nexport function processCSSNesting(css, blockSelector) {\n  let processedCSS = '';\n  if (!css || css.trim() === '') {\n    return processedCSS;\n  }\n\n  // Split CSS nested rules.\n  const parts = css.split('&');\n  parts.forEach(part => {\n    if (!part || part.trim() === '') {\n      return;\n    }\n    const isRootCss = !part.includes('{');\n    if (isRootCss) {\n      // If the part doesn't contain braces, it applies to the root level.\n      processedCSS += `:root :where(${blockSelector}){${part.trim()}}`;\n    } else {\n      // If the part contains braces, it's a nested CSS rule.\n      const splittedPart = part.replace('}', '').split('{');\n      if (splittedPart.length !== 2) {\n        return;\n      }\n      const [nestedSelector, cssValue] = splittedPart;\n\n      // Handle pseudo elements such as ::before, ::after, etc. Regex will also\n      // capture any leading combinator such as >, +, or ~, as well as spaces.\n      // This allows pseudo elements as descendants e.g. `.parent ::before`.\n      const matches = nestedSelector.match(/([>+~\\s]*::[a-zA-Z-]+)/);\n      const pseudoPart = matches ? matches[1] : '';\n      const withoutPseudoElement = matches ? nestedSelector.replace(pseudoPart, '').trim() : nestedSelector.trim();\n      let combinedSelector;\n      if (withoutPseudoElement === '') {\n        // Only contained a pseudo element to use the block selector to form\n        // the final `:root :where()` selector.\n        combinedSelector = blockSelector;\n      } else {\n        // If the nested selector is a descendant of the block scope it with the\n        // block selector. Otherwise append it to the block selector.\n        combinedSelector = nestedSelector.startsWith(' ') ? scopeSelector(blockSelector, withoutPseudoElement) : appendToSelector(blockSelector, withoutPseudoElement);\n      }\n\n      // Build final rule, re-adding any pseudo element outside the `:where()`\n      // to maintain valid CSS selector.\n      processedCSS += `:root :where(${combinedSelector})${pseudoPart}{${cssValue.trim()}}`;\n    }\n  });\n  return processedCSS;\n}\n\n/**\n * Returns the global styles output using a global styles configuration.\n * If wishing to generate global styles and settings based on the\n * global styles config loaded in the editor context, use `useGlobalStylesOutput()`.\n * The use case for a custom config is to generate bespoke styles\n * and settings for previews, or other out-of-editor experiences.\n *\n * @param {Object}  mergedConfig       Global styles configuration.\n * @param {boolean} disableRootPadding Disable root padding styles.\n *\n * @return {Array} Array of stylesheets and settings.\n */\nexport function useGlobalStylesOutputWithConfig(mergedConfig = {}, disableRootPadding) {\n  const [blockGap] = useGlobalSetting('spacing.blockGap');\n  const hasBlockGapSupport = blockGap !== null;\n  const hasFallbackGapSupport = !hasBlockGapSupport; // This setting isn't useful yet: it exists as a placeholder for a future explicit fallback styles support.\n  const disableLayoutStyles = useSelect(select => {\n    const {\n      getSettings\n    } = select(blockEditorStore);\n    return !!getSettings().disableLayoutStyles;\n  });\n  const {\n    getBlockStyles\n  } = useSelect(blocksStore);\n  return useMemo(() => {\n    var _updatedConfig$styles;\n    if (!mergedConfig?.styles || !mergedConfig?.settings) {\n      return [];\n    }\n    const updatedConfig = updateConfigWithSeparator(mergedConfig);\n    const blockSelectors = getBlockSelectors(getBlockTypes(), getBlockStyles);\n    const customProperties = toCustomProperties(updatedConfig, blockSelectors);\n    const globalStyles = toStyles(updatedConfig, blockSelectors, hasBlockGapSupport, hasFallbackGapSupport, disableLayoutStyles, disableRootPadding);\n    const svgs = toSvgFilters(updatedConfig, blockSelectors);\n    const styles = [{\n      css: customProperties,\n      isGlobalStyles: true\n    }, {\n      css: globalStyles,\n      isGlobalStyles: true\n    },\n    // Load custom CSS in own stylesheet so that any invalid CSS entered in the input won't break all the global styles in the editor.\n    {\n      css: (_updatedConfig$styles = updatedConfig.styles.css) !== null && _updatedConfig$styles !== void 0 ? _updatedConfig$styles : '',\n      isGlobalStyles: true\n    }, {\n      assets: svgs,\n      __unstableType: 'svg',\n      isGlobalStyles: true\n    }];\n\n    // Loop through the blocks to check if there are custom CSS values.\n    // If there are, get the block selector and push the selector together with\n    // the CSS value to the 'stylesheets' array.\n    getBlockTypes().forEach(blockType => {\n      if (updatedConfig.styles.blocks[blockType.name]?.css) {\n        const selector = blockSelectors[blockType.name].selector;\n        styles.push({\n          css: processCSSNesting(updatedConfig.styles.blocks[blockType.name]?.css, selector),\n          isGlobalStyles: true\n        });\n      }\n    });\n    return [styles, updatedConfig.settings];\n  }, [hasBlockGapSupport, hasFallbackGapSupport, mergedConfig, disableLayoutStyles, disableRootPadding, getBlockStyles]);\n}\n\n/**\n * Returns the global styles output based on the current state of global styles config loaded in the editor context.\n *\n * @param {boolean} disableRootPadding Disable root padding styles.\n *\n * @return {Array} Array of stylesheets and settings.\n */\nexport function useGlobalStylesOutput(disableRootPadding = false) {\n  const {\n    merged: mergedConfig\n  } = useContext(GlobalStylesContext);\n  return useGlobalStylesOutputWithConfig(mergedConfig, disableRootPadding);\n}\n//# sourceMappingURL=use-global-styles-output.js.map","/* wp:polyfill */\n/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { useState, createPortal, forwardRef, useMemo, useEffect, useRef } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { useResizeObserver, useMergeRefs, useRefEffect, useDisabled } from '@wordpress/compose';\nimport { __experimentalStyleProvider as StyleProvider } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { useBlockSelectionClearer } from '../block-selection-clearer';\nimport { useWritingFlow } from '../writing-flow';\nimport { getCompatibilityStyles } from './get-compatibility-styles';\nimport { store as blockEditorStore } from '../../store';\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nfunction bubbleEvent(event, Constructor, frame) {\n  const init = {};\n  for (const key in event) {\n    init[key] = event[key];\n  }\n\n  // Check if the event is a MouseEvent generated within the iframe.\n  // If so, adjust the coordinates to be relative to the position of\n  // the iframe. This ensures that components such as Draggable\n  // receive coordinates relative to the window, instead of relative\n  // to the iframe. Without this, the Draggable event handler would\n  // result in components \"jumping\" position as soon as the user\n  // drags over the iframe.\n  if (event instanceof frame.contentDocument.defaultView.MouseEvent) {\n    const rect = frame.getBoundingClientRect();\n    init.clientX += rect.left;\n    init.clientY += rect.top;\n  }\n  const newEvent = new Constructor(event.type, init);\n  if (init.defaultPrevented) {\n    newEvent.preventDefault();\n  }\n  const cancelled = !frame.dispatchEvent(newEvent);\n  if (cancelled) {\n    event.preventDefault();\n  }\n}\n\n/**\n * Bubbles some event types (keydown, keypress, and dragover) to parent document\n * document to ensure that the keyboard shortcuts and drag and drop work.\n *\n * Ideally, we should remove event bubbling in the future. Keyboard shortcuts\n * should be context dependent, e.g. actions on blocks like Cmd+A should not\n * work globally outside the block editor.\n *\n * @param {Document} iframeDocument Document to attach listeners to.\n */\nfunction useBubbleEvents(iframeDocument) {\n  return useRefEffect(() => {\n    const {\n      defaultView\n    } = iframeDocument;\n    if (!defaultView) {\n      return;\n    }\n    const {\n      frameElement\n    } = defaultView;\n    const html = iframeDocument.documentElement;\n    const eventTypes = ['dragover', 'mousemove'];\n    const handlers = {};\n    for (const name of eventTypes) {\n      handlers[name] = event => {\n        const prototype = Object.getPrototypeOf(event);\n        const constructorName = prototype.constructor.name;\n        const Constructor = window[constructorName];\n        bubbleEvent(event, Constructor, frameElement);\n      };\n      html.addEventListener(name, handlers[name]);\n    }\n    return () => {\n      for (const name of eventTypes) {\n        html.removeEventListener(name, handlers[name]);\n      }\n    };\n  });\n}\nfunction Iframe({\n  contentRef,\n  children,\n  tabIndex = 0,\n  scale = 1,\n  frameSize = 0,\n  readonly,\n  forwardedRef: ref,\n  title = __('Editor canvas'),\n  ...props\n}) {\n  const {\n    resolvedAssets,\n    isPreviewMode\n  } = useSelect(select => {\n    const {\n      getSettings\n    } = select(blockEditorStore);\n    const settings = getSettings();\n    return {\n      resolvedAssets: settings.__unstableResolvedAssets,\n      isPreviewMode: settings.__unstableIsPreviewMode\n    };\n  }, []);\n  const {\n    styles = '',\n    scripts = ''\n  } = resolvedAssets;\n  const [iframeDocument, setIframeDocument] = useState();\n  const initialContainerWidth = useRef();\n  const [bodyClasses, setBodyClasses] = useState([]);\n  const clearerRef = useBlockSelectionClearer();\n  const [before, writingFlowRef, after] = useWritingFlow();\n  const [contentResizeListener, {\n    height: contentHeight\n  }] = useResizeObserver();\n  const [containerResizeListener, {\n    width: containerWidth\n  }] = useResizeObserver();\n  const setRef = useRefEffect(node => {\n    node._load = () => {\n      setIframeDocument(node.contentDocument);\n    };\n    let iFrameDocument;\n    // Prevent the default browser action for files dropped outside of dropzones.\n    function preventFileDropDefault(event) {\n      event.preventDefault();\n    }\n    function onLoad() {\n      const {\n        contentDocument,\n        ownerDocument\n      } = node;\n      const {\n        documentElement\n      } = contentDocument;\n      iFrameDocument = contentDocument;\n      documentElement.classList.add('block-editor-iframe__html');\n      clearerRef(documentElement);\n\n      // Ideally ALL classes that are added through get_body_class should\n      // be added in the editor too, which we'll somehow have to get from\n      // the server in the future (which will run the PHP filters).\n      setBodyClasses(Array.from(ownerDocument.body.classList).filter(name => name.startsWith('admin-color-') || name.startsWith('post-type-') || name === 'wp-embed-responsive'));\n      contentDocument.dir = ownerDocument.dir;\n      for (const compatStyle of getCompatibilityStyles()) {\n        if (contentDocument.getElementById(compatStyle.id)) {\n          continue;\n        }\n        contentDocument.head.appendChild(compatStyle.cloneNode(true));\n        if (!isPreviewMode) {\n          // eslint-disable-next-line no-console\n          console.warn(`${compatStyle.id} was added to the iframe incorrectly. Please use block.json or enqueue_block_assets to add styles to the iframe.`, compatStyle);\n        }\n      }\n      iFrameDocument.addEventListener('dragover', preventFileDropDefault, false);\n      iFrameDocument.addEventListener('drop', preventFileDropDefault, false);\n    }\n    node.addEventListener('load', onLoad);\n    return () => {\n      delete node._load;\n      node.removeEventListener('load', onLoad);\n      iFrameDocument?.removeEventListener('dragover', preventFileDropDefault);\n      iFrameDocument?.removeEventListener('drop', preventFileDropDefault);\n    };\n  }, []);\n  const [iframeWindowInnerHeight, setIframeWindowInnerHeight] = useState();\n  const iframeResizeRef = useRefEffect(node => {\n    const nodeWindow = node.ownerDocument.defaultView;\n    setIframeWindowInnerHeight(nodeWindow.innerHeight);\n    const onResize = () => {\n      setIframeWindowInnerHeight(nodeWindow.innerHeight);\n    };\n    nodeWindow.addEventListener('resize', onResize);\n    return () => {\n      nodeWindow.removeEventListener('resize', onResize);\n    };\n  }, []);\n  const [windowInnerWidth, setWindowInnerWidth] = useState();\n  const windowResizeRef = useRefEffect(node => {\n    const nodeWindow = node.ownerDocument.defaultView;\n    setWindowInnerWidth(nodeWindow.innerWidth);\n    const onResize = () => {\n      setWindowInnerWidth(nodeWindow.innerWidth);\n    };\n    nodeWindow.addEventListener('resize', onResize);\n    return () => {\n      nodeWindow.removeEventListener('resize', onResize);\n    };\n  }, []);\n  const isZoomedOut = scale !== 1;\n  useEffect(() => {\n    if (!isZoomedOut) {\n      initialContainerWidth.current = containerWidth;\n    }\n  }, [containerWidth, isZoomedOut]);\n  const disabledRef = useDisabled({\n    isDisabled: !readonly\n  });\n  const bodyRef = useMergeRefs([useBubbleEvents(iframeDocument), contentRef, clearerRef, writingFlowRef, disabledRef,\n  // Avoid resize listeners when not needed, these will trigger\n  // unnecessary re-renders when animating the iframe width, or when\n  // expanding preview iframes.\n  isZoomedOut ? iframeResizeRef : null]);\n\n  // Correct doctype is required to enable rendering in standards\n  // mode. Also preload the styles to avoid a flash of unstyled\n  // content.\n  const html = `<!doctype html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<script>window.frameElement._load()</script>\n\t\t<style>\n\t\t\thtml{\n\t\t\t\theight: auto !important;\n\t\t\t\tmin-height: 100%;\n\t\t\t}\n\t\t\t/* Lowest specificity to not override global styles */\n\t\t\t:where(body) {\n\t\t\t\tmargin: 0;\n\t\t\t\t/* Default background color in case zoom out mode background\n\t\t\t\tcolors the html element */\n\t\t\t\tbackground-color: white;\n\t\t\t}\n\t\t</style>\n\t\t${styles}\n\t\t${scripts}\n\t</head>\n\t<body>\n\t\t<script>document.currentScript.parentElement.remove()</script>\n\t</body>\n</html>`;\n  const [src, cleanup] = useMemo(() => {\n    const _src = URL.createObjectURL(new window.Blob([html], {\n      type: 'text/html'\n    }));\n    return [_src, () => URL.revokeObjectURL(_src)];\n  }, [html]);\n  useEffect(() => cleanup, [cleanup]);\n  const zoomOutAnimationClassnameRef = useRef(null);\n  const handleZoomOutAnimationClassname = () => {\n    clearTimeout(zoomOutAnimationClassnameRef.current);\n    iframeDocument.documentElement.classList.add('zoom-out-animation');\n    zoomOutAnimationClassnameRef.current = setTimeout(() => {\n      iframeDocument.documentElement.classList.remove('zoom-out-animation');\n    }, 400); // 400ms should match the animation speed used in components/iframe/content.scss\n  };\n\n  // Toggle zoom out CSS Classes only when zoom out mode changes. We could add these into the useEffect\n  // that controls settings the CSS variables, but then we would need to do more work to ensure we're\n  // only toggling these when the zoom out mode changes, as that useEffect is also triggered by a large\n  // number of dependencies.\n  useEffect(() => {\n    if (!iframeDocument || !isZoomedOut) {\n      return;\n    }\n    handleZoomOutAnimationClassname();\n    iframeDocument.documentElement.classList.add('is-zoomed-out');\n    return () => {\n      handleZoomOutAnimationClassname();\n      iframeDocument.documentElement.classList.remove('is-zoomed-out');\n    };\n  }, [iframeDocument, isZoomedOut]);\n\n  // Calculate the scaling and CSS variables for the zoom out canvas\n  useEffect(() => {\n    if (!iframeDocument || !isZoomedOut) {\n      return;\n    }\n    const maxWidth = 750;\n    // Note: When we initialize the zoom out when the canvas is smaller (sidebars open),\n    // initialContainerWidth will be smaller than the full page, and reflow will happen\n    // when the canvas area becomes larger due to sidebars closing. This is a known but\n    // minor divergence for now.\n\n    // This scaling calculation has to happen within the JS because CSS calc() can\n    // only divide and multiply by a unitless value. I.e. calc( 100px / 2 ) is valid\n    // but calc( 100px / 2px ) is not.\n    iframeDocument.documentElement.style.setProperty('--wp-block-editor-iframe-zoom-out-scale', scale === 'default' ? (Math.min(containerWidth, maxWidth) - parseInt(frameSize) * 2) / Math.max(initialContainerWidth.current, containerWidth) : scale);\n\n    // frameSize has to be a px value for the scaling and frame size to be computed correctly.\n    iframeDocument.documentElement.style.setProperty('--wp-block-editor-iframe-zoom-out-frame-size', typeof frameSize === 'number' ? `${frameSize}px` : frameSize);\n    iframeDocument.documentElement.style.setProperty('--wp-block-editor-iframe-zoom-out-content-height', `${contentHeight}px`);\n    iframeDocument.documentElement.style.setProperty('--wp-block-editor-iframe-zoom-out-inner-height', `${iframeWindowInnerHeight}px`);\n    iframeDocument.documentElement.style.setProperty('--wp-block-editor-iframe-zoom-out-container-width', `${containerWidth}px`);\n    iframeDocument.documentElement.style.setProperty('--wp-block-editor-iframe-zoom-out-outer-container-width', `${Math.max(initialContainerWidth.current, containerWidth)}px`);\n\n    // iframeDocument.documentElement.style.setProperty(\n    // \t'--wp-block-editor-iframe-zoom-out-outer-container-width',\n    // \t`${ Math.max( initialContainerWidth.current, containerWidth ) }px`\n    // );\n\n    return () => {\n      iframeDocument.documentElement.style.removeProperty('--wp-block-editor-iframe-zoom-out-scale');\n      iframeDocument.documentElement.style.removeProperty('--wp-block-editor-iframe-zoom-out-frame-size');\n      iframeDocument.documentElement.style.removeProperty('--wp-block-editor-iframe-zoom-out-content-height');\n      iframeDocument.documentElement.style.removeProperty('--wp-block-editor-iframe-zoom-out-inner-height');\n      iframeDocument.documentElement.style.removeProperty('--wp-block-editor-iframe-zoom-out-container-width');\n      iframeDocument.documentElement.style.removeProperty('--wp-block-editor-iframe-zoom-out-outer-container-width');\n    };\n  }, [scale, frameSize, iframeDocument, iframeWindowInnerHeight, contentHeight, containerWidth, windowInnerWidth, isZoomedOut]);\n\n  // Make sure to not render the before and after focusable div elements in view\n  // mode. They're only needed to capture focus in edit mode.\n  const shouldRenderFocusCaptureElements = tabIndex >= 0 && !isPreviewMode;\n  const iframe = /*#__PURE__*/_jsxs(_Fragment, {\n    children: [shouldRenderFocusCaptureElements && before, /*#__PURE__*/_jsx(\"iframe\", {\n      ...props,\n      style: {\n        ...props.style,\n        height: props.style?.height,\n        border: 0\n      },\n      ref: useMergeRefs([ref, setRef]),\n      tabIndex: tabIndex\n      // Correct doctype is required to enable rendering in standards\n      // mode. Also preload the styles to avoid a flash of unstyled\n      // content.\n      ,\n      src: src,\n      title: title,\n      onKeyDown: event => {\n        if (props.onKeyDown) {\n          props.onKeyDown(event);\n        }\n        // If the event originates from inside the iframe, it means\n        // it bubbled through the portal, but only with React\n        // events. We need to to bubble native events as well,\n        // though by doing so we also trigger another React event,\n        // so we need to stop the propagation of this event to avoid\n        // duplication.\n        if (event.currentTarget.ownerDocument !== event.target.ownerDocument) {\n          // We should only stop propagation of the React event,\n          // the native event should further bubble inside the\n          // iframe to the document and window.\n          // Alternatively, we could consider redispatching the\n          // native event in the iframe.\n          const {\n            stopPropagation\n          } = event.nativeEvent;\n          event.nativeEvent.stopPropagation = () => {};\n          event.stopPropagation();\n          event.nativeEvent.stopPropagation = stopPropagation;\n          bubbleEvent(event, window.KeyboardEvent, event.currentTarget);\n        }\n      },\n      children: iframeDocument && createPortal(\n      /*#__PURE__*/\n      // We want to prevent React events from bubbling throught the iframe\n      // we bubble these manually.\n      /* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */\n      _jsxs(\"body\", {\n        ref: bodyRef,\n        className: clsx('block-editor-iframe__body', 'editor-styles-wrapper', ...bodyClasses),\n        children: [contentResizeListener, /*#__PURE__*/_jsx(StyleProvider, {\n          document: iframeDocument,\n          children: children\n        })]\n      }), iframeDocument.documentElement)\n    }), shouldRenderFocusCaptureElements && after]\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"block-editor-iframe__container\",\n    ref: windowResizeRef,\n    children: [containerResizeListener, /*#__PURE__*/_jsx(\"div\", {\n      className: clsx('block-editor-iframe__scale-container', isZoomedOut && 'is-zoomed-out'),\n      style: {\n        '--wp-block-editor-iframe-zoom-out-outer-container-width': isZoomedOut && `${Math.max(initialContainerWidth.current, containerWidth)}px`\n      },\n      children: iframe\n    })]\n  });\n}\nfunction IframeIfReady(props, ref) {\n  const isInitialised = useSelect(select => select(blockEditorStore).getSettings().__internalIsInitialized, []);\n\n  // We shouldn't render the iframe until the editor settings are initialised.\n  // The initial settings are needed to get the styles for the srcDoc, which\n  // cannot be changed after the iframe is mounted. srcDoc is used to to set\n  // the initial iframe HTML, which is required to avoid a flash of unstyled\n  // content.\n  if (!isInitialised) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(Iframe, {\n    ...props,\n    forwardedRef: ref\n  });\n}\nexport default forwardRef(IframeIfReady);\n//# sourceMappingURL=index.js.map","/**\n * WordPress dependencies\n */\nimport { isReusableBlock, createBlock, getBlockFromExample } from '@wordpress/blocks';\nimport { useMemo } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport BlockCard from '../block-card';\nimport BlockPreview from '../block-preview';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction InserterPreviewPanel({\n  item\n}) {\n  var _example$viewportWidt;\n  const {\n    name,\n    title,\n    icon,\n    description,\n    initialAttributes,\n    example\n  } = item;\n  const isReusable = isReusableBlock(item);\n  const blocks = useMemo(() => {\n    if (!example) {\n      return createBlock(name, initialAttributes);\n    }\n    return getBlockFromExample(name, {\n      attributes: {\n        ...example.attributes,\n        ...initialAttributes\n      },\n      innerBlocks: example.innerBlocks\n    });\n  }, [name, example, initialAttributes]);\n  // Same as height of BlockPreviewPanel.\n  const previewHeight = 144;\n  const sidebarWidth = 280;\n  const viewportWidth = (_example$viewportWidt = example?.viewportWidth) !== null && _example$viewportWidt !== void 0 ? _example$viewportWidt : 500;\n  const scale = sidebarWidth / viewportWidth;\n  const minHeight = scale !== 0 && scale < 1 && previewHeight ? previewHeight / scale : previewHeight;\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"block-editor-inserter__preview-container\",\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"block-editor-inserter__preview\",\n      children: isReusable || example ? /*#__PURE__*/_jsx(\"div\", {\n        className: \"block-editor-inserter__preview-content\",\n        children: /*#__PURE__*/_jsx(BlockPreview, {\n          blocks: blocks,\n          viewportWidth: viewportWidth,\n          minHeight: previewHeight,\n          additionalStyles:\n          //We want this CSS to be in sync with the one in BlockPreviewPanel.\n          [{\n            css: `\n\t\t\t\t\t\t\t\t\t\tbody { \n\t\t\t\t\t\t\t\t\t\t\tpadding: 24px;\n\t\t\t\t\t\t\t\t\t\t\tmin-height:${Math.round(minHeight)}px;\n\t\t\t\t\t\t\t\t\t\t\tdisplay:flex;\n\t\t\t\t\t\t\t\t\t\t\talign-items:center;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t.is-root-container { width: 100%; }\n\t\t\t\t\t\t\t\t\t`\n          }]\n        })\n      }) : /*#__PURE__*/_jsx(\"div\", {\n        className: \"block-editor-inserter__preview-content-missing\",\n        children: __('No preview available.')\n      })\n    }), !isReusable && /*#__PURE__*/_jsx(BlockCard, {\n      title: title,\n      icon: icon,\n      description: description\n    })]\n  });\n}\nexport default InserterPreviewPanel;\n//# sourceMappingURL=preview-panel.js.map","/**\n * External dependencies\n */\n\n/**\n * WordPress dependencies\n */\nimport { useMemo, useReducer } from '@wordpress/element';\nimport isShallowEqual from '@wordpress/is-shallow-equal';\nimport warning from '@wordpress/warning';\n\n/**\n * Internal dependencies\n */\n\nimport { contextConnect, useContextSystem } from '../../context';\nimport { useCx } from '../../utils/hooks/use-cx';\nimport { patternMatch, findParent } from '../utils/router';\nimport { View } from '../../view';\nimport { NavigatorContext } from '../context';\nimport * as styles from '../styles';\nimport deprecated from '@wordpress/deprecated';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction addScreen({\n  screens\n}, screen) {\n  if (screens.some(s => s.path === screen.path)) {\n    globalThis.SCRIPT_DEBUG === true ? warning(`Navigator: a screen with path ${screen.path} already exists.\nThe screen with id ${screen.id} will not be added.`) : void 0;\n    return screens;\n  }\n  return [...screens, screen];\n}\nfunction removeScreen({\n  screens\n}, screen) {\n  return screens.filter(s => s.id !== screen.id);\n}\nfunction goTo(state, path, options = {}) {\n  var _focusSelectorsCopy2;\n  const {\n    focusSelectors\n  } = state;\n  const currentLocation = {\n    ...state.currentLocation\n  };\n  const {\n    // Default assignments\n    isBack = false,\n    skipFocus = false,\n    // Extract to avoid forwarding\n    replace,\n    focusTargetSelector,\n    // Rest\n    ...restOptions\n  } = options;\n  if (currentLocation.path === path) {\n    return {\n      currentLocation,\n      focusSelectors\n    };\n  }\n  let focusSelectorsCopy;\n  function getFocusSelectorsCopy() {\n    var _focusSelectorsCopy;\n    focusSelectorsCopy = (_focusSelectorsCopy = focusSelectorsCopy) !== null && _focusSelectorsCopy !== void 0 ? _focusSelectorsCopy : new Map(state.focusSelectors);\n    return focusSelectorsCopy;\n  }\n\n  // Set a focus selector that will be used when navigating\n  // back to the current location.\n  if (focusTargetSelector && currentLocation.path) {\n    getFocusSelectorsCopy().set(currentLocation.path, focusTargetSelector);\n  }\n\n  // Get the focus selector for the new location.\n  let currentFocusSelector;\n  if (focusSelectors.get(path)) {\n    if (isBack) {\n      // Use the found focus selector only when navigating back.\n      currentFocusSelector = focusSelectors.get(path);\n    }\n    // Make a copy of the focusSelectors map to remove the focus selector\n    // only if necessary (ie. a focus selector was found).\n    getFocusSelectorsCopy().delete(path);\n  }\n  return {\n    currentLocation: {\n      ...restOptions,\n      isInitial: false,\n      path,\n      isBack,\n      hasRestoredFocus: false,\n      focusTargetSelector: currentFocusSelector,\n      skipFocus\n    },\n    focusSelectors: (_focusSelectorsCopy2 = focusSelectorsCopy) !== null && _focusSelectorsCopy2 !== void 0 ? _focusSelectorsCopy2 : focusSelectors\n  };\n}\nfunction goToParent(state, options = {}) {\n  const {\n    screens,\n    focusSelectors\n  } = state;\n  const currentLocation = {\n    ...state.currentLocation\n  };\n  const currentPath = currentLocation.path;\n  if (currentPath === undefined) {\n    return {\n      currentLocation,\n      focusSelectors\n    };\n  }\n  const parentPath = findParent(currentPath, screens);\n  if (parentPath === undefined) {\n    return {\n      currentLocation,\n      focusSelectors\n    };\n  }\n  return goTo(state, parentPath, {\n    ...options,\n    isBack: true\n  });\n}\nfunction routerReducer(state, action) {\n  let {\n    screens,\n    currentLocation,\n    matchedPath,\n    focusSelectors,\n    ...restState\n  } = state;\n  switch (action.type) {\n    case 'add':\n      screens = addScreen(state, action.screen);\n      break;\n    case 'remove':\n      screens = removeScreen(state, action.screen);\n      break;\n    case 'goto':\n      ({\n        currentLocation,\n        focusSelectors\n      } = goTo(state, action.path, action.options));\n      break;\n    case 'gotoparent':\n      ({\n        currentLocation,\n        focusSelectors\n      } = goToParent(state, action.options));\n      break;\n  }\n\n  // Return early in case there is no change\n  if (screens === state.screens && currentLocation === state.currentLocation) {\n    return state;\n  }\n\n  // Compute the matchedPath\n  const currentPath = currentLocation.path;\n  matchedPath = currentPath !== undefined ? patternMatch(currentPath, screens) : undefined;\n\n  // If the new match is the same as the previous match,\n  // return the previous one to keep immutability.\n  if (matchedPath && state.matchedPath && matchedPath.id === state.matchedPath.id && isShallowEqual(matchedPath.params, state.matchedPath.params)) {\n    matchedPath = state.matchedPath;\n  }\n  return {\n    ...restState,\n    screens,\n    currentLocation,\n    matchedPath,\n    focusSelectors\n  };\n}\nfunction UnconnectedNavigator(props, forwardedRef) {\n  const {\n    initialPath: initialPathProp,\n    children,\n    className,\n    ...otherProps\n  } = useContextSystem(props, 'Navigator');\n  const [routerState, dispatch] = useReducer(routerReducer, initialPathProp, path => ({\n    screens: [],\n    currentLocation: {\n      path,\n      isInitial: true\n    },\n    matchedPath: undefined,\n    focusSelectors: new Map(),\n    initialPath: initialPathProp\n  }));\n\n  // The methods are constant forever, create stable references to them.\n  const methods = useMemo(() => ({\n    // Note: calling goBack calls `goToParent` internally, as it was established\n    // that `goBack` should behave like `goToParent`, and `goToParent` should\n    // be marked as deprecated.\n    goBack: options => dispatch({\n      type: 'gotoparent',\n      options\n    }),\n    goTo: (path, options) => dispatch({\n      type: 'goto',\n      path,\n      options\n    }),\n    goToParent: options => {\n      deprecated(`wp.components.useNavigator().goToParent`, {\n        since: '6.7',\n        alternative: 'wp.components.useNavigator().goBack'\n      });\n      dispatch({\n        type: 'gotoparent',\n        options\n      });\n    },\n    addScreen: screen => dispatch({\n      type: 'add',\n      screen\n    }),\n    removeScreen: screen => dispatch({\n      type: 'remove',\n      screen\n    })\n  }), []);\n  const {\n    currentLocation,\n    matchedPath\n  } = routerState;\n  const navigatorContextValue = useMemo(() => {\n    var _matchedPath$params;\n    return {\n      location: currentLocation,\n      params: (_matchedPath$params = matchedPath?.params) !== null && _matchedPath$params !== void 0 ? _matchedPath$params : {},\n      match: matchedPath?.id,\n      ...methods\n    };\n  }, [currentLocation, matchedPath, methods]);\n  const cx = useCx();\n  const classes = useMemo(() => cx(styles.navigatorWrapper, className), [className, cx]);\n  return /*#__PURE__*/_jsx(View, {\n    ref: forwardedRef,\n    className: classes,\n    ...otherProps,\n    children: /*#__PURE__*/_jsx(NavigatorContext.Provider, {\n      value: navigatorContextValue,\n      children: children\n    })\n  });\n}\nexport const Navigator = contextConnect(UnconnectedNavigator, 'Navigator');\n//# sourceMappingURL=component.js.map","/**\n * WordPress dependencies\n */\nimport { useInstanceId } from '@wordpress/compose';\nimport { useSelect } from '@wordpress/data';\nimport { useState } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../store';\nimport { useStyleOverride } from './utils';\nimport { useLayout } from '../components/block-list/layout';\nimport { GridVisualizer, GridItemResizer, GridItemMovers } from '../components/grid';\n\n// Used for generating the instance ID\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst LAYOUT_CHILD_BLOCK_PROPS_REFERENCE = {};\nfunction useBlockPropsChildLayoutStyles({\n  style\n}) {\n  var _style$layout;\n  const shouldRenderChildLayoutStyles = useSelect(select => {\n    return !select(blockEditorStore).getSettings().disableLayoutStyles;\n  });\n  const layout = (_style$layout = style?.layout) !== null && _style$layout !== void 0 ? _style$layout : {};\n  const {\n    selfStretch,\n    flexSize,\n    columnStart,\n    rowStart,\n    columnSpan,\n    rowSpan\n  } = layout;\n  const parentLayout = useLayout() || {};\n  const {\n    columnCount,\n    minimumColumnWidth\n  } = parentLayout;\n  const id = useInstanceId(LAYOUT_CHILD_BLOCK_PROPS_REFERENCE);\n  const selector = `.wp-container-content-${id}`;\n\n  // Check that the grid layout attributes are of the correct type, so that we don't accidentally\n  // write code that stores a string attribute instead of a number.\n  if (process.env.NODE_ENV === 'development') {\n    if (columnStart && typeof columnStart !== 'number') {\n      throw new Error('columnStart must be a number');\n    }\n    if (rowStart && typeof rowStart !== 'number') {\n      throw new Error('rowStart must be a number');\n    }\n    if (columnSpan && typeof columnSpan !== 'number') {\n      throw new Error('columnSpan must be a number');\n    }\n    if (rowSpan && typeof rowSpan !== 'number') {\n      throw new Error('rowSpan must be a number');\n    }\n  }\n  let css = '';\n  if (shouldRenderChildLayoutStyles) {\n    if (selfStretch === 'fixed' && flexSize) {\n      css = `${selector} {\n\t\t\t\tflex-basis: ${flexSize};\n\t\t\t\tbox-sizing: border-box;\n\t\t\t}`;\n    } else if (selfStretch === 'fill') {\n      css = `${selector} {\n\t\t\t\tflex-grow: 1;\n\t\t\t}`;\n    } else if (columnStart && columnSpan) {\n      css = `${selector} {\n\t\t\t\tgrid-column: ${columnStart} / span ${columnSpan};\n\t\t\t}`;\n    } else if (columnStart) {\n      css = `${selector} {\n\t\t\t\tgrid-column: ${columnStart};\n\t\t\t}`;\n    } else if (columnSpan) {\n      css = `${selector} {\n\t\t\t\tgrid-column: span ${columnSpan};\n\t\t\t}`;\n    }\n    if (rowStart && rowSpan) {\n      css += `${selector} {\n\t\t\t\tgrid-row: ${rowStart} / span ${rowSpan};\n\t\t\t}`;\n    } else if (rowStart) {\n      css += `${selector} {\n\t\t\t\tgrid-row: ${rowStart};\n\t\t\t}`;\n    } else if (rowSpan) {\n      css += `${selector} {\n\t\t\t\tgrid-row: span ${rowSpan};\n\t\t\t}`;\n    }\n    /**\n     * If minimumColumnWidth is set on the parent, or if no\n     * columnCount is set, the grid is responsive so a\n     * container query is needed for the span to resize.\n     */\n    if ((columnSpan || columnStart) && (minimumColumnWidth || !columnCount)) {\n      let parentColumnValue = parseFloat(minimumColumnWidth);\n      /**\n       * 12rem is the default minimumColumnWidth value.\n       * If parentColumnValue is not a number, default to 12.\n       */\n      if (isNaN(parentColumnValue)) {\n        parentColumnValue = 12;\n      }\n      let parentColumnUnit = minimumColumnWidth?.replace(parentColumnValue, '');\n      /**\n       * Check that parent column unit is either 'px', 'rem' or 'em'.\n       * If not, default to 'rem'.\n       */\n      if (!['px', 'rem', 'em'].includes(parentColumnUnit)) {\n        parentColumnUnit = 'rem';\n      }\n      let numColsToBreakAt = 2;\n      if (columnSpan && columnStart) {\n        numColsToBreakAt = columnSpan + columnStart - 1;\n      } else if (columnSpan) {\n        numColsToBreakAt = columnSpan;\n      } else {\n        numColsToBreakAt = columnStart;\n      }\n      const defaultGapValue = parentColumnUnit === 'px' ? 24 : 1.5;\n      const containerQueryValue = numColsToBreakAt * parentColumnValue + (numColsToBreakAt - 1) * defaultGapValue;\n      // For blocks that only span one column, we want to remove any rowStart values as\n      // the container reduces in size, so that blocks are still arranged in markup order.\n      const minimumContainerQueryValue = parentColumnValue * 2 + defaultGapValue - 1;\n      // If a span is set we want to preserve it as long as possible, otherwise we just reset the value.\n      const gridColumnValue = columnSpan && columnSpan > 1 ? '1/-1' : 'auto';\n      css += `@container (max-width: ${Math.max(containerQueryValue, minimumContainerQueryValue)}${parentColumnUnit}) {\n\t\t\t\t${selector} {\n\t\t\t\t\tgrid-column: ${gridColumnValue};\n\t\t\t\t\tgrid-row: auto;\n\t\t\t\t}\n\t\t\t}`;\n    }\n  }\n  useStyleOverride({\n    css\n  });\n\n  // Only attach a container class if there is generated CSS to be attached.\n  if (!css) {\n    return;\n  }\n\n  // Attach a `wp-container-content` id-based classname.\n  return {\n    className: `wp-container-content-${id}`\n  };\n}\nfunction ChildLayoutControlsPure({\n  clientId,\n  style,\n  setAttributes\n}) {\n  const parentLayout = useLayout() || {};\n  const {\n    type: parentLayoutType = 'default',\n    allowSizingOnChildren = false,\n    isManualPlacement\n  } = parentLayout;\n  if (parentLayoutType !== 'grid') {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridTools, {\n    clientId: clientId,\n    style: style,\n    setAttributes: setAttributes,\n    allowSizingOnChildren: allowSizingOnChildren,\n    isManualPlacement: isManualPlacement,\n    parentLayout: parentLayout\n  });\n}\nfunction GridTools({\n  clientId,\n  style,\n  setAttributes,\n  allowSizingOnChildren,\n  isManualPlacement,\n  parentLayout\n}) {\n  const {\n    rootClientId,\n    isVisible\n  } = useSelect(select => {\n    const {\n      getBlockRootClientId,\n      getBlockEditingMode,\n      getTemplateLock\n    } = select(blockEditorStore);\n    const _rootClientId = getBlockRootClientId(clientId);\n    if (getTemplateLock(_rootClientId) || getBlockEditingMode(_rootClientId) !== 'default') {\n      return {\n        rootClientId: _rootClientId,\n        isVisible: false\n      };\n    }\n    return {\n      rootClientId: _rootClientId,\n      isVisible: true\n    };\n  }, [clientId]);\n\n  // Use useState() instead of useRef() so that GridItemResizer updates when ref is set.\n  const [resizerBounds, setResizerBounds] = useState();\n  if (!isVisible) {\n    return null;\n  }\n  function updateLayout(layout) {\n    setAttributes({\n      style: {\n        ...style,\n        layout: {\n          ...style?.layout,\n          ...layout\n        }\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(GridVisualizer, {\n      clientId: rootClientId,\n      contentRef: setResizerBounds,\n      parentLayout: parentLayout\n    }), allowSizingOnChildren && /*#__PURE__*/_jsx(GridItemResizer, {\n      clientId: clientId\n      // Don't allow resizing beyond the grid visualizer.\n      ,\n      bounds: resizerBounds,\n      onChange: updateLayout,\n      parentLayout: parentLayout\n    }), isManualPlacement && window.__experimentalEnableGridInteractivity && /*#__PURE__*/_jsx(GridItemMovers, {\n      layout: style?.layout,\n      parentLayout: parentLayout,\n      onChange: updateLayout,\n      gridClientId: rootClientId,\n      blockClientId: clientId\n    })]\n  });\n}\nexport default {\n  useBlockProps: useBlockPropsChildLayoutStyles,\n  edit: ChildLayoutControlsPure,\n  attributeKeys: ['style'],\n  hasSupport() {\n    return true;\n  }\n};\n//# sourceMappingURL=layout-child.js.map","/**\n * WordPress dependencies\n */\nimport { Component, cloneElement, renderToString, RawHTML } from '@wordpress/element';\nimport { hasFilter, applyFilters } from '@wordpress/hooks';\nimport isShallowEqual from '@wordpress/is-shallow-equal';\nimport { removep } from '@wordpress/autop';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport { getBlockType, getFreeformContentHandlerName, getUnregisteredTypeHandlerName } from './registration';\nimport { serializeRawBlock } from './parser/serialize-raw-block';\nimport { isUnmodifiedDefaultBlock, normalizeBlockType } from './utils';\n\n/** @typedef {import('./parser').WPBlock} WPBlock */\n\n/**\n * @typedef {Object} WPBlockSerializationOptions Serialization Options.\n *\n * @property {boolean} isInnerBlocks Whether we are serializing inner blocks.\n */\n\n/**\n * Returns the block's default classname from its name.\n *\n * @param {string} blockName The block name.\n *\n * @return {string} The block's default class.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function getBlockDefaultClassName(blockName) {\n  // Generated HTML classes for blocks follow the `wp-block-{name}` nomenclature.\n  // Blocks provided by WordPress drop the prefixes 'core/' or 'core-' (historically used in 'core-embed/').\n  const className = 'wp-block-' + blockName.replace(/\\//, '-').replace(/^core-/, '');\n  return applyFilters('blocks.getBlockDefaultClassName', className, blockName);\n}\n\n/**\n * Returns the block's default menu item classname from its name.\n *\n * @param {string} blockName The block name.\n *\n * @return {string} The block's default menu item class.\n */\nexport function getBlockMenuDefaultClassName(blockName) {\n  // Generated HTML classes for blocks follow the `editor-block-list-item-{name}` nomenclature.\n  // Blocks provided by WordPress drop the prefixes 'core/' or 'core-' (historically used in 'core-embed/').\n  const className = 'editor-block-list-item-' + blockName.replace(/\\//, '-').replace(/^core-/, '');\n  return applyFilters('blocks.getBlockMenuDefaultClassName', className, blockName);\n}\nconst blockPropsProvider = {};\nconst innerBlocksPropsProvider = {};\n\n/**\n * Call within a save function to get the props for the block wrapper.\n *\n * @param {Object} props Optional. Props to pass to the element.\n */\nexport function getBlockProps(props = {}) {\n  const {\n    blockType,\n    attributes\n  } = blockPropsProvider;\n  return getBlockProps.skipFilters ? props : applyFilters('blocks.getSaveContent.extraProps', {\n    ...props\n  }, blockType, attributes);\n}\n\n/**\n * Call within a save function to get the props for the inner blocks wrapper.\n *\n * @param {Object} props Optional. Props to pass to the element.\n */\nexport function getInnerBlocksProps(props = {}) {\n  const {\n    innerBlocks\n  } = innerBlocksPropsProvider;\n  // Allow a different component to be passed to getSaveElement to handle\n  // inner blocks, bypassing the default serialisation.\n  if (!Array.isArray(innerBlocks)) {\n    return {\n      ...props,\n      children: innerBlocks\n    };\n  }\n  // Value is an array of blocks, so defer to block serializer.\n  const html = serialize(innerBlocks, {\n    isInnerBlocks: true\n  });\n  // Use special-cased raw HTML tag to avoid default escaping.\n  const children = /*#__PURE__*/_jsx(RawHTML, {\n    children: html\n  });\n  return {\n    ...props,\n    children\n  };\n}\n\n/**\n * Given a block type containing a save render implementation and attributes, returns the\n * enhanced element to be saved or string when raw HTML expected.\n *\n * @param {string|Object} blockTypeOrName Block type or name.\n * @param {Object}        attributes      Block attributes.\n * @param {?Array}        innerBlocks     Nested blocks.\n *\n * @return {Object|string} Save element or raw HTML string.\n */\nexport function getSaveElement(blockTypeOrName, attributes, innerBlocks = []) {\n  const blockType = normalizeBlockType(blockTypeOrName);\n  if (!blockType?.save) {\n    return null;\n  }\n  let {\n    save\n  } = blockType;\n\n  // Component classes are unsupported for save since serialization must\n  // occur synchronously. For improved interoperability with higher-order\n  // components which often return component class, emulate basic support.\n  if (save.prototype instanceof Component) {\n    const instance = new save({\n      attributes\n    });\n    save = instance.render.bind(instance);\n  }\n  blockPropsProvider.blockType = blockType;\n  blockPropsProvider.attributes = attributes;\n  innerBlocksPropsProvider.innerBlocks = innerBlocks;\n  let element = save({\n    attributes,\n    innerBlocks\n  });\n  if (element !== null && typeof element === 'object' && hasFilter('blocks.getSaveContent.extraProps') && !(blockType.apiVersion > 1)) {\n    /**\n     * Filters the props applied to the block save result element.\n     *\n     * @param {Object}  props      Props applied to save element.\n     * @param {WPBlock} blockType  Block type definition.\n     * @param {Object}  attributes Block attributes.\n     */\n    const props = applyFilters('blocks.getSaveContent.extraProps', {\n      ...element.props\n    }, blockType, attributes);\n    if (!isShallowEqual(props, element.props)) {\n      element = cloneElement(element, props);\n    }\n  }\n\n  /**\n   * Filters the save result of a block during serialization.\n   *\n   * @param {Element} element    Block save result.\n   * @param {WPBlock} blockType  Block type definition.\n   * @param {Object}  attributes Block attributes.\n   */\n  return applyFilters('blocks.getSaveElement', element, blockType, attributes);\n}\n\n/**\n * Given a block type containing a save render implementation and attributes, returns the\n * static markup to be saved.\n *\n * @param {string|Object} blockTypeOrName Block type or name.\n * @param {Object}        attributes      Block attributes.\n * @param {?Array}        innerBlocks     Nested blocks.\n *\n * @return {string} Save content.\n */\nexport function getSaveContent(blockTypeOrName, attributes, innerBlocks) {\n  const blockType = normalizeBlockType(blockTypeOrName);\n  return renderToString(getSaveElement(blockType, attributes, innerBlocks));\n}\n\n/**\n * Returns attributes which are to be saved and serialized into the block\n * comment delimiter.\n *\n * When a block exists in memory it contains as its attributes both those\n * parsed the block comment delimiter _and_ those which matched from the\n * contents of the block.\n *\n * This function returns only those attributes which are needed to persist and\n * which cannot be matched from the block content.\n *\n * @param {Object<string,*>} blockType  Block type.\n * @param {Object<string,*>} attributes Attributes from in-memory block data.\n *\n * @return {Object<string,*>} Subset of attributes for comment serialization.\n */\nexport function getCommentAttributes(blockType, attributes) {\n  var _blockType$attributes;\n  return Object.entries((_blockType$attributes = blockType.attributes) !== null && _blockType$attributes !== void 0 ? _blockType$attributes : {}).reduce((accumulator, [key, attributeSchema]) => {\n    const value = attributes[key];\n    // Ignore undefined values.\n    if (undefined === value) {\n      return accumulator;\n    }\n\n    // Ignore all attributes but the ones with an \"undefined\" source\n    // \"undefined\" source refers to attributes saved in the block comment.\n    if (attributeSchema.source !== undefined) {\n      return accumulator;\n    }\n\n    // Ignore all local attributes\n    if (attributeSchema.role === 'local') {\n      return accumulator;\n    }\n    if (attributeSchema.__experimentalRole === 'local') {\n      deprecated('__experimentalRole attribute', {\n        since: '6.7',\n        version: '6.8',\n        alternative: 'role attribute',\n        hint: `Check the block.json of the ${blockType?.name} block.`\n      });\n      return accumulator;\n    }\n\n    // Ignore default value.\n    if ('default' in attributeSchema && JSON.stringify(attributeSchema.default) === JSON.stringify(value)) {\n      return accumulator;\n    }\n\n    // Otherwise, include in comment set.\n    accumulator[key] = value;\n    return accumulator;\n  }, {});\n}\n\n/**\n * Given an attributes object, returns a string in the serialized attributes\n * format prepared for post content.\n *\n * @param {Object} attributes Attributes object.\n *\n * @return {string} Serialized attributes.\n */\nexport function serializeAttributes(attributes) {\n  return JSON.stringify(attributes)\n  // Don't break HTML comments.\n  .replace(/--/g, '\\\\u002d\\\\u002d')\n\n  // Don't break non-standard-compliant tools.\n  .replace(/</g, '\\\\u003c').replace(/>/g, '\\\\u003e').replace(/&/g, '\\\\u0026')\n\n  // Bypass server stripslashes behavior which would unescape stringify's\n  // escaping of quotation mark.\n  //\n  // See: https://developer.wordpress.org/reference/functions/wp_kses_stripslashes/\n  .replace(/\\\\\"/g, '\\\\u0022');\n}\n\n/**\n * Given a block object, returns the Block's Inner HTML markup.\n *\n * @param {Object} block Block instance.\n *\n * @return {string} HTML.\n */\nexport function getBlockInnerHTML(block) {\n  // If block was parsed as invalid or encounters an error while generating\n  // save content, use original content instead to avoid content loss. If a\n  // block contains nested content, exempt it from this condition because we\n  // otherwise have no access to its original content and content loss would\n  // still occur.\n  let saveContent = block.originalContent;\n  if (block.isValid || block.innerBlocks.length) {\n    try {\n      saveContent = getSaveContent(block.name, block.attributes, block.innerBlocks);\n    } catch (error) {}\n  }\n  return saveContent;\n}\n\n/**\n * Returns the content of a block, including comment delimiters.\n *\n * @param {string} rawBlockName Block name.\n * @param {Object} attributes   Block attributes.\n * @param {string} content      Block save content.\n *\n * @return {string} Comment-delimited block content.\n */\nexport function getCommentDelimitedContent(rawBlockName, attributes, content) {\n  const serializedAttributes = attributes && Object.entries(attributes).length ? serializeAttributes(attributes) + ' ' : '';\n\n  // Strip core blocks of their namespace prefix.\n  const blockName = rawBlockName?.startsWith('core/') ? rawBlockName.slice(5) : rawBlockName;\n\n  // @todo make the `wp:` prefix potentially configurable.\n\n  if (!content) {\n    return `<!-- wp:${blockName} ${serializedAttributes}/-->`;\n  }\n  return `<!-- wp:${blockName} ${serializedAttributes}-->\\n` + content + `\\n<!-- /wp:${blockName} -->`;\n}\n\n/**\n * Returns the content of a block, including comment delimiters, determining\n * serialized attributes and content form from the current state of the block.\n *\n * @param {WPBlock}                     block   Block instance.\n * @param {WPBlockSerializationOptions} options Serialization options.\n *\n * @return {string} Serialized block.\n */\nexport function serializeBlock(block, {\n  isInnerBlocks = false\n} = {}) {\n  if (!block.isValid && block.__unstableBlockSource) {\n    return serializeRawBlock(block.__unstableBlockSource);\n  }\n  const blockName = block.name;\n  const saveContent = getBlockInnerHTML(block);\n  if (blockName === getUnregisteredTypeHandlerName() || !isInnerBlocks && blockName === getFreeformContentHandlerName()) {\n    return saveContent;\n  }\n  const blockType = getBlockType(blockName);\n  if (!blockType) {\n    return saveContent;\n  }\n  const saveAttributes = getCommentAttributes(blockType, block.attributes);\n  return getCommentDelimitedContent(blockName, saveAttributes, saveContent);\n}\nexport function __unstableSerializeAndClean(blocks) {\n  // A single unmodified default block is assumed to\n  // be equivalent to an empty post.\n  if (blocks.length === 1 && isUnmodifiedDefaultBlock(blocks[0])) {\n    blocks = [];\n  }\n  let content = serialize(blocks);\n\n  // For compatibility, treat a post consisting of a\n  // single freeform block as legacy content and apply\n  // pre-block-editor removep'd content formatting.\n  if (blocks.length === 1 && blocks[0].name === getFreeformContentHandlerName() && blocks[0].name === 'core/freeform') {\n    content = removep(content);\n  }\n  return content;\n}\n\n/**\n * Takes a block or set of blocks and returns the serialized post content.\n *\n * @param {Array}                       blocks  Block(s) to serialize.\n * @param {WPBlockSerializationOptions} options Serialization options.\n *\n * @return {string} The post content.\n */\nexport default function serialize(blocks, options) {\n  const blocksArray = Array.isArray(blocks) ? blocks : [blocks];\n  return blocksArray.map(block => serializeBlock(block, options)).join('\\n\\n');\n}\n//# sourceMappingURL=serializer.js.map","/**\n * External dependencies\n */\nimport showdown from 'showdown';\n\n// Reuse the same showdown converter.\nconst converter = new showdown.Converter({\n  noHeaderId: true,\n  tables: true,\n  literalMidWordUnderscores: true,\n  omitExtraWLInCodeBlocks: true,\n  simpleLineBreaks: true,\n  strikethrough: true\n});\n\n/**\n * Corrects the Slack Markdown variant of the code block.\n * If uncorrected, it will be converted to inline code.\n *\n * @see https://get.slack.help/hc/en-us/articles/202288908-how-can-i-add-formatting-to-my-messages-#code-blocks\n *\n * @param {string} text The potential Markdown text to correct.\n *\n * @return {string} The corrected Markdown.\n */\nfunction slackMarkdownVariantCorrector(text) {\n  return text.replace(/((?:^|\\n)```)([^\\n`]+)(```(?:$|\\n))/, (match, p1, p2, p3) => `${p1}\\n${p2}\\n${p3}`);\n}\nfunction bulletsToAsterisks(text) {\n  return text.replace(/(^|\\n)•( +)/g, '$1*$2');\n}\n\n/**\n * Converts a piece of text into HTML based on any Markdown present.\n * Also decodes any encoded HTML.\n *\n * @param {string} text The plain text to convert.\n *\n * @return {string} HTML.\n */\nexport default function markdownConverter(text) {\n  return converter.makeHtml(slackMarkdownVariantCorrector(bulletsToAsterisks(text)));\n}\n//# sourceMappingURL=markdown-converter.js.map","import _styled from \"@emotion/styled/base\";\n/**\n * External dependencies\n */\n\n/**\n * Internal dependencies\n */\nimport NumberControl from '../number-control';\nimport InnerSelectControl from '../select-control';\nimport InnerRangeControl from '../range-control';\nimport { space } from '../utils/space';\nimport { boxSizingReset } from '../utils';\nimport Button from '../button';\nimport { Flex } from '../flex';\nimport { HStack } from '../h-stack';\nimport CONFIG from '../utils/config-values';\nexport const NumberControlWrapper = /*#__PURE__*/_styled(NumberControl, process.env.NODE_ENV === \"production\" ? {\n  target: \"ez9hsf47\"\n} : {\n  target: \"ez9hsf47\",\n  label: \"NumberControlWrapper\"\n})(\"width:\", space(24), \";\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvY29sb3ItcGlja2VyL3N0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrQjJEIiwiZmlsZSI6IkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvY29sb3ItcGlja2VyL3N0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IE51bWJlckNvbnRyb2wgZnJvbSAnLi4vbnVtYmVyLWNvbnRyb2wnO1xuaW1wb3J0IElubmVyU2VsZWN0Q29udHJvbCBmcm9tICcuLi9zZWxlY3QtY29udHJvbCc7XG5pbXBvcnQgSW5uZXJSYW5nZUNvbnRyb2wgZnJvbSAnLi4vcmFuZ2UtY29udHJvbCc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uL3V0aWxzL3NwYWNlJztcbmltcG9ydCB7IGJveFNpemluZ1Jlc2V0IH0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IEJ1dHRvbiBmcm9tICcuLi9idXR0b24nO1xuaW1wb3J0IHsgRmxleCB9IGZyb20gJy4uL2ZsZXgnO1xuaW1wb3J0IHsgSFN0YWNrIH0gZnJvbSAnLi4vaC1zdGFjayc7XG5pbXBvcnQgQ09ORklHIGZyb20gJy4uL3V0aWxzL2NvbmZpZy12YWx1ZXMnO1xuXG5leHBvcnQgY29uc3QgTnVtYmVyQ29udHJvbFdyYXBwZXIgPSBzdHlsZWQoIE51bWJlckNvbnRyb2wgKWBcblx0d2lkdGg6ICR7IHNwYWNlKCAyNCApIH07XG5gO1xuXG5leHBvcnQgY29uc3QgU2VsZWN0Q29udHJvbCA9IHN0eWxlZCggSW5uZXJTZWxlY3RDb250cm9sIClgXG5cdG1hcmdpbi1sZWZ0OiAkeyBzcGFjZSggLTIgKSB9O1xuXHR3aWR0aDogNWVtO1xuYDtcblxuZXhwb3J0IGNvbnN0IFJhbmdlQ29udHJvbCA9IHN0eWxlZCggSW5uZXJSYW5nZUNvbnRyb2wgKWBcblx0ZmxleDogMTtcblx0bWFyZ2luLXJpZ2h0OiAkeyBzcGFjZSggMiApIH07XG5gO1xuXG4vLyBNYWtlIHRoZSBIdWUgY2lyY2xlIHBpY2tlciBub3QgZ28gb3V0IG9mIHRoZSBiYXIuXG5jb25zdCBpbnRlcmFjdGl2ZUh1ZVN0eWxlcyA9IGBcbi5yZWFjdC1jb2xvcmZ1bF9faW50ZXJhY3RpdmUge1xuXHR3aWR0aDogY2FsYyggMTAwJSAtICR7IHNwYWNlKCAyICkgfSApO1xuXHRtYXJnaW4tbGVmdDogJHsgc3BhY2UoIDEgKSB9O1xufWA7XG5cbmV4cG9ydCBjb25zdCBBdXhpbGlhcnlDb2xvckFydGVmYWN0V3JhcHBlciA9IHN0eWxlZC5kaXZgXG5cdHBhZGRpbmctdG9wOiAkeyBzcGFjZSggMiApIH07XG5cdHBhZGRpbmctcmlnaHQ6IDA7XG5cdHBhZGRpbmctbGVmdDogMDtcblx0cGFkZGluZy1ib3R0b206IDA7XG5gO1xuXG5leHBvcnQgY29uc3QgQXV4aWxpYXJ5Q29sb3JBcnRlZmFjdEhTdGFja0hlYWRlciA9IHN0eWxlZCggSFN0YWNrIClgXG5cdHBhZGRpbmctbGVmdDogJHsgc3BhY2UoIDQgKSB9O1xuXHRwYWRkaW5nLXJpZ2h0OiAkeyBzcGFjZSggNCApIH07XG5gO1xuXG5leHBvcnQgY29uc3QgQ29sb3JJbnB1dFdyYXBwZXIgPSBzdHlsZWQoIEZsZXggKWBcblx0cGFkZGluZy10b3A6ICR7IHNwYWNlKCA0ICkgfTtcblx0cGFkZGluZy1sZWZ0OiAkeyBzcGFjZSggNCApIH07XG5cdHBhZGRpbmctcmlnaHQ6ICR7IHNwYWNlKCAzICkgfTtcblx0cGFkZGluZy1ib3R0b206ICR7IHNwYWNlKCA1ICkgfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBDb2xvcmZ1bFdyYXBwZXIgPSBzdHlsZWQuZGl2YFxuXHQkeyBib3hTaXppbmdSZXNldCB9O1xuXG5cdHdpZHRoOiAyMTZweDtcblxuXHQucmVhY3QtY29sb3JmdWwge1xuXHRcdGRpc3BsYXk6IGZsZXg7XG5cdFx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRcdHdpZHRoOiAyMTZweDtcblx0XHRoZWlnaHQ6IGF1dG87XG5cdH1cblxuXHQucmVhY3QtY29sb3JmdWxfX3NhdHVyYXRpb24ge1xuXHRcdHdpZHRoOiAxMDAlO1xuXHRcdGJvcmRlci1yYWRpdXM6IDA7XG5cdFx0aGVpZ2h0OiAyMTZweDtcblx0XHRtYXJnaW4tYm90dG9tOiAkeyBzcGFjZSggNCApIH07XG5cdFx0Ym9yZGVyLWJvdHRvbTogbm9uZTtcblx0fVxuXG5cdC5yZWFjdC1jb2xvcmZ1bF9faHVlLFxuXHQucmVhY3QtY29sb3JmdWxfX2FscGhhIHtcblx0XHR3aWR0aDogMTg0cHg7XG5cdFx0aGVpZ2h0OiAxNnB4O1xuXHRcdGJvcmRlci1yYWRpdXM6ICR7IENPTkZJRy5yYWRpdXNGdWxsIH07XG5cdFx0bWFyZ2luLWJvdHRvbTogJHsgc3BhY2UoIDIgKSB9O1xuXHR9XG5cblx0LnJlYWN0LWNvbG9yZnVsX19wb2ludGVyIHtcblx0XHRoZWlnaHQ6IDE2cHg7XG5cdFx0d2lkdGg6IDE2cHg7XG5cdFx0Ym9yZGVyOiBub25lO1xuXHRcdGJveC1zaGFkb3c6IDAgMCAycHggMCByZ2JhKCAwLCAwLCAwLCAwLjI1ICk7XG5cblx0XHQvLyBTaG93biBpbnN0ZWFkIG9mIGJveC1zaGFkb3cgdG8gV2luZG93cyBoaWdoIGNvbnRyYXN0IG1vZGUuXG5cdFx0b3V0bGluZTogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuXHR9XG5cblx0LnJlYWN0LWNvbG9yZnVsX19wb2ludGVyLWZpbGwge1xuXHRcdGJveC1zaGFkb3c6IGluc2V0IDAgMCAwICR7IENPTkZJRy5ib3JkZXJXaWR0aEZvY3VzIH0gI2ZmZjtcblx0fVxuXG5cdCR7IGludGVyYWN0aXZlSHVlU3R5bGVzIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBDb3B5QnV0dG9uID0gc3R5bGVkKCBCdXR0b24gKWBcblx0JiYmJiYge1xuXHRcdG1pbi13aWR0aDogJHsgc3BhY2UoIDYgKSB9O1xuXHRcdHBhZGRpbmc6IDA7XG5cblx0XHQ+IHN2ZyB7XG5cdFx0XHRtYXJnaW4tcmlnaHQ6IDA7XG5cdFx0fVxuXHR9XG5gO1xuIl19 */\"));\nexport const SelectControl = /*#__PURE__*/_styled(InnerSelectControl, process.env.NODE_ENV === \"production\" ? {\n  target: \"ez9hsf46\"\n} : {\n  target: \"ez9hsf46\",\n  label: \"SelectControl\"\n})(\"margin-left:\", space(-2), \";width:5em;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvY29sb3ItcGlja2VyL3N0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFzQnlEIiwiZmlsZSI6IkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvY29sb3ItcGlja2VyL3N0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IE51bWJlckNvbnRyb2wgZnJvbSAnLi4vbnVtYmVyLWNvbnRyb2wnO1xuaW1wb3J0IElubmVyU2VsZWN0Q29udHJvbCBmcm9tICcuLi9zZWxlY3QtY29udHJvbCc7XG5pbXBvcnQgSW5uZXJSYW5nZUNvbnRyb2wgZnJvbSAnLi4vcmFuZ2UtY29udHJvbCc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uL3V0aWxzL3NwYWNlJztcbmltcG9ydCB7IGJveFNpemluZ1Jlc2V0IH0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IEJ1dHRvbiBmcm9tICcuLi9idXR0b24nO1xuaW1wb3J0IHsgRmxleCB9IGZyb20gJy4uL2ZsZXgnO1xuaW1wb3J0IHsgSFN0YWNrIH0gZnJvbSAnLi4vaC1zdGFjayc7XG5pbXBvcnQgQ09ORklHIGZyb20gJy4uL3V0aWxzL2NvbmZpZy12YWx1ZXMnO1xuXG5leHBvcnQgY29uc3QgTnVtYmVyQ29udHJvbFdyYXBwZXIgPSBzdHlsZWQoIE51bWJlckNvbnRyb2wgKWBcblx0d2lkdGg6ICR7IHNwYWNlKCAyNCApIH07XG5gO1xuXG5leHBvcnQgY29uc3QgU2VsZWN0Q29udHJvbCA9IHN0eWxlZCggSW5uZXJTZWxlY3RDb250cm9sIClgXG5cdG1hcmdpbi1sZWZ0OiAkeyBzcGFjZSggLTIgKSB9O1xuXHR3aWR0aDogNWVtO1xuYDtcblxuZXhwb3J0IGNvbnN0IFJhbmdlQ29udHJvbCA9IHN0eWxlZCggSW5uZXJSYW5nZUNvbnRyb2wgKWBcblx0ZmxleDogMTtcblx0bWFyZ2luLXJpZ2h0OiAkeyBzcGFjZSggMiApIH07XG5gO1xuXG4vLyBNYWtlIHRoZSBIdWUgY2lyY2xlIHBpY2tlciBub3QgZ28gb3V0IG9mIHRoZSBiYXIuXG5jb25zdCBpbnRlcmFjdGl2ZUh1ZVN0eWxlcyA9IGBcbi5yZWFjdC1jb2xvcmZ1bF9faW50ZXJhY3RpdmUge1xuXHR3aWR0aDogY2FsYyggMTAwJSAtICR7IHNwYWNlKCAyICkgfSApO1xuXHRtYXJnaW4tbGVmdDogJHsgc3BhY2UoIDEgKSB9O1xufWA7XG5cbmV4cG9ydCBjb25zdCBBdXhpbGlhcnlDb2xvckFydGVmYWN0V3JhcHBlciA9IHN0eWxlZC5kaXZgXG5cdHBhZGRpbmctdG9wOiAkeyBzcGFjZSggMiApIH07XG5cdHBhZGRpbmctcmlnaHQ6IDA7XG5cdHBhZGRpbmctbGVmdDogMDtcblx0cGFkZGluZy1ib3R0b206IDA7XG5gO1xuXG5leHBvcnQgY29uc3QgQXV4aWxpYXJ5Q29sb3JBcnRlZmFjdEhTdGFja0hlYWRlciA9IHN0eWxlZCggSFN0YWNrIClgXG5cdHBhZGRpbmctbGVmdDogJHsgc3BhY2UoIDQgKSB9O1xuXHRwYWRkaW5nLXJpZ2h0OiAkeyBzcGFjZSggNCApIH07XG5gO1xuXG5leHBvcnQgY29uc3QgQ29sb3JJbnB1dFdyYXBwZXIgPSBzdHlsZWQoIEZsZXggKWBcblx0cGFkZGluZy10b3A6ICR7IHNwYWNlKCA0ICkgfTtcblx0cGFkZGluZy1sZWZ0OiAkeyBzcGFjZSggNCApIH07XG5cdHBhZGRpbmctcmlnaHQ6ICR7IHNwYWNlKCAzICkgfTtcblx0cGFkZGluZy1ib3R0b206ICR7IHNwYWNlKCA1ICkgfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBDb2xvcmZ1bFdyYXBwZXIgPSBzdHlsZWQuZGl2YFxuXHQkeyBib3hTaXppbmdSZXNldCB9O1xuXG5cdHdpZHRoOiAyMTZweDtcblxuXHQucmVhY3QtY29sb3JmdWwge1xuXHRcdGRpc3BsYXk6IGZsZXg7XG5cdFx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRcdHdpZHRoOiAyMTZweDtcblx0XHRoZWlnaHQ6IGF1dG87XG5cdH1cblxuXHQucmVhY3QtY29sb3JmdWxfX3NhdHVyYXRpb24ge1xuXHRcdHdpZHRoOiAxMDAlO1xuXHRcdGJvcmRlci1yYWRpdXM6IDA7XG5cdFx0aGVpZ2h0OiAyMTZweDtcblx0XHRtYXJnaW4tYm90dG9tOiAkeyBzcGFjZSggNCApIH07XG5cdFx0Ym9yZGVyLWJvdHRvbTogbm9uZTtcblx0fVxuXG5cdC5yZWFjdC1jb2xvcmZ1bF9faHVlLFxuXHQucmVhY3QtY29sb3JmdWxfX2FscGhhIHtcblx0XHR3aWR0aDogMTg0cHg7XG5cdFx0aGVpZ2h0OiAxNnB4O1xuXHRcdGJvcmRlci1yYWRpdXM6ICR7IENPTkZJRy5yYWRpdXNGdWxsIH07XG5cdFx0bWFyZ2luLWJvdHRvbTogJHsgc3BhY2UoIDIgKSB9O1xuXHR9XG5cblx0LnJlYWN0LWNvbG9yZnVsX19wb2ludGVyIHtcblx0XHRoZWlnaHQ6IDE2cHg7XG5cdFx0d2lkdGg6IDE2cHg7XG5cdFx0Ym9yZGVyOiBub25lO1xuXHRcdGJveC1zaGFkb3c6IDAgMCAycHggMCByZ2JhKCAwLCAwLCAwLCAwLjI1ICk7XG5cblx0XHQvLyBTaG93biBpbnN0ZWFkIG9mIGJveC1zaGFkb3cgdG8gV2luZG93cyBoaWdoIGNvbnRyYXN0IG1vZGUuXG5cdFx0b3V0bGluZTogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuXHR9XG5cblx0LnJlYWN0LWNvbG9yZnVsX19wb2ludGVyLWZpbGwge1xuXHRcdGJveC1zaGFkb3c6IGluc2V0IDAgMCAwICR7IENPTkZJRy5ib3JkZXJXaWR0aEZvY3VzIH0gI2ZmZjtcblx0fVxuXG5cdCR7IGludGVyYWN0aXZlSHVlU3R5bGVzIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBDb3B5QnV0dG9uID0gc3R5bGVkKCBCdXR0b24gKWBcblx0JiYmJiYge1xuXHRcdG1pbi13aWR0aDogJHsgc3BhY2UoIDYgKSB9O1xuXHRcdHBhZGRpbmc6IDA7XG5cblx0XHQ+IHN2ZyB7XG5cdFx0XHRtYXJnaW4tcmlnaHQ6IDA7XG5cdFx0fVxuXHR9XG5gO1xuIl19 */\"));\nexport const RangeControl = /*#__PURE__*/_styled(InnerRangeControl, process.env.NODE_ENV === \"production\" ? {\n  target: \"ez9hsf45\"\n} : {\n  target: \"ez9hsf45\",\n  label: \"RangeControl\"\n})(\"flex:1;margin-right:\", space(2), \";\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvY29sb3ItcGlja2VyL3N0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEyQnVEIiwiZmlsZSI6IkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvY29sb3ItcGlja2VyL3N0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IE51bWJlckNvbnRyb2wgZnJvbSAnLi4vbnVtYmVyLWNvbnRyb2wnO1xuaW1wb3J0IElubmVyU2VsZWN0Q29udHJvbCBmcm9tICcuLi9zZWxlY3QtY29udHJvbCc7XG5pbXBvcnQgSW5uZXJSYW5nZUNvbnRyb2wgZnJvbSAnLi4vcmFuZ2UtY29udHJvbCc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uL3V0aWxzL3NwYWNlJztcbmltcG9ydCB7IGJveFNpemluZ1Jlc2V0IH0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IEJ1dHRvbiBmcm9tICcuLi9idXR0b24nO1xuaW1wb3J0IHsgRmxleCB9IGZyb20gJy4uL2ZsZXgnO1xuaW1wb3J0IHsgSFN0YWNrIH0gZnJvbSAnLi4vaC1zdGFjayc7XG5pbXBvcnQgQ09ORklHIGZyb20gJy4uL3V0aWxzL2NvbmZpZy12YWx1ZXMnO1xuXG5leHBvcnQgY29uc3QgTnVtYmVyQ29udHJvbFdyYXBwZXIgPSBzdHlsZWQoIE51bWJlckNvbnRyb2wgKWBcblx0d2lkdGg6ICR7IHNwYWNlKCAyNCApIH07XG5gO1xuXG5leHBvcnQgY29uc3QgU2VsZWN0Q29udHJvbCA9IHN0eWxlZCggSW5uZXJTZWxlY3RDb250cm9sIClgXG5cdG1hcmdpbi1sZWZ0OiAkeyBzcGFjZSggLTIgKSB9O1xuXHR3aWR0aDogNWVtO1xuYDtcblxuZXhwb3J0IGNvbnN0IFJhbmdlQ29udHJvbCA9IHN0eWxlZCggSW5uZXJSYW5nZUNvbnRyb2wgKWBcblx0ZmxleDogMTtcblx0bWFyZ2luLXJpZ2h0OiAkeyBzcGFjZSggMiApIH07XG5gO1xuXG4vLyBNYWtlIHRoZSBIdWUgY2lyY2xlIHBpY2tlciBub3QgZ28gb3V0IG9mIHRoZSBiYXIuXG5jb25zdCBpbnRlcmFjdGl2ZUh1ZVN0eWxlcyA9IGBcbi5yZWFjdC1jb2xvcmZ1bF9faW50ZXJhY3RpdmUge1xuXHR3aWR0aDogY2FsYyggMTAwJSAtICR7IHNwYWNlKCAyICkgfSApO1xuXHRtYXJnaW4tbGVmdDogJHsgc3BhY2UoIDEgKSB9O1xufWA7XG5cbmV4cG9ydCBjb25zdCBBdXhpbGlhcnlDb2xvckFydGVmYWN0V3JhcHBlciA9IHN0eWxlZC5kaXZgXG5cdHBhZGRpbmctdG9wOiAkeyBzcGFjZSggMiApIH07XG5cdHBhZGRpbmctcmlnaHQ6IDA7XG5cdHBhZGRpbmctbGVmdDogMDtcblx0cGFkZGluZy1ib3R0b206IDA7XG5gO1xuXG5leHBvcnQgY29uc3QgQXV4aWxpYXJ5Q29sb3JBcnRlZmFjdEhTdGFja0hlYWRlciA9IHN0eWxlZCggSFN0YWNrIClgXG5cdHBhZGRpbmctbGVmdDogJHsgc3BhY2UoIDQgKSB9O1xuXHRwYWRkaW5nLXJpZ2h0OiAkeyBzcGFjZSggNCApIH07XG5gO1xuXG5leHBvcnQgY29uc3QgQ29sb3JJbnB1dFdyYXBwZXIgPSBzdHlsZWQoIEZsZXggKWBcblx0cGFkZGluZy10b3A6ICR7IHNwYWNlKCA0ICkgfTtcblx0cGFkZGluZy1sZWZ0OiAkeyBzcGFjZSggNCApIH07XG5cdHBhZGRpbmctcmlnaHQ6ICR7IHNwYWNlKCAzICkgfTtcblx0cGFkZGluZy1ib3R0b206ICR7IHNwYWNlKCA1ICkgfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBDb2xvcmZ1bFdyYXBwZXIgPSBzdHlsZWQuZGl2YFxuXHQkeyBib3hTaXppbmdSZXNldCB9O1xuXG5cdHdpZHRoOiAyMTZweDtcblxuXHQucmVhY3QtY29sb3JmdWwge1xuXHRcdGRpc3BsYXk6IGZsZXg7XG5cdFx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRcdHdpZHRoOiAyMTZweDtcblx0XHRoZWlnaHQ6IGF1dG87XG5cdH1cblxuXHQucmVhY3QtY29sb3JmdWxfX3NhdHVyYXRpb24ge1xuXHRcdHdpZHRoOiAxMDAlO1xuXHRcdGJvcmRlci1yYWRpdXM6IDA7XG5cdFx0aGVpZ2h0OiAyMTZweDtcblx0XHRtYXJnaW4tYm90dG9tOiAkeyBzcGFjZSggNCApIH07XG5cdFx0Ym9yZGVyLWJvdHRvbTogbm9uZTtcblx0fVxuXG5cdC5yZWFjdC1jb2xvcmZ1bF9faHVlLFxuXHQucmVhY3QtY29sb3JmdWxfX2FscGhhIHtcblx0XHR3aWR0aDogMTg0cHg7XG5cdFx0aGVpZ2h0OiAxNnB4O1xuXHRcdGJvcmRlci1yYWRpdXM6ICR7IENPTkZJRy5yYWRpdXNGdWxsIH07XG5cdFx0bWFyZ2luLWJvdHRvbTogJHsgc3BhY2UoIDIgKSB9O1xuXHR9XG5cblx0LnJlYWN0LWNvbG9yZnVsX19wb2ludGVyIHtcblx0XHRoZWlnaHQ6IDE2cHg7XG5cdFx0d2lkdGg6IDE2cHg7XG5cdFx0Ym9yZGVyOiBub25lO1xuXHRcdGJveC1zaGFkb3c6IDAgMCAycHggMCByZ2JhKCAwLCAwLCAwLCAwLjI1ICk7XG5cblx0XHQvLyBTaG93biBpbnN0ZWFkIG9mIGJveC1zaGFkb3cgdG8gV2luZG93cyBoaWdoIGNvbnRyYXN0IG1vZGUuXG5cdFx0b3V0bGluZTogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuXHR9XG5cblx0LnJlYWN0LWNvbG9yZnVsX19wb2ludGVyLWZpbGwge1xuXHRcdGJveC1zaGFkb3c6IGluc2V0IDAgMCAwICR7IENPTkZJRy5ib3JkZXJXaWR0aEZvY3VzIH0gI2ZmZjtcblx0fVxuXG5cdCR7IGludGVyYWN0aXZlSHVlU3R5bGVzIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBDb3B5QnV0dG9uID0gc3R5bGVkKCBCdXR0b24gKWBcblx0JiYmJiYge1xuXHRcdG1pbi13aWR0aDogJHsgc3BhY2UoIDYgKSB9O1xuXHRcdHBhZGRpbmc6IDA7XG5cblx0XHQ+IHN2ZyB7XG5cdFx0XHRtYXJnaW4tcmlnaHQ6IDA7XG5cdFx0fVxuXHR9XG5gO1xuIl19 */\"));\n\n// Make the Hue circle picker not go out of the bar.\nconst interactiveHueStyles = `\n.react-colorful__interactive {\n\twidth: calc( 100% - ${space(2)} );\n\tmargin-left: ${space(1)};\n}`;\nexport const AuxiliaryColorArtefactWrapper = /*#__PURE__*/_styled(\"div\", process.env.NODE_ENV === \"production\" ? {\n  target: \"ez9hsf44\"\n} : {\n  target: \"ez9hsf44\",\n  label: \"AuxiliaryColorArtefactWrapper\"\n})(\"padding-top:\", space(2), \";padding-right:0;padding-left:0;padding-bottom:0;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvY29sb3ItcGlja2VyL3N0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF1Q3VEIiwiZmlsZSI6IkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvY29sb3ItcGlja2VyL3N0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IE51bWJlckNvbnRyb2wgZnJvbSAnLi4vbnVtYmVyLWNvbnRyb2wnO1xuaW1wb3J0IElubmVyU2VsZWN0Q29udHJvbCBmcm9tICcuLi9zZWxlY3QtY29udHJvbCc7XG5pbXBvcnQgSW5uZXJSYW5nZUNvbnRyb2wgZnJvbSAnLi4vcmFuZ2UtY29udHJvbCc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uL3V0aWxzL3NwYWNlJztcbmltcG9ydCB7IGJveFNpemluZ1Jlc2V0IH0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IEJ1dHRvbiBmcm9tICcuLi9idXR0b24nO1xuaW1wb3J0IHsgRmxleCB9IGZyb20gJy4uL2ZsZXgnO1xuaW1wb3J0IHsgSFN0YWNrIH0gZnJvbSAnLi4vaC1zdGFjayc7XG5pbXBvcnQgQ09ORklHIGZyb20gJy4uL3V0aWxzL2NvbmZpZy12YWx1ZXMnO1xuXG5leHBvcnQgY29uc3QgTnVtYmVyQ29udHJvbFdyYXBwZXIgPSBzdHlsZWQoIE51bWJlckNvbnRyb2wgKWBcblx0d2lkdGg6ICR7IHNwYWNlKCAyNCApIH07XG5gO1xuXG5leHBvcnQgY29uc3QgU2VsZWN0Q29udHJvbCA9IHN0eWxlZCggSW5uZXJTZWxlY3RDb250cm9sIClgXG5cdG1hcmdpbi1sZWZ0OiAkeyBzcGFjZSggLTIgKSB9O1xuXHR3aWR0aDogNWVtO1xuYDtcblxuZXhwb3J0IGNvbnN0IFJhbmdlQ29udHJvbCA9IHN0eWxlZCggSW5uZXJSYW5nZUNvbnRyb2wgKWBcblx0ZmxleDogMTtcblx0bWFyZ2luLXJpZ2h0OiAkeyBzcGFjZSggMiApIH07XG5gO1xuXG4vLyBNYWtlIHRoZSBIdWUgY2lyY2xlIHBpY2tlciBub3QgZ28gb3V0IG9mIHRoZSBiYXIuXG5jb25zdCBpbnRlcmFjdGl2ZUh1ZVN0eWxlcyA9IGBcbi5yZWFjdC1jb2xvcmZ1bF9faW50ZXJhY3RpdmUge1xuXHR3aWR0aDogY2FsYyggMTAwJSAtICR7IHNwYWNlKCAyICkgfSApO1xuXHRtYXJnaW4tbGVmdDogJHsgc3BhY2UoIDEgKSB9O1xufWA7XG5cbmV4cG9ydCBjb25zdCBBdXhpbGlhcnlDb2xvckFydGVmYWN0V3JhcHBlciA9IHN0eWxlZC5kaXZgXG5cdHBhZGRpbmctdG9wOiAkeyBzcGFjZSggMiApIH07XG5cdHBhZGRpbmctcmlnaHQ6IDA7XG5cdHBhZGRpbmctbGVmdDogMDtcblx0cGFkZGluZy1ib3R0b206IDA7XG5gO1xuXG5leHBvcnQgY29uc3QgQXV4aWxpYXJ5Q29sb3JBcnRlZmFjdEhTdGFja0hlYWRlciA9IHN0eWxlZCggSFN0YWNrIClgXG5cdHBhZGRpbmctbGVmdDogJHsgc3BhY2UoIDQgKSB9O1xuXHRwYWRkaW5nLXJpZ2h0OiAkeyBzcGFjZSggNCApIH07XG5gO1xuXG5leHBvcnQgY29uc3QgQ29sb3JJbnB1dFdyYXBwZXIgPSBzdHlsZWQoIEZsZXggKWBcblx0cGFkZGluZy10b3A6ICR7IHNwYWNlKCA0ICkgfTtcblx0cGFkZGluZy1sZWZ0OiAkeyBzcGFjZSggNCApIH07XG5cdHBhZGRpbmctcmlnaHQ6ICR7IHNwYWNlKCAzICkgfTtcblx0cGFkZGluZy1ib3R0b206ICR7IHNwYWNlKCA1ICkgfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBDb2xvcmZ1bFdyYXBwZXIgPSBzdHlsZWQuZGl2YFxuXHQkeyBib3hTaXppbmdSZXNldCB9O1xuXG5cdHdpZHRoOiAyMTZweDtcblxuXHQucmVhY3QtY29sb3JmdWwge1xuXHRcdGRpc3BsYXk6IGZsZXg7XG5cdFx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRcdHdpZHRoOiAyMTZweDtcblx0XHRoZWlnaHQ6IGF1dG87XG5cdH1cblxuXHQucmVhY3QtY29sb3JmdWxfX3NhdHVyYXRpb24ge1xuXHRcdHdpZHRoOiAxMDAlO1xuXHRcdGJvcmRlci1yYWRpdXM6IDA7XG5cdFx0aGVpZ2h0OiAyMTZweDtcblx0XHRtYXJnaW4tYm90dG9tOiAkeyBzcGFjZSggNCApIH07XG5cdFx0Ym9yZGVyLWJvdHRvbTogbm9uZTtcblx0fVxuXG5cdC5yZWFjdC1jb2xvcmZ1bF9faHVlLFxuXHQucmVhY3QtY29sb3JmdWxfX2FscGhhIHtcblx0XHR3aWR0aDogMTg0cHg7XG5cdFx0aGVpZ2h0OiAxNnB4O1xuXHRcdGJvcmRlci1yYWRpdXM6ICR7IENPTkZJRy5yYWRpdXNGdWxsIH07XG5cdFx0bWFyZ2luLWJvdHRvbTogJHsgc3BhY2UoIDIgKSB9O1xuXHR9XG5cblx0LnJlYWN0LWNvbG9yZnVsX19wb2ludGVyIHtcblx0XHRoZWlnaHQ6IDE2cHg7XG5cdFx0d2lkdGg6IDE2cHg7XG5cdFx0Ym9yZGVyOiBub25lO1xuXHRcdGJveC1zaGFkb3c6IDAgMCAycHggMCByZ2JhKCAwLCAwLCAwLCAwLjI1ICk7XG5cblx0XHQvLyBTaG93biBpbnN0ZWFkIG9mIGJveC1zaGFkb3cgdG8gV2luZG93cyBoaWdoIGNvbnRyYXN0IG1vZGUuXG5cdFx0b3V0bGluZTogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuXHR9XG5cblx0LnJlYWN0LWNvbG9yZnVsX19wb2ludGVyLWZpbGwge1xuXHRcdGJveC1zaGFkb3c6IGluc2V0IDAgMCAwICR7IENPTkZJRy5ib3JkZXJXaWR0aEZvY3VzIH0gI2ZmZjtcblx0fVxuXG5cdCR7IGludGVyYWN0aXZlSHVlU3R5bGVzIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBDb3B5QnV0dG9uID0gc3R5bGVkKCBCdXR0b24gKWBcblx0JiYmJiYge1xuXHRcdG1pbi13aWR0aDogJHsgc3BhY2UoIDYgKSB9O1xuXHRcdHBhZGRpbmc6IDA7XG5cblx0XHQ+IHN2ZyB7XG5cdFx0XHRtYXJnaW4tcmlnaHQ6IDA7XG5cdFx0fVxuXHR9XG5gO1xuIl19 */\"));\nexport const AuxiliaryColorArtefactHStackHeader = /*#__PURE__*/_styled(HStack, process.env.NODE_ENV === \"production\" ? {\n  target: \"ez9hsf43\"\n} : {\n  target: \"ez9hsf43\",\n  label: \"AuxiliaryColorArtefactHStackHeader\"\n})(\"padding-left:\", space(4), \";padding-right:\", space(4), \";\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvY29sb3ItcGlja2VyL3N0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4Q2tFIiwiZmlsZSI6IkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvY29sb3ItcGlja2VyL3N0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IE51bWJlckNvbnRyb2wgZnJvbSAnLi4vbnVtYmVyLWNvbnRyb2wnO1xuaW1wb3J0IElubmVyU2VsZWN0Q29udHJvbCBmcm9tICcuLi9zZWxlY3QtY29udHJvbCc7XG5pbXBvcnQgSW5uZXJSYW5nZUNvbnRyb2wgZnJvbSAnLi4vcmFuZ2UtY29udHJvbCc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uL3V0aWxzL3NwYWNlJztcbmltcG9ydCB7IGJveFNpemluZ1Jlc2V0IH0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IEJ1dHRvbiBmcm9tICcuLi9idXR0b24nO1xuaW1wb3J0IHsgRmxleCB9IGZyb20gJy4uL2ZsZXgnO1xuaW1wb3J0IHsgSFN0YWNrIH0gZnJvbSAnLi4vaC1zdGFjayc7XG5pbXBvcnQgQ09ORklHIGZyb20gJy4uL3V0aWxzL2NvbmZpZy12YWx1ZXMnO1xuXG5leHBvcnQgY29uc3QgTnVtYmVyQ29udHJvbFdyYXBwZXIgPSBzdHlsZWQoIE51bWJlckNvbnRyb2wgKWBcblx0d2lkdGg6ICR7IHNwYWNlKCAyNCApIH07XG5gO1xuXG5leHBvcnQgY29uc3QgU2VsZWN0Q29udHJvbCA9IHN0eWxlZCggSW5uZXJTZWxlY3RDb250cm9sIClgXG5cdG1hcmdpbi1sZWZ0OiAkeyBzcGFjZSggLTIgKSB9O1xuXHR3aWR0aDogNWVtO1xuYDtcblxuZXhwb3J0IGNvbnN0IFJhbmdlQ29udHJvbCA9IHN0eWxlZCggSW5uZXJSYW5nZUNvbnRyb2wgKWBcblx0ZmxleDogMTtcblx0bWFyZ2luLXJpZ2h0OiAkeyBzcGFjZSggMiApIH07XG5gO1xuXG4vLyBNYWtlIHRoZSBIdWUgY2lyY2xlIHBpY2tlciBub3QgZ28gb3V0IG9mIHRoZSBiYXIuXG5jb25zdCBpbnRlcmFjdGl2ZUh1ZVN0eWxlcyA9IGBcbi5yZWFjdC1jb2xvcmZ1bF9faW50ZXJhY3RpdmUge1xuXHR3aWR0aDogY2FsYyggMTAwJSAtICR7IHNwYWNlKCAyICkgfSApO1xuXHRtYXJnaW4tbGVmdDogJHsgc3BhY2UoIDEgKSB9O1xufWA7XG5cbmV4cG9ydCBjb25zdCBBdXhpbGlhcnlDb2xvckFydGVmYWN0V3JhcHBlciA9IHN0eWxlZC5kaXZgXG5cdHBhZGRpbmctdG9wOiAkeyBzcGFjZSggMiApIH07XG5cdHBhZGRpbmctcmlnaHQ6IDA7XG5cdHBhZGRpbmctbGVmdDogMDtcblx0cGFkZGluZy1ib3R0b206IDA7XG5gO1xuXG5leHBvcnQgY29uc3QgQXV4aWxpYXJ5Q29sb3JBcnRlZmFjdEhTdGFja0hlYWRlciA9IHN0eWxlZCggSFN0YWNrIClgXG5cdHBhZGRpbmctbGVmdDogJHsgc3BhY2UoIDQgKSB9O1xuXHRwYWRkaW5nLXJpZ2h0OiAkeyBzcGFjZSggNCApIH07XG5gO1xuXG5leHBvcnQgY29uc3QgQ29sb3JJbnB1dFdyYXBwZXIgPSBzdHlsZWQoIEZsZXggKWBcblx0cGFkZGluZy10b3A6ICR7IHNwYWNlKCA0ICkgfTtcblx0cGFkZGluZy1sZWZ0OiAkeyBzcGFjZSggNCApIH07XG5cdHBhZGRpbmctcmlnaHQ6ICR7IHNwYWNlKCAzICkgfTtcblx0cGFkZGluZy1ib3R0b206ICR7IHNwYWNlKCA1ICkgfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBDb2xvcmZ1bFdyYXBwZXIgPSBzdHlsZWQuZGl2YFxuXHQkeyBib3hTaXppbmdSZXNldCB9O1xuXG5cdHdpZHRoOiAyMTZweDtcblxuXHQucmVhY3QtY29sb3JmdWwge1xuXHRcdGRpc3BsYXk6IGZsZXg7XG5cdFx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRcdHdpZHRoOiAyMTZweDtcblx0XHRoZWlnaHQ6IGF1dG87XG5cdH1cblxuXHQucmVhY3QtY29sb3JmdWxfX3NhdHVyYXRpb24ge1xuXHRcdHdpZHRoOiAxMDAlO1xuXHRcdGJvcmRlci1yYWRpdXM6IDA7XG5cdFx0aGVpZ2h0OiAyMTZweDtcblx0XHRtYXJnaW4tYm90dG9tOiAkeyBzcGFjZSggNCApIH07XG5cdFx0Ym9yZGVyLWJvdHRvbTogbm9uZTtcblx0fVxuXG5cdC5yZWFjdC1jb2xvcmZ1bF9faHVlLFxuXHQucmVhY3QtY29sb3JmdWxfX2FscGhhIHtcblx0XHR3aWR0aDogMTg0cHg7XG5cdFx0aGVpZ2h0OiAxNnB4O1xuXHRcdGJvcmRlci1yYWRpdXM6ICR7IENPTkZJRy5yYWRpdXNGdWxsIH07XG5cdFx0bWFyZ2luLWJvdHRvbTogJHsgc3BhY2UoIDIgKSB9O1xuXHR9XG5cblx0LnJlYWN0LWNvbG9yZnVsX19wb2ludGVyIHtcblx0XHRoZWlnaHQ6IDE2cHg7XG5cdFx0d2lkdGg6IDE2cHg7XG5cdFx0Ym9yZGVyOiBub25lO1xuXHRcdGJveC1zaGFkb3c6IDAgMCAycHggMCByZ2JhKCAwLCAwLCAwLCAwLjI1ICk7XG5cblx0XHQvLyBTaG93biBpbnN0ZWFkIG9mIGJveC1zaGFkb3cgdG8gV2luZG93cyBoaWdoIGNvbnRyYXN0IG1vZGUuXG5cdFx0b3V0bGluZTogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuXHR9XG5cblx0LnJlYWN0LWNvbG9yZnVsX19wb2ludGVyLWZpbGwge1xuXHRcdGJveC1zaGFkb3c6IGluc2V0IDAgMCAwICR7IENPTkZJRy5ib3JkZXJXaWR0aEZvY3VzIH0gI2ZmZjtcblx0fVxuXG5cdCR7IGludGVyYWN0aXZlSHVlU3R5bGVzIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBDb3B5QnV0dG9uID0gc3R5bGVkKCBCdXR0b24gKWBcblx0JiYmJiYge1xuXHRcdG1pbi13aWR0aDogJHsgc3BhY2UoIDYgKSB9O1xuXHRcdHBhZGRpbmc6IDA7XG5cblx0XHQ+IHN2ZyB7XG5cdFx0XHRtYXJnaW4tcmlnaHQ6IDA7XG5cdFx0fVxuXHR9XG5gO1xuIl19 */\"));\nexport const ColorInputWrapper = /*#__PURE__*/_styled(Flex, process.env.NODE_ENV === \"production\" ? {\n  target: \"ez9hsf42\"\n} : {\n  target: \"ez9hsf42\",\n  label: \"ColorInputWrapper\"\n})(\"padding-top:\", space(4), \";padding-left:\", space(4), \";padding-right:\", space(3), \";padding-bottom:\", space(5), \";\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvY29sb3ItcGlja2VyL3N0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtRCtDIiwiZmlsZSI6IkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvY29sb3ItcGlja2VyL3N0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IE51bWJlckNvbnRyb2wgZnJvbSAnLi4vbnVtYmVyLWNvbnRyb2wnO1xuaW1wb3J0IElubmVyU2VsZWN0Q29udHJvbCBmcm9tICcuLi9zZWxlY3QtY29udHJvbCc7XG5pbXBvcnQgSW5uZXJSYW5nZUNvbnRyb2wgZnJvbSAnLi4vcmFuZ2UtY29udHJvbCc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uL3V0aWxzL3NwYWNlJztcbmltcG9ydCB7IGJveFNpemluZ1Jlc2V0IH0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IEJ1dHRvbiBmcm9tICcuLi9idXR0b24nO1xuaW1wb3J0IHsgRmxleCB9IGZyb20gJy4uL2ZsZXgnO1xuaW1wb3J0IHsgSFN0YWNrIH0gZnJvbSAnLi4vaC1zdGFjayc7XG5pbXBvcnQgQ09ORklHIGZyb20gJy4uL3V0aWxzL2NvbmZpZy12YWx1ZXMnO1xuXG5leHBvcnQgY29uc3QgTnVtYmVyQ29udHJvbFdyYXBwZXIgPSBzdHlsZWQoIE51bWJlckNvbnRyb2wgKWBcblx0d2lkdGg6ICR7IHNwYWNlKCAyNCApIH07XG5gO1xuXG5leHBvcnQgY29uc3QgU2VsZWN0Q29udHJvbCA9IHN0eWxlZCggSW5uZXJTZWxlY3RDb250cm9sIClgXG5cdG1hcmdpbi1sZWZ0OiAkeyBzcGFjZSggLTIgKSB9O1xuXHR3aWR0aDogNWVtO1xuYDtcblxuZXhwb3J0IGNvbnN0IFJhbmdlQ29udHJvbCA9IHN0eWxlZCggSW5uZXJSYW5nZUNvbnRyb2wgKWBcblx0ZmxleDogMTtcblx0bWFyZ2luLXJpZ2h0OiAkeyBzcGFjZSggMiApIH07XG5gO1xuXG4vLyBNYWtlIHRoZSBIdWUgY2lyY2xlIHBpY2tlciBub3QgZ28gb3V0IG9mIHRoZSBiYXIuXG5jb25zdCBpbnRlcmFjdGl2ZUh1ZVN0eWxlcyA9IGBcbi5yZWFjdC1jb2xvcmZ1bF9faW50ZXJhY3RpdmUge1xuXHR3aWR0aDogY2FsYyggMTAwJSAtICR7IHNwYWNlKCAyICkgfSApO1xuXHRtYXJnaW4tbGVmdDogJHsgc3BhY2UoIDEgKSB9O1xufWA7XG5cbmV4cG9ydCBjb25zdCBBdXhpbGlhcnlDb2xvckFydGVmYWN0V3JhcHBlciA9IHN0eWxlZC5kaXZgXG5cdHBhZGRpbmctdG9wOiAkeyBzcGFjZSggMiApIH07XG5cdHBhZGRpbmctcmlnaHQ6IDA7XG5cdHBhZGRpbmctbGVmdDogMDtcblx0cGFkZGluZy1ib3R0b206IDA7XG5gO1xuXG5leHBvcnQgY29uc3QgQXV4aWxpYXJ5Q29sb3JBcnRlZmFjdEhTdGFja0hlYWRlciA9IHN0eWxlZCggSFN0YWNrIClgXG5cdHBhZGRpbmctbGVmdDogJHsgc3BhY2UoIDQgKSB9O1xuXHRwYWRkaW5nLXJpZ2h0OiAkeyBzcGFjZSggNCApIH07XG5gO1xuXG5leHBvcnQgY29uc3QgQ29sb3JJbnB1dFdyYXBwZXIgPSBzdHlsZWQoIEZsZXggKWBcblx0cGFkZGluZy10b3A6ICR7IHNwYWNlKCA0ICkgfTtcblx0cGFkZGluZy1sZWZ0OiAkeyBzcGFjZSggNCApIH07XG5cdHBhZGRpbmctcmlnaHQ6ICR7IHNwYWNlKCAzICkgfTtcblx0cGFkZGluZy1ib3R0b206ICR7IHNwYWNlKCA1ICkgfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBDb2xvcmZ1bFdyYXBwZXIgPSBzdHlsZWQuZGl2YFxuXHQkeyBib3hTaXppbmdSZXNldCB9O1xuXG5cdHdpZHRoOiAyMTZweDtcblxuXHQucmVhY3QtY29sb3JmdWwge1xuXHRcdGRpc3BsYXk6IGZsZXg7XG5cdFx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRcdHdpZHRoOiAyMTZweDtcblx0XHRoZWlnaHQ6IGF1dG87XG5cdH1cblxuXHQucmVhY3QtY29sb3JmdWxfX3NhdHVyYXRpb24ge1xuXHRcdHdpZHRoOiAxMDAlO1xuXHRcdGJvcmRlci1yYWRpdXM6IDA7XG5cdFx0aGVpZ2h0OiAyMTZweDtcblx0XHRtYXJnaW4tYm90dG9tOiAkeyBzcGFjZSggNCApIH07XG5cdFx0Ym9yZGVyLWJvdHRvbTogbm9uZTtcblx0fVxuXG5cdC5yZWFjdC1jb2xvcmZ1bF9faHVlLFxuXHQucmVhY3QtY29sb3JmdWxfX2FscGhhIHtcblx0XHR3aWR0aDogMTg0cHg7XG5cdFx0aGVpZ2h0OiAxNnB4O1xuXHRcdGJvcmRlci1yYWRpdXM6ICR7IENPTkZJRy5yYWRpdXNGdWxsIH07XG5cdFx0bWFyZ2luLWJvdHRvbTogJHsgc3BhY2UoIDIgKSB9O1xuXHR9XG5cblx0LnJlYWN0LWNvbG9yZnVsX19wb2ludGVyIHtcblx0XHRoZWlnaHQ6IDE2cHg7XG5cdFx0d2lkdGg6IDE2cHg7XG5cdFx0Ym9yZGVyOiBub25lO1xuXHRcdGJveC1zaGFkb3c6IDAgMCAycHggMCByZ2JhKCAwLCAwLCAwLCAwLjI1ICk7XG5cblx0XHQvLyBTaG93biBpbnN0ZWFkIG9mIGJveC1zaGFkb3cgdG8gV2luZG93cyBoaWdoIGNvbnRyYXN0IG1vZGUuXG5cdFx0b3V0bGluZTogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuXHR9XG5cblx0LnJlYWN0LWNvbG9yZnVsX19wb2ludGVyLWZpbGwge1xuXHRcdGJveC1zaGFkb3c6IGluc2V0IDAgMCAwICR7IENPTkZJRy5ib3JkZXJXaWR0aEZvY3VzIH0gI2ZmZjtcblx0fVxuXG5cdCR7IGludGVyYWN0aXZlSHVlU3R5bGVzIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBDb3B5QnV0dG9uID0gc3R5bGVkKCBCdXR0b24gKWBcblx0JiYmJiYge1xuXHRcdG1pbi13aWR0aDogJHsgc3BhY2UoIDYgKSB9O1xuXHRcdHBhZGRpbmc6IDA7XG5cblx0XHQ+IHN2ZyB7XG5cdFx0XHRtYXJnaW4tcmlnaHQ6IDA7XG5cdFx0fVxuXHR9XG5gO1xuIl19 */\"));\nexport const ColorfulWrapper = /*#__PURE__*/_styled(\"div\", process.env.NODE_ENV === \"production\" ? {\n  target: \"ez9hsf41\"\n} : {\n  target: \"ez9hsf41\",\n  label: \"ColorfulWrapper\"\n})(boxSizingReset, \";width:216px;.react-colorful{display:flex;flex-direction:column;align-items:center;width:216px;height:auto;}.react-colorful__saturation{width:100%;border-radius:0;height:216px;margin-bottom:\", space(4), \";border-bottom:none;}.react-colorful__hue,.react-colorful__alpha{width:184px;height:16px;border-radius:\", CONFIG.radiusFull, \";margin-bottom:\", space(2), \";}.react-colorful__pointer{height:16px;width:16px;border:none;box-shadow:0 0 2px 0 rgba( 0, 0, 0, 0.25 );outline:2px solid transparent;}.react-colorful__pointer-fill{box-shadow:inset 0 0 0 \", CONFIG.borderWidthFocus, \" #fff;}\", interactiveHueStyles, \";\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvY29sb3ItcGlja2VyL3N0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwRHlDIiwiZmlsZSI6IkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvY29sb3ItcGlja2VyL3N0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IE51bWJlckNvbnRyb2wgZnJvbSAnLi4vbnVtYmVyLWNvbnRyb2wnO1xuaW1wb3J0IElubmVyU2VsZWN0Q29udHJvbCBmcm9tICcuLi9zZWxlY3QtY29udHJvbCc7XG5pbXBvcnQgSW5uZXJSYW5nZUNvbnRyb2wgZnJvbSAnLi4vcmFuZ2UtY29udHJvbCc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uL3V0aWxzL3NwYWNlJztcbmltcG9ydCB7IGJveFNpemluZ1Jlc2V0IH0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IEJ1dHRvbiBmcm9tICcuLi9idXR0b24nO1xuaW1wb3J0IHsgRmxleCB9IGZyb20gJy4uL2ZsZXgnO1xuaW1wb3J0IHsgSFN0YWNrIH0gZnJvbSAnLi4vaC1zdGFjayc7XG5pbXBvcnQgQ09ORklHIGZyb20gJy4uL3V0aWxzL2NvbmZpZy12YWx1ZXMnO1xuXG5leHBvcnQgY29uc3QgTnVtYmVyQ29udHJvbFdyYXBwZXIgPSBzdHlsZWQoIE51bWJlckNvbnRyb2wgKWBcblx0d2lkdGg6ICR7IHNwYWNlKCAyNCApIH07XG5gO1xuXG5leHBvcnQgY29uc3QgU2VsZWN0Q29udHJvbCA9IHN0eWxlZCggSW5uZXJTZWxlY3RDb250cm9sIClgXG5cdG1hcmdpbi1sZWZ0OiAkeyBzcGFjZSggLTIgKSB9O1xuXHR3aWR0aDogNWVtO1xuYDtcblxuZXhwb3J0IGNvbnN0IFJhbmdlQ29udHJvbCA9IHN0eWxlZCggSW5uZXJSYW5nZUNvbnRyb2wgKWBcblx0ZmxleDogMTtcblx0bWFyZ2luLXJpZ2h0OiAkeyBzcGFjZSggMiApIH07XG5gO1xuXG4vLyBNYWtlIHRoZSBIdWUgY2lyY2xlIHBpY2tlciBub3QgZ28gb3V0IG9mIHRoZSBiYXIuXG5jb25zdCBpbnRlcmFjdGl2ZUh1ZVN0eWxlcyA9IGBcbi5yZWFjdC1jb2xvcmZ1bF9faW50ZXJhY3RpdmUge1xuXHR3aWR0aDogY2FsYyggMTAwJSAtICR7IHNwYWNlKCAyICkgfSApO1xuXHRtYXJnaW4tbGVmdDogJHsgc3BhY2UoIDEgKSB9O1xufWA7XG5cbmV4cG9ydCBjb25zdCBBdXhpbGlhcnlDb2xvckFydGVmYWN0V3JhcHBlciA9IHN0eWxlZC5kaXZgXG5cdHBhZGRpbmctdG9wOiAkeyBzcGFjZSggMiApIH07XG5cdHBhZGRpbmctcmlnaHQ6IDA7XG5cdHBhZGRpbmctbGVmdDogMDtcblx0cGFkZGluZy1ib3R0b206IDA7XG5gO1xuXG5leHBvcnQgY29uc3QgQXV4aWxpYXJ5Q29sb3JBcnRlZmFjdEhTdGFja0hlYWRlciA9IHN0eWxlZCggSFN0YWNrIClgXG5cdHBhZGRpbmctbGVmdDogJHsgc3BhY2UoIDQgKSB9O1xuXHRwYWRkaW5nLXJpZ2h0OiAkeyBzcGFjZSggNCApIH07XG5gO1xuXG5leHBvcnQgY29uc3QgQ29sb3JJbnB1dFdyYXBwZXIgPSBzdHlsZWQoIEZsZXggKWBcblx0cGFkZGluZy10b3A6ICR7IHNwYWNlKCA0ICkgfTtcblx0cGFkZGluZy1sZWZ0OiAkeyBzcGFjZSggNCApIH07XG5cdHBhZGRpbmctcmlnaHQ6ICR7IHNwYWNlKCAzICkgfTtcblx0cGFkZGluZy1ib3R0b206ICR7IHNwYWNlKCA1ICkgfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBDb2xvcmZ1bFdyYXBwZXIgPSBzdHlsZWQuZGl2YFxuXHQkeyBib3hTaXppbmdSZXNldCB9O1xuXG5cdHdpZHRoOiAyMTZweDtcblxuXHQucmVhY3QtY29sb3JmdWwge1xuXHRcdGRpc3BsYXk6IGZsZXg7XG5cdFx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRcdHdpZHRoOiAyMTZweDtcblx0XHRoZWlnaHQ6IGF1dG87XG5cdH1cblxuXHQucmVhY3QtY29sb3JmdWxfX3NhdHVyYXRpb24ge1xuXHRcdHdpZHRoOiAxMDAlO1xuXHRcdGJvcmRlci1yYWRpdXM6IDA7XG5cdFx0aGVpZ2h0OiAyMTZweDtcblx0XHRtYXJnaW4tYm90dG9tOiAkeyBzcGFjZSggNCApIH07XG5cdFx0Ym9yZGVyLWJvdHRvbTogbm9uZTtcblx0fVxuXG5cdC5yZWFjdC1jb2xvcmZ1bF9faHVlLFxuXHQucmVhY3QtY29sb3JmdWxfX2FscGhhIHtcblx0XHR3aWR0aDogMTg0cHg7XG5cdFx0aGVpZ2h0OiAxNnB4O1xuXHRcdGJvcmRlci1yYWRpdXM6ICR7IENPTkZJRy5yYWRpdXNGdWxsIH07XG5cdFx0bWFyZ2luLWJvdHRvbTogJHsgc3BhY2UoIDIgKSB9O1xuXHR9XG5cblx0LnJlYWN0LWNvbG9yZnVsX19wb2ludGVyIHtcblx0XHRoZWlnaHQ6IDE2cHg7XG5cdFx0d2lkdGg6IDE2cHg7XG5cdFx0Ym9yZGVyOiBub25lO1xuXHRcdGJveC1zaGFkb3c6IDAgMCAycHggMCByZ2JhKCAwLCAwLCAwLCAwLjI1ICk7XG5cblx0XHQvLyBTaG93biBpbnN0ZWFkIG9mIGJveC1zaGFkb3cgdG8gV2luZG93cyBoaWdoIGNvbnRyYXN0IG1vZGUuXG5cdFx0b3V0bGluZTogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuXHR9XG5cblx0LnJlYWN0LWNvbG9yZnVsX19wb2ludGVyLWZpbGwge1xuXHRcdGJveC1zaGFkb3c6IGluc2V0IDAgMCAwICR7IENPTkZJRy5ib3JkZXJXaWR0aEZvY3VzIH0gI2ZmZjtcblx0fVxuXG5cdCR7IGludGVyYWN0aXZlSHVlU3R5bGVzIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBDb3B5QnV0dG9uID0gc3R5bGVkKCBCdXR0b24gKWBcblx0JiYmJiYge1xuXHRcdG1pbi13aWR0aDogJHsgc3BhY2UoIDYgKSB9O1xuXHRcdHBhZGRpbmc6IDA7XG5cblx0XHQ+IHN2ZyB7XG5cdFx0XHRtYXJnaW4tcmlnaHQ6IDA7XG5cdFx0fVxuXHR9XG5gO1xuIl19 */\"));\nexport const CopyButton = /*#__PURE__*/_styled(Button, process.env.NODE_ENV === \"production\" ? {\n  target: \"ez9hsf40\"\n} : {\n  target: \"ez9hsf40\",\n  label: \"CopyButton\"\n})(\"&&&&&{min-width:\", space(6), \";padding:0;>svg{margin-right:0;}}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvY29sb3ItcGlja2VyL3N0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3RzBDIiwiZmlsZSI6IkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvY29sb3ItcGlja2VyL3N0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IE51bWJlckNvbnRyb2wgZnJvbSAnLi4vbnVtYmVyLWNvbnRyb2wnO1xuaW1wb3J0IElubmVyU2VsZWN0Q29udHJvbCBmcm9tICcuLi9zZWxlY3QtY29udHJvbCc7XG5pbXBvcnQgSW5uZXJSYW5nZUNvbnRyb2wgZnJvbSAnLi4vcmFuZ2UtY29udHJvbCc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uL3V0aWxzL3NwYWNlJztcbmltcG9ydCB7IGJveFNpemluZ1Jlc2V0IH0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IEJ1dHRvbiBmcm9tICcuLi9idXR0b24nO1xuaW1wb3J0IHsgRmxleCB9IGZyb20gJy4uL2ZsZXgnO1xuaW1wb3J0IHsgSFN0YWNrIH0gZnJvbSAnLi4vaC1zdGFjayc7XG5pbXBvcnQgQ09ORklHIGZyb20gJy4uL3V0aWxzL2NvbmZpZy12YWx1ZXMnO1xuXG5leHBvcnQgY29uc3QgTnVtYmVyQ29udHJvbFdyYXBwZXIgPSBzdHlsZWQoIE51bWJlckNvbnRyb2wgKWBcblx0d2lkdGg6ICR7IHNwYWNlKCAyNCApIH07XG5gO1xuXG5leHBvcnQgY29uc3QgU2VsZWN0Q29udHJvbCA9IHN0eWxlZCggSW5uZXJTZWxlY3RDb250cm9sIClgXG5cdG1hcmdpbi1sZWZ0OiAkeyBzcGFjZSggLTIgKSB9O1xuXHR3aWR0aDogNWVtO1xuYDtcblxuZXhwb3J0IGNvbnN0IFJhbmdlQ29udHJvbCA9IHN0eWxlZCggSW5uZXJSYW5nZUNvbnRyb2wgKWBcblx0ZmxleDogMTtcblx0bWFyZ2luLXJpZ2h0OiAkeyBzcGFjZSggMiApIH07XG5gO1xuXG4vLyBNYWtlIHRoZSBIdWUgY2lyY2xlIHBpY2tlciBub3QgZ28gb3V0IG9mIHRoZSBiYXIuXG5jb25zdCBpbnRlcmFjdGl2ZUh1ZVN0eWxlcyA9IGBcbi5yZWFjdC1jb2xvcmZ1bF9faW50ZXJhY3RpdmUge1xuXHR3aWR0aDogY2FsYyggMTAwJSAtICR7IHNwYWNlKCAyICkgfSApO1xuXHRtYXJnaW4tbGVmdDogJHsgc3BhY2UoIDEgKSB9O1xufWA7XG5cbmV4cG9ydCBjb25zdCBBdXhpbGlhcnlDb2xvckFydGVmYWN0V3JhcHBlciA9IHN0eWxlZC5kaXZgXG5cdHBhZGRpbmctdG9wOiAkeyBzcGFjZSggMiApIH07XG5cdHBhZGRpbmctcmlnaHQ6IDA7XG5cdHBhZGRpbmctbGVmdDogMDtcblx0cGFkZGluZy1ib3R0b206IDA7XG5gO1xuXG5leHBvcnQgY29uc3QgQXV4aWxpYXJ5Q29sb3JBcnRlZmFjdEhTdGFja0hlYWRlciA9IHN0eWxlZCggSFN0YWNrIClgXG5cdHBhZGRpbmctbGVmdDogJHsgc3BhY2UoIDQgKSB9O1xuXHRwYWRkaW5nLXJpZ2h0OiAkeyBzcGFjZSggNCApIH07XG5gO1xuXG5leHBvcnQgY29uc3QgQ29sb3JJbnB1dFdyYXBwZXIgPSBzdHlsZWQoIEZsZXggKWBcblx0cGFkZGluZy10b3A6ICR7IHNwYWNlKCA0ICkgfTtcblx0cGFkZGluZy1sZWZ0OiAkeyBzcGFjZSggNCApIH07XG5cdHBhZGRpbmctcmlnaHQ6ICR7IHNwYWNlKCAzICkgfTtcblx0cGFkZGluZy1ib3R0b206ICR7IHNwYWNlKCA1ICkgfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBDb2xvcmZ1bFdyYXBwZXIgPSBzdHlsZWQuZGl2YFxuXHQkeyBib3hTaXppbmdSZXNldCB9O1xuXG5cdHdpZHRoOiAyMTZweDtcblxuXHQucmVhY3QtY29sb3JmdWwge1xuXHRcdGRpc3BsYXk6IGZsZXg7XG5cdFx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRcdHdpZHRoOiAyMTZweDtcblx0XHRoZWlnaHQ6IGF1dG87XG5cdH1cblxuXHQucmVhY3QtY29sb3JmdWxfX3NhdHVyYXRpb24ge1xuXHRcdHdpZHRoOiAxMDAlO1xuXHRcdGJvcmRlci1yYWRpdXM6IDA7XG5cdFx0aGVpZ2h0OiAyMTZweDtcblx0XHRtYXJnaW4tYm90dG9tOiAkeyBzcGFjZSggNCApIH07XG5cdFx0Ym9yZGVyLWJvdHRvbTogbm9uZTtcblx0fVxuXG5cdC5yZWFjdC1jb2xvcmZ1bF9faHVlLFxuXHQucmVhY3QtY29sb3JmdWxfX2FscGhhIHtcblx0XHR3aWR0aDogMTg0cHg7XG5cdFx0aGVpZ2h0OiAxNnB4O1xuXHRcdGJvcmRlci1yYWRpdXM6ICR7IENPTkZJRy5yYWRpdXNGdWxsIH07XG5cdFx0bWFyZ2luLWJvdHRvbTogJHsgc3BhY2UoIDIgKSB9O1xuXHR9XG5cblx0LnJlYWN0LWNvbG9yZnVsX19wb2ludGVyIHtcblx0XHRoZWlnaHQ6IDE2cHg7XG5cdFx0d2lkdGg6IDE2cHg7XG5cdFx0Ym9yZGVyOiBub25lO1xuXHRcdGJveC1zaGFkb3c6IDAgMCAycHggMCByZ2JhKCAwLCAwLCAwLCAwLjI1ICk7XG5cblx0XHQvLyBTaG93biBpbnN0ZWFkIG9mIGJveC1zaGFkb3cgdG8gV2luZG93cyBoaWdoIGNvbnRyYXN0IG1vZGUuXG5cdFx0b3V0bGluZTogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuXHR9XG5cblx0LnJlYWN0LWNvbG9yZnVsX19wb2ludGVyLWZpbGwge1xuXHRcdGJveC1zaGFkb3c6IGluc2V0IDAgMCAwICR7IENPTkZJRy5ib3JkZXJXaWR0aEZvY3VzIH0gI2ZmZjtcblx0fVxuXG5cdCR7IGludGVyYWN0aXZlSHVlU3R5bGVzIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBDb3B5QnV0dG9uID0gc3R5bGVkKCBCdXR0b24gKWBcblx0JiYmJiYge1xuXHRcdG1pbi13aWR0aDogJHsgc3BhY2UoIDYgKSB9O1xuXHRcdHBhZGRpbmc6IDA7XG5cblx0XHQ+IHN2ZyB7XG5cdFx0XHRtYXJnaW4tcmlnaHQ6IDA7XG5cdFx0fVxuXHR9XG5gO1xuIl19 */\"));\n//# sourceMappingURL=styles.js.map","import _styled from \"@emotion/styled/base\";\n/**\n * External dependencies\n */\n\n/**\n * Internal dependencies\n */\nimport Button from '../../button';\nimport { boxSizingReset, COLORS, CONFIG } from '../../utils';\nimport { HStack } from '../../h-stack';\nimport { Heading } from '../../heading';\nimport { space } from '../../utils/space';\nexport const Wrapper = /*#__PURE__*/_styled(\"div\", process.env.NODE_ENV === \"production\" ? {\n  target: \"e105ri6r5\"\n} : {\n  target: \"e105ri6r5\",\n  label: \"Wrapper\"\n})(boxSizingReset, \";\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvZGF0ZS10aW1lL2RhdGUvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWNpQyIsImZpbGUiOiJAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL2RhdGUtdGltZS9kYXRlL3N0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IEJ1dHRvbiBmcm9tICcuLi8uLi9idXR0b24nO1xuaW1wb3J0IHsgYm94U2l6aW5nUmVzZXQsIENPTE9SUywgQ09ORklHIH0gZnJvbSAnLi4vLi4vdXRpbHMnO1xuaW1wb3J0IHsgSFN0YWNrIH0gZnJvbSAnLi4vLi4vaC1zdGFjayc7XG5pbXBvcnQgeyBIZWFkaW5nIH0gZnJvbSAnLi4vLi4vaGVhZGluZyc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uLy4uL3V0aWxzL3NwYWNlJztcblxuZXhwb3J0IGNvbnN0IFdyYXBwZXIgPSBzdHlsZWQuZGl2YFxuXHQkeyBib3hTaXppbmdSZXNldCB9XG5gO1xuXG5leHBvcnQgY29uc3QgTmF2aWdhdG9yID0gc3R5bGVkKCBIU3RhY2sgKWBcblx0bWFyZ2luLWJvdHRvbTogJHsgc3BhY2UoIDQgKSB9O1xuYDtcblxuZXhwb3J0IGNvbnN0IE5hdmlnYXRvckhlYWRpbmcgPSBzdHlsZWQoIEhlYWRpbmcgKWBcblx0Zm9udC1zaXplOiAkeyBDT05GSUcuZm9udFNpemUgfTtcblx0Zm9udC13ZWlnaHQ6ICR7IENPTkZJRy5mb250V2VpZ2h0IH07XG5cblx0c3Ryb25nIHtcblx0XHRmb250LXdlaWdodDogJHsgQ09ORklHLmZvbnRXZWlnaHRIZWFkaW5nIH07XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBDYWxlbmRhciA9IHN0eWxlZC5kaXZgXG5cdGNvbHVtbi1nYXA6ICR7IHNwYWNlKCAyICkgfTtcblx0ZGlzcGxheTogZ3JpZDtcblx0Z3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAwLjVmciByZXBlYXQoIDUsIDFmciApIDAuNWZyO1xuXHRqdXN0aWZ5LWl0ZW1zOiBjZW50ZXI7XG5cdHJvdy1nYXA6ICR7IHNwYWNlKCAyICkgfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBEYXlPZldlZWsgPSBzdHlsZWQuZGl2YFxuXHRjb2xvcjogJHsgQ09MT1JTLnRoZW1lLmdyYXlbIDcwMCBdIH07XG5cdGZvbnQtc2l6ZTogJHsgQ09ORklHLmZvbnRTaXplIH07XG5cdGxpbmUtaGVpZ2h0OiAkeyBDT05GSUcuZm9udExpbmVIZWlnaHRCYXNlIH07XG5cblx0JjpudGgtb2YtdHlwZSggMSApIHtcblx0XHRqdXN0aWZ5LXNlbGY6IHN0YXJ0O1xuXHR9XG5cblx0JjpudGgtb2YtdHlwZSggNyApIHtcblx0XHRqdXN0aWZ5LXNlbGY6IGVuZDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IERheUJ1dHRvbiA9IHN0eWxlZCggQnV0dG9uLCB7XG5cdHNob3VsZEZvcndhcmRQcm9wOiAoIHByb3A6IHN0cmluZyApID0+XG5cdFx0ISBbICdjb2x1bW4nLCAnaXNTZWxlY3RlZCcsICdpc1RvZGF5JywgJ2hhc0V2ZW50cycgXS5pbmNsdWRlcyggcHJvcCApLFxufSApPCB7XG5cdGNvbHVtbjogbnVtYmVyO1xuXHRpc1NlbGVjdGVkOiBib29sZWFuO1xuXHRpc1RvZGF5OiBib29sZWFuO1xuXHRoYXNFdmVudHM6IGJvb2xlYW47XG59ID5gXG5cdGdyaWQtY29sdW1uOiAkeyAoIHByb3BzICkgPT4gcHJvcHMuY29sdW1uIH07XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cblx0JHsgKCBwcm9wcyApID0+XG5cdFx0cHJvcHMuY29sdW1uID09PSAxICYmXG5cdFx0YFxuXHRcdGp1c3RpZnktc2VsZjogc3RhcnQ7XG5cdFx0YCB9XG5cblx0JHsgKCBwcm9wcyApID0+XG5cdFx0cHJvcHMuY29sdW1uID09PSA3ICYmXG5cdFx0YFxuXHRcdGp1c3RpZnktc2VsZjogZW5kO1xuXHRcdGAgfVxuXG5cdCR7ICggcHJvcHMgKSA9PlxuXHRcdHByb3BzLmRpc2FibGVkICYmXG5cdFx0YFxuXHRcdHBvaW50ZXItZXZlbnRzOiBub25lO1xuXHRcdGAgfVxuXG5cdCYmJiB7XG5cdFx0Ym9yZGVyLXJhZGl1czogJHsgQ09ORklHLnJhZGl1c1JvdW5kIH07XG5cdFx0aGVpZ2h0OiAkeyBzcGFjZSggNyApIH07XG5cdFx0d2lkdGg6ICR7IHNwYWNlKCA3ICkgfTtcblxuXHRcdCR7ICggcHJvcHMgKSA9PlxuXHRcdFx0cHJvcHMuaXNTZWxlY3RlZCAmJlxuXHRcdFx0YFxuXHRcdFx0XHRiYWNrZ3JvdW5kOiAkeyBDT0xPUlMudGhlbWUuYWNjZW50IH07XG5cblx0XHRcdFx0Jixcblx0XHRcdFx0Jjpob3Zlcjpub3QoOmRpc2FibGVkLCBbYXJpYS1kaXNhYmxlZD10cnVlXSkge1xuXHRcdFx0XHRcdGNvbG9yOiAkeyBDT0xPUlMudGhlbWUuYWNjZW50SW52ZXJ0ZWQgfTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdCY6Zm9jdXM6bm90KDpkaXNhYmxlZCksXG5cdFx0XHRcdCY6Zm9jdXM6bm90KDpkaXNhYmxlZCkge1xuXHRcdFx0XHRcdGJvcmRlcjogJHsgQ09ORklHLmJvcmRlcldpZHRoRm9jdXMgfSBzb2xpZCBjdXJyZW50Q29sb3I7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvKiBIaWdobGlnaHQgdGhlIHNlbGVjdGVkIGRheSBmb3IgaGlnaC1jb250cmFzdCBtb2RlICovXG5cdFx0XHRcdCY6OmFmdGVyIHtcblx0XHRcdFx0XHRjb250ZW50OiAnJztcblx0XHRcdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0XHRcdFx0cG9pbnRlci1ldmVudHM6IG5vbmU7XG5cdFx0XHRcdFx0aW5zZXQ6IDA7XG5cdFx0XHRcdFx0Ym9yZGVyLXJhZGl1czogaW5oZXJpdDtcblx0XHRcdFx0XHRib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcblx0XHRcdFx0fVxuXHRcdFx0YCB9XG5cblx0XHQkeyAoIHByb3BzICkgPT5cblx0XHRcdCEgcHJvcHMuaXNTZWxlY3RlZCAmJlxuXHRcdFx0cHJvcHMuaXNUb2RheSAmJlxuXHRcdFx0YFxuXHRcdFx0YmFja2dyb3VuZDogJHsgQ09MT1JTLnRoZW1lLmdyYXlbIDIwMCBdIH07XG5cdFx0XHRgIH1cblx0fVxuXG5cdCR7ICggcHJvcHMgKSA9PlxuXHRcdHByb3BzLmhhc0V2ZW50cyAmJlxuXHRcdGBcblx0XHQ6OmJlZm9yZSB7XG5cdFx0XHRib3JkZXI6IDJweCBzb2xpZCAke1xuXHRcdFx0XHRwcm9wcy5pc1NlbGVjdGVkXG5cdFx0XHRcdFx0PyBDT0xPUlMudGhlbWUuYWNjZW50SW52ZXJ0ZWRcblx0XHRcdFx0XHQ6IENPTE9SUy50aGVtZS5hY2NlbnRcblx0XHRcdH07XG5cdFx0XHRib3JkZXItcmFkaXVzOiAkeyBDT05GSUcucmFkaXVzUm91bmQgfTtcblx0XHRcdGNvbnRlbnQ6IFwiIFwiO1xuXHRcdFx0bGVmdDogNTAlO1xuXHRcdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdFx0dHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgOXB4KTtcblx0XHR9XG5cdFx0YCB9XG5gO1xuIl19 */\"));\nexport const Navigator = /*#__PURE__*/_styled(HStack, process.env.NODE_ENV === \"production\" ? {\n  target: \"e105ri6r4\"\n} : {\n  target: \"e105ri6r4\",\n  label: \"Navigator\"\n})(\"margin-bottom:\", space(4), \";\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvZGF0ZS10aW1lL2RhdGUvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWtCeUMiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9kYXRlLXRpbWUvZGF0ZS9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCBCdXR0b24gZnJvbSAnLi4vLi4vYnV0dG9uJztcbmltcG9ydCB7IGJveFNpemluZ1Jlc2V0LCBDT0xPUlMsIENPTkZJRyB9IGZyb20gJy4uLy4uL3V0aWxzJztcbmltcG9ydCB7IEhTdGFjayB9IGZyb20gJy4uLy4uL2gtc3RhY2snO1xuaW1wb3J0IHsgSGVhZGluZyB9IGZyb20gJy4uLy4uL2hlYWRpbmcnO1xuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi8uLi91dGlscy9zcGFjZSc7XG5cbmV4cG9ydCBjb25zdCBXcmFwcGVyID0gc3R5bGVkLmRpdmBcblx0JHsgYm94U2l6aW5nUmVzZXQgfVxuYDtcblxuZXhwb3J0IGNvbnN0IE5hdmlnYXRvciA9IHN0eWxlZCggSFN0YWNrIClgXG5cdG1hcmdpbi1ib3R0b206ICR7IHNwYWNlKCA0ICkgfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBOYXZpZ2F0b3JIZWFkaW5nID0gc3R5bGVkKCBIZWFkaW5nIClgXG5cdGZvbnQtc2l6ZTogJHsgQ09ORklHLmZvbnRTaXplIH07XG5cdGZvbnQtd2VpZ2h0OiAkeyBDT05GSUcuZm9udFdlaWdodCB9O1xuXG5cdHN0cm9uZyB7XG5cdFx0Zm9udC13ZWlnaHQ6ICR7IENPTkZJRy5mb250V2VpZ2h0SGVhZGluZyB9O1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgQ2FsZW5kYXIgPSBzdHlsZWQuZGl2YFxuXHRjb2x1bW4tZ2FwOiAkeyBzcGFjZSggMiApIH07XG5cdGRpc3BsYXk6IGdyaWQ7XG5cdGdyaWQtdGVtcGxhdGUtY29sdW1uczogMC41ZnIgcmVwZWF0KCA1LCAxZnIgKSAwLjVmcjtcblx0anVzdGlmeS1pdGVtczogY2VudGVyO1xuXHRyb3ctZ2FwOiAkeyBzcGFjZSggMiApIH07XG5gO1xuXG5leHBvcnQgY29uc3QgRGF5T2ZXZWVrID0gc3R5bGVkLmRpdmBcblx0Y29sb3I6ICR7IENPTE9SUy50aGVtZS5ncmF5WyA3MDAgXSB9O1xuXHRmb250LXNpemU6ICR7IENPTkZJRy5mb250U2l6ZSB9O1xuXHRsaW5lLWhlaWdodDogJHsgQ09ORklHLmZvbnRMaW5lSGVpZ2h0QmFzZSB9O1xuXG5cdCY6bnRoLW9mLXR5cGUoIDEgKSB7XG5cdFx0anVzdGlmeS1zZWxmOiBzdGFydDtcblx0fVxuXG5cdCY6bnRoLW9mLXR5cGUoIDcgKSB7XG5cdFx0anVzdGlmeS1zZWxmOiBlbmQ7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBEYXlCdXR0b24gPSBzdHlsZWQoIEJ1dHRvbiwge1xuXHRzaG91bGRGb3J3YXJkUHJvcDogKCBwcm9wOiBzdHJpbmcgKSA9PlxuXHRcdCEgWyAnY29sdW1uJywgJ2lzU2VsZWN0ZWQnLCAnaXNUb2RheScsICdoYXNFdmVudHMnIF0uaW5jbHVkZXMoIHByb3AgKSxcbn0gKTwge1xuXHRjb2x1bW46IG51bWJlcjtcblx0aXNTZWxlY3RlZDogYm9vbGVhbjtcblx0aXNUb2RheTogYm9vbGVhbjtcblx0aGFzRXZlbnRzOiBib29sZWFuO1xufSA+YFxuXHRncmlkLWNvbHVtbjogJHsgKCBwcm9wcyApID0+IHByb3BzLmNvbHVtbiB9O1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXG5cdCR7ICggcHJvcHMgKSA9PlxuXHRcdHByb3BzLmNvbHVtbiA9PT0gMSAmJlxuXHRcdGBcblx0XHRqdXN0aWZ5LXNlbGY6IHN0YXJ0O1xuXHRcdGAgfVxuXG5cdCR7ICggcHJvcHMgKSA9PlxuXHRcdHByb3BzLmNvbHVtbiA9PT0gNyAmJlxuXHRcdGBcblx0XHRqdXN0aWZ5LXNlbGY6IGVuZDtcblx0XHRgIH1cblxuXHQkeyAoIHByb3BzICkgPT5cblx0XHRwcm9wcy5kaXNhYmxlZCAmJlxuXHRcdGBcblx0XHRwb2ludGVyLWV2ZW50czogbm9uZTtcblx0XHRgIH1cblxuXHQmJiYge1xuXHRcdGJvcmRlci1yYWRpdXM6ICR7IENPTkZJRy5yYWRpdXNSb3VuZCB9O1xuXHRcdGhlaWdodDogJHsgc3BhY2UoIDcgKSB9O1xuXHRcdHdpZHRoOiAkeyBzcGFjZSggNyApIH07XG5cblx0XHQkeyAoIHByb3BzICkgPT5cblx0XHRcdHByb3BzLmlzU2VsZWN0ZWQgJiZcblx0XHRcdGBcblx0XHRcdFx0YmFja2dyb3VuZDogJHsgQ09MT1JTLnRoZW1lLmFjY2VudCB9O1xuXG5cdFx0XHRcdCYsXG5cdFx0XHRcdCY6aG92ZXI6bm90KDpkaXNhYmxlZCwgW2FyaWEtZGlzYWJsZWQ9dHJ1ZV0pIHtcblx0XHRcdFx0XHRjb2xvcjogJHsgQ09MT1JTLnRoZW1lLmFjY2VudEludmVydGVkIH07XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQmOmZvY3VzOm5vdCg6ZGlzYWJsZWQpLFxuXHRcdFx0XHQmOmZvY3VzOm5vdCg6ZGlzYWJsZWQpIHtcblx0XHRcdFx0XHRib3JkZXI6ICR7IENPTkZJRy5ib3JkZXJXaWR0aEZvY3VzIH0gc29saWQgY3VycmVudENvbG9yO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0LyogSGlnaGxpZ2h0IHRoZSBzZWxlY3RlZCBkYXkgZm9yIGhpZ2gtY29udHJhc3QgbW9kZSAqL1xuXHRcdFx0XHQmOjphZnRlciB7XG5cdFx0XHRcdFx0Y29udGVudDogJyc7XG5cdFx0XHRcdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdFx0XHRcdHBvaW50ZXItZXZlbnRzOiBub25lO1xuXHRcdFx0XHRcdGluc2V0OiAwO1xuXHRcdFx0XHRcdGJvcmRlci1yYWRpdXM6IGluaGVyaXQ7XG5cdFx0XHRcdFx0Ym9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG5cdFx0XHRcdH1cblx0XHRcdGAgfVxuXG5cdFx0JHsgKCBwcm9wcyApID0+XG5cdFx0XHQhIHByb3BzLmlzU2VsZWN0ZWQgJiZcblx0XHRcdHByb3BzLmlzVG9kYXkgJiZcblx0XHRcdGBcblx0XHRcdGJhY2tncm91bmQ6ICR7IENPTE9SUy50aGVtZS5ncmF5WyAyMDAgXSB9O1xuXHRcdFx0YCB9XG5cdH1cblxuXHQkeyAoIHByb3BzICkgPT5cblx0XHRwcm9wcy5oYXNFdmVudHMgJiZcblx0XHRgXG5cdFx0OjpiZWZvcmUge1xuXHRcdFx0Ym9yZGVyOiAycHggc29saWQgJHtcblx0XHRcdFx0cHJvcHMuaXNTZWxlY3RlZFxuXHRcdFx0XHRcdD8gQ09MT1JTLnRoZW1lLmFjY2VudEludmVydGVkXG5cdFx0XHRcdFx0OiBDT0xPUlMudGhlbWUuYWNjZW50XG5cdFx0XHR9O1xuXHRcdFx0Ym9yZGVyLXJhZGl1czogJHsgQ09ORklHLnJhZGl1c1JvdW5kIH07XG5cdFx0XHRjb250ZW50OiBcIiBcIjtcblx0XHRcdGxlZnQ6IDUwJTtcblx0XHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIDlweCk7XG5cdFx0fVxuXHRcdGAgfVxuYDtcbiJdfQ== */\"));\nexport const NavigatorHeading = /*#__PURE__*/_styled(Heading, process.env.NODE_ENV === \"production\" ? {\n  target: \"e105ri6r3\"\n} : {\n  target: \"e105ri6r3\",\n  label: \"NavigatorHeading\"\n})(\"font-size:\", CONFIG.fontSize, \";font-weight:\", CONFIG.fontWeight, \";strong{font-weight:\", CONFIG.fontWeightHeading, \";}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvZGF0ZS10aW1lL2RhdGUvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXNCaUQiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9kYXRlLXRpbWUvZGF0ZS9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCBCdXR0b24gZnJvbSAnLi4vLi4vYnV0dG9uJztcbmltcG9ydCB7IGJveFNpemluZ1Jlc2V0LCBDT0xPUlMsIENPTkZJRyB9IGZyb20gJy4uLy4uL3V0aWxzJztcbmltcG9ydCB7IEhTdGFjayB9IGZyb20gJy4uLy4uL2gtc3RhY2snO1xuaW1wb3J0IHsgSGVhZGluZyB9IGZyb20gJy4uLy4uL2hlYWRpbmcnO1xuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi8uLi91dGlscy9zcGFjZSc7XG5cbmV4cG9ydCBjb25zdCBXcmFwcGVyID0gc3R5bGVkLmRpdmBcblx0JHsgYm94U2l6aW5nUmVzZXQgfVxuYDtcblxuZXhwb3J0IGNvbnN0IE5hdmlnYXRvciA9IHN0eWxlZCggSFN0YWNrIClgXG5cdG1hcmdpbi1ib3R0b206ICR7IHNwYWNlKCA0ICkgfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBOYXZpZ2F0b3JIZWFkaW5nID0gc3R5bGVkKCBIZWFkaW5nIClgXG5cdGZvbnQtc2l6ZTogJHsgQ09ORklHLmZvbnRTaXplIH07XG5cdGZvbnQtd2VpZ2h0OiAkeyBDT05GSUcuZm9udFdlaWdodCB9O1xuXG5cdHN0cm9uZyB7XG5cdFx0Zm9udC13ZWlnaHQ6ICR7IENPTkZJRy5mb250V2VpZ2h0SGVhZGluZyB9O1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgQ2FsZW5kYXIgPSBzdHlsZWQuZGl2YFxuXHRjb2x1bW4tZ2FwOiAkeyBzcGFjZSggMiApIH07XG5cdGRpc3BsYXk6IGdyaWQ7XG5cdGdyaWQtdGVtcGxhdGUtY29sdW1uczogMC41ZnIgcmVwZWF0KCA1LCAxZnIgKSAwLjVmcjtcblx0anVzdGlmeS1pdGVtczogY2VudGVyO1xuXHRyb3ctZ2FwOiAkeyBzcGFjZSggMiApIH07XG5gO1xuXG5leHBvcnQgY29uc3QgRGF5T2ZXZWVrID0gc3R5bGVkLmRpdmBcblx0Y29sb3I6ICR7IENPTE9SUy50aGVtZS5ncmF5WyA3MDAgXSB9O1xuXHRmb250LXNpemU6ICR7IENPTkZJRy5mb250U2l6ZSB9O1xuXHRsaW5lLWhlaWdodDogJHsgQ09ORklHLmZvbnRMaW5lSGVpZ2h0QmFzZSB9O1xuXG5cdCY6bnRoLW9mLXR5cGUoIDEgKSB7XG5cdFx0anVzdGlmeS1zZWxmOiBzdGFydDtcblx0fVxuXG5cdCY6bnRoLW9mLXR5cGUoIDcgKSB7XG5cdFx0anVzdGlmeS1zZWxmOiBlbmQ7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBEYXlCdXR0b24gPSBzdHlsZWQoIEJ1dHRvbiwge1xuXHRzaG91bGRGb3J3YXJkUHJvcDogKCBwcm9wOiBzdHJpbmcgKSA9PlxuXHRcdCEgWyAnY29sdW1uJywgJ2lzU2VsZWN0ZWQnLCAnaXNUb2RheScsICdoYXNFdmVudHMnIF0uaW5jbHVkZXMoIHByb3AgKSxcbn0gKTwge1xuXHRjb2x1bW46IG51bWJlcjtcblx0aXNTZWxlY3RlZDogYm9vbGVhbjtcblx0aXNUb2RheTogYm9vbGVhbjtcblx0aGFzRXZlbnRzOiBib29sZWFuO1xufSA+YFxuXHRncmlkLWNvbHVtbjogJHsgKCBwcm9wcyApID0+IHByb3BzLmNvbHVtbiB9O1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXG5cdCR7ICggcHJvcHMgKSA9PlxuXHRcdHByb3BzLmNvbHVtbiA9PT0gMSAmJlxuXHRcdGBcblx0XHRqdXN0aWZ5LXNlbGY6IHN0YXJ0O1xuXHRcdGAgfVxuXG5cdCR7ICggcHJvcHMgKSA9PlxuXHRcdHByb3BzLmNvbHVtbiA9PT0gNyAmJlxuXHRcdGBcblx0XHRqdXN0aWZ5LXNlbGY6IGVuZDtcblx0XHRgIH1cblxuXHQkeyAoIHByb3BzICkgPT5cblx0XHRwcm9wcy5kaXNhYmxlZCAmJlxuXHRcdGBcblx0XHRwb2ludGVyLWV2ZW50czogbm9uZTtcblx0XHRgIH1cblxuXHQmJiYge1xuXHRcdGJvcmRlci1yYWRpdXM6ICR7IENPTkZJRy5yYWRpdXNSb3VuZCB9O1xuXHRcdGhlaWdodDogJHsgc3BhY2UoIDcgKSB9O1xuXHRcdHdpZHRoOiAkeyBzcGFjZSggNyApIH07XG5cblx0XHQkeyAoIHByb3BzICkgPT5cblx0XHRcdHByb3BzLmlzU2VsZWN0ZWQgJiZcblx0XHRcdGBcblx0XHRcdFx0YmFja2dyb3VuZDogJHsgQ09MT1JTLnRoZW1lLmFjY2VudCB9O1xuXG5cdFx0XHRcdCYsXG5cdFx0XHRcdCY6aG92ZXI6bm90KDpkaXNhYmxlZCwgW2FyaWEtZGlzYWJsZWQ9dHJ1ZV0pIHtcblx0XHRcdFx0XHRjb2xvcjogJHsgQ09MT1JTLnRoZW1lLmFjY2VudEludmVydGVkIH07XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQmOmZvY3VzOm5vdCg6ZGlzYWJsZWQpLFxuXHRcdFx0XHQmOmZvY3VzOm5vdCg6ZGlzYWJsZWQpIHtcblx0XHRcdFx0XHRib3JkZXI6ICR7IENPTkZJRy5ib3JkZXJXaWR0aEZvY3VzIH0gc29saWQgY3VycmVudENvbG9yO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0LyogSGlnaGxpZ2h0IHRoZSBzZWxlY3RlZCBkYXkgZm9yIGhpZ2gtY29udHJhc3QgbW9kZSAqL1xuXHRcdFx0XHQmOjphZnRlciB7XG5cdFx0XHRcdFx0Y29udGVudDogJyc7XG5cdFx0XHRcdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdFx0XHRcdHBvaW50ZXItZXZlbnRzOiBub25lO1xuXHRcdFx0XHRcdGluc2V0OiAwO1xuXHRcdFx0XHRcdGJvcmRlci1yYWRpdXM6IGluaGVyaXQ7XG5cdFx0XHRcdFx0Ym9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG5cdFx0XHRcdH1cblx0XHRcdGAgfVxuXG5cdFx0JHsgKCBwcm9wcyApID0+XG5cdFx0XHQhIHByb3BzLmlzU2VsZWN0ZWQgJiZcblx0XHRcdHByb3BzLmlzVG9kYXkgJiZcblx0XHRcdGBcblx0XHRcdGJhY2tncm91bmQ6ICR7IENPTE9SUy50aGVtZS5ncmF5WyAyMDAgXSB9O1xuXHRcdFx0YCB9XG5cdH1cblxuXHQkeyAoIHByb3BzICkgPT5cblx0XHRwcm9wcy5oYXNFdmVudHMgJiZcblx0XHRgXG5cdFx0OjpiZWZvcmUge1xuXHRcdFx0Ym9yZGVyOiAycHggc29saWQgJHtcblx0XHRcdFx0cHJvcHMuaXNTZWxlY3RlZFxuXHRcdFx0XHRcdD8gQ09MT1JTLnRoZW1lLmFjY2VudEludmVydGVkXG5cdFx0XHRcdFx0OiBDT0xPUlMudGhlbWUuYWNjZW50XG5cdFx0XHR9O1xuXHRcdFx0Ym9yZGVyLXJhZGl1czogJHsgQ09ORklHLnJhZGl1c1JvdW5kIH07XG5cdFx0XHRjb250ZW50OiBcIiBcIjtcblx0XHRcdGxlZnQ6IDUwJTtcblx0XHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIDlweCk7XG5cdFx0fVxuXHRcdGAgfVxuYDtcbiJdfQ== */\"));\nexport const Calendar = /*#__PURE__*/_styled(\"div\", process.env.NODE_ENV === \"production\" ? {\n  target: \"e105ri6r2\"\n} : {\n  target: \"e105ri6r2\",\n  label: \"Calendar\"\n})(\"column-gap:\", space(2), \";display:grid;grid-template-columns:0.5fr repeat( 5, 1fr ) 0.5fr;justify-items:center;row-gap:\", space(2), \";\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvZGF0ZS10aW1lL2RhdGUvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQStCa0MiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9kYXRlLXRpbWUvZGF0ZS9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCBCdXR0b24gZnJvbSAnLi4vLi4vYnV0dG9uJztcbmltcG9ydCB7IGJveFNpemluZ1Jlc2V0LCBDT0xPUlMsIENPTkZJRyB9IGZyb20gJy4uLy4uL3V0aWxzJztcbmltcG9ydCB7IEhTdGFjayB9IGZyb20gJy4uLy4uL2gtc3RhY2snO1xuaW1wb3J0IHsgSGVhZGluZyB9IGZyb20gJy4uLy4uL2hlYWRpbmcnO1xuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi8uLi91dGlscy9zcGFjZSc7XG5cbmV4cG9ydCBjb25zdCBXcmFwcGVyID0gc3R5bGVkLmRpdmBcblx0JHsgYm94U2l6aW5nUmVzZXQgfVxuYDtcblxuZXhwb3J0IGNvbnN0IE5hdmlnYXRvciA9IHN0eWxlZCggSFN0YWNrIClgXG5cdG1hcmdpbi1ib3R0b206ICR7IHNwYWNlKCA0ICkgfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBOYXZpZ2F0b3JIZWFkaW5nID0gc3R5bGVkKCBIZWFkaW5nIClgXG5cdGZvbnQtc2l6ZTogJHsgQ09ORklHLmZvbnRTaXplIH07XG5cdGZvbnQtd2VpZ2h0OiAkeyBDT05GSUcuZm9udFdlaWdodCB9O1xuXG5cdHN0cm9uZyB7XG5cdFx0Zm9udC13ZWlnaHQ6ICR7IENPTkZJRy5mb250V2VpZ2h0SGVhZGluZyB9O1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgQ2FsZW5kYXIgPSBzdHlsZWQuZGl2YFxuXHRjb2x1bW4tZ2FwOiAkeyBzcGFjZSggMiApIH07XG5cdGRpc3BsYXk6IGdyaWQ7XG5cdGdyaWQtdGVtcGxhdGUtY29sdW1uczogMC41ZnIgcmVwZWF0KCA1LCAxZnIgKSAwLjVmcjtcblx0anVzdGlmeS1pdGVtczogY2VudGVyO1xuXHRyb3ctZ2FwOiAkeyBzcGFjZSggMiApIH07XG5gO1xuXG5leHBvcnQgY29uc3QgRGF5T2ZXZWVrID0gc3R5bGVkLmRpdmBcblx0Y29sb3I6ICR7IENPTE9SUy50aGVtZS5ncmF5WyA3MDAgXSB9O1xuXHRmb250LXNpemU6ICR7IENPTkZJRy5mb250U2l6ZSB9O1xuXHRsaW5lLWhlaWdodDogJHsgQ09ORklHLmZvbnRMaW5lSGVpZ2h0QmFzZSB9O1xuXG5cdCY6bnRoLW9mLXR5cGUoIDEgKSB7XG5cdFx0anVzdGlmeS1zZWxmOiBzdGFydDtcblx0fVxuXG5cdCY6bnRoLW9mLXR5cGUoIDcgKSB7XG5cdFx0anVzdGlmeS1zZWxmOiBlbmQ7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBEYXlCdXR0b24gPSBzdHlsZWQoIEJ1dHRvbiwge1xuXHRzaG91bGRGb3J3YXJkUHJvcDogKCBwcm9wOiBzdHJpbmcgKSA9PlxuXHRcdCEgWyAnY29sdW1uJywgJ2lzU2VsZWN0ZWQnLCAnaXNUb2RheScsICdoYXNFdmVudHMnIF0uaW5jbHVkZXMoIHByb3AgKSxcbn0gKTwge1xuXHRjb2x1bW46IG51bWJlcjtcblx0aXNTZWxlY3RlZDogYm9vbGVhbjtcblx0aXNUb2RheTogYm9vbGVhbjtcblx0aGFzRXZlbnRzOiBib29sZWFuO1xufSA+YFxuXHRncmlkLWNvbHVtbjogJHsgKCBwcm9wcyApID0+IHByb3BzLmNvbHVtbiB9O1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXG5cdCR7ICggcHJvcHMgKSA9PlxuXHRcdHByb3BzLmNvbHVtbiA9PT0gMSAmJlxuXHRcdGBcblx0XHRqdXN0aWZ5LXNlbGY6IHN0YXJ0O1xuXHRcdGAgfVxuXG5cdCR7ICggcHJvcHMgKSA9PlxuXHRcdHByb3BzLmNvbHVtbiA9PT0gNyAmJlxuXHRcdGBcblx0XHRqdXN0aWZ5LXNlbGY6IGVuZDtcblx0XHRgIH1cblxuXHQkeyAoIHByb3BzICkgPT5cblx0XHRwcm9wcy5kaXNhYmxlZCAmJlxuXHRcdGBcblx0XHRwb2ludGVyLWV2ZW50czogbm9uZTtcblx0XHRgIH1cblxuXHQmJiYge1xuXHRcdGJvcmRlci1yYWRpdXM6ICR7IENPTkZJRy5yYWRpdXNSb3VuZCB9O1xuXHRcdGhlaWdodDogJHsgc3BhY2UoIDcgKSB9O1xuXHRcdHdpZHRoOiAkeyBzcGFjZSggNyApIH07XG5cblx0XHQkeyAoIHByb3BzICkgPT5cblx0XHRcdHByb3BzLmlzU2VsZWN0ZWQgJiZcblx0XHRcdGBcblx0XHRcdFx0YmFja2dyb3VuZDogJHsgQ09MT1JTLnRoZW1lLmFjY2VudCB9O1xuXG5cdFx0XHRcdCYsXG5cdFx0XHRcdCY6aG92ZXI6bm90KDpkaXNhYmxlZCwgW2FyaWEtZGlzYWJsZWQ9dHJ1ZV0pIHtcblx0XHRcdFx0XHRjb2xvcjogJHsgQ09MT1JTLnRoZW1lLmFjY2VudEludmVydGVkIH07XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQmOmZvY3VzOm5vdCg6ZGlzYWJsZWQpLFxuXHRcdFx0XHQmOmZvY3VzOm5vdCg6ZGlzYWJsZWQpIHtcblx0XHRcdFx0XHRib3JkZXI6ICR7IENPTkZJRy5ib3JkZXJXaWR0aEZvY3VzIH0gc29saWQgY3VycmVudENvbG9yO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0LyogSGlnaGxpZ2h0IHRoZSBzZWxlY3RlZCBkYXkgZm9yIGhpZ2gtY29udHJhc3QgbW9kZSAqL1xuXHRcdFx0XHQmOjphZnRlciB7XG5cdFx0XHRcdFx0Y29udGVudDogJyc7XG5cdFx0XHRcdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdFx0XHRcdHBvaW50ZXItZXZlbnRzOiBub25lO1xuXHRcdFx0XHRcdGluc2V0OiAwO1xuXHRcdFx0XHRcdGJvcmRlci1yYWRpdXM6IGluaGVyaXQ7XG5cdFx0XHRcdFx0Ym9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG5cdFx0XHRcdH1cblx0XHRcdGAgfVxuXG5cdFx0JHsgKCBwcm9wcyApID0+XG5cdFx0XHQhIHByb3BzLmlzU2VsZWN0ZWQgJiZcblx0XHRcdHByb3BzLmlzVG9kYXkgJiZcblx0XHRcdGBcblx0XHRcdGJhY2tncm91bmQ6ICR7IENPTE9SUy50aGVtZS5ncmF5WyAyMDAgXSB9O1xuXHRcdFx0YCB9XG5cdH1cblxuXHQkeyAoIHByb3BzICkgPT5cblx0XHRwcm9wcy5oYXNFdmVudHMgJiZcblx0XHRgXG5cdFx0OjpiZWZvcmUge1xuXHRcdFx0Ym9yZGVyOiAycHggc29saWQgJHtcblx0XHRcdFx0cHJvcHMuaXNTZWxlY3RlZFxuXHRcdFx0XHRcdD8gQ09MT1JTLnRoZW1lLmFjY2VudEludmVydGVkXG5cdFx0XHRcdFx0OiBDT0xPUlMudGhlbWUuYWNjZW50XG5cdFx0XHR9O1xuXHRcdFx0Ym9yZGVyLXJhZGl1czogJHsgQ09ORklHLnJhZGl1c1JvdW5kIH07XG5cdFx0XHRjb250ZW50OiBcIiBcIjtcblx0XHRcdGxlZnQ6IDUwJTtcblx0XHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIDlweCk7XG5cdFx0fVxuXHRcdGAgfVxuYDtcbiJdfQ== */\"));\nexport const DayOfWeek = /*#__PURE__*/_styled(\"div\", process.env.NODE_ENV === \"production\" ? {\n  target: \"e105ri6r1\"\n} : {\n  target: \"e105ri6r1\",\n  label: \"DayOfWeek\"\n})(\"color:\", COLORS.theme.gray[700], \";font-size:\", CONFIG.fontSize, \";line-height:\", CONFIG.fontLineHeightBase, \";&:nth-of-type( 1 ){justify-self:start;}&:nth-of-type( 7 ){justify-self:end;}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvZGF0ZS10aW1lL2RhdGUvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXVDbUMiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9kYXRlLXRpbWUvZGF0ZS9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCBCdXR0b24gZnJvbSAnLi4vLi4vYnV0dG9uJztcbmltcG9ydCB7IGJveFNpemluZ1Jlc2V0LCBDT0xPUlMsIENPTkZJRyB9IGZyb20gJy4uLy4uL3V0aWxzJztcbmltcG9ydCB7IEhTdGFjayB9IGZyb20gJy4uLy4uL2gtc3RhY2snO1xuaW1wb3J0IHsgSGVhZGluZyB9IGZyb20gJy4uLy4uL2hlYWRpbmcnO1xuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi8uLi91dGlscy9zcGFjZSc7XG5cbmV4cG9ydCBjb25zdCBXcmFwcGVyID0gc3R5bGVkLmRpdmBcblx0JHsgYm94U2l6aW5nUmVzZXQgfVxuYDtcblxuZXhwb3J0IGNvbnN0IE5hdmlnYXRvciA9IHN0eWxlZCggSFN0YWNrIClgXG5cdG1hcmdpbi1ib3R0b206ICR7IHNwYWNlKCA0ICkgfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBOYXZpZ2F0b3JIZWFkaW5nID0gc3R5bGVkKCBIZWFkaW5nIClgXG5cdGZvbnQtc2l6ZTogJHsgQ09ORklHLmZvbnRTaXplIH07XG5cdGZvbnQtd2VpZ2h0OiAkeyBDT05GSUcuZm9udFdlaWdodCB9O1xuXG5cdHN0cm9uZyB7XG5cdFx0Zm9udC13ZWlnaHQ6ICR7IENPTkZJRy5mb250V2VpZ2h0SGVhZGluZyB9O1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgQ2FsZW5kYXIgPSBzdHlsZWQuZGl2YFxuXHRjb2x1bW4tZ2FwOiAkeyBzcGFjZSggMiApIH07XG5cdGRpc3BsYXk6IGdyaWQ7XG5cdGdyaWQtdGVtcGxhdGUtY29sdW1uczogMC41ZnIgcmVwZWF0KCA1LCAxZnIgKSAwLjVmcjtcblx0anVzdGlmeS1pdGVtczogY2VudGVyO1xuXHRyb3ctZ2FwOiAkeyBzcGFjZSggMiApIH07XG5gO1xuXG5leHBvcnQgY29uc3QgRGF5T2ZXZWVrID0gc3R5bGVkLmRpdmBcblx0Y29sb3I6ICR7IENPTE9SUy50aGVtZS5ncmF5WyA3MDAgXSB9O1xuXHRmb250LXNpemU6ICR7IENPTkZJRy5mb250U2l6ZSB9O1xuXHRsaW5lLWhlaWdodDogJHsgQ09ORklHLmZvbnRMaW5lSGVpZ2h0QmFzZSB9O1xuXG5cdCY6bnRoLW9mLXR5cGUoIDEgKSB7XG5cdFx0anVzdGlmeS1zZWxmOiBzdGFydDtcblx0fVxuXG5cdCY6bnRoLW9mLXR5cGUoIDcgKSB7XG5cdFx0anVzdGlmeS1zZWxmOiBlbmQ7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBEYXlCdXR0b24gPSBzdHlsZWQoIEJ1dHRvbiwge1xuXHRzaG91bGRGb3J3YXJkUHJvcDogKCBwcm9wOiBzdHJpbmcgKSA9PlxuXHRcdCEgWyAnY29sdW1uJywgJ2lzU2VsZWN0ZWQnLCAnaXNUb2RheScsICdoYXNFdmVudHMnIF0uaW5jbHVkZXMoIHByb3AgKSxcbn0gKTwge1xuXHRjb2x1bW46IG51bWJlcjtcblx0aXNTZWxlY3RlZDogYm9vbGVhbjtcblx0aXNUb2RheTogYm9vbGVhbjtcblx0aGFzRXZlbnRzOiBib29sZWFuO1xufSA+YFxuXHRncmlkLWNvbHVtbjogJHsgKCBwcm9wcyApID0+IHByb3BzLmNvbHVtbiB9O1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXG5cdCR7ICggcHJvcHMgKSA9PlxuXHRcdHByb3BzLmNvbHVtbiA9PT0gMSAmJlxuXHRcdGBcblx0XHRqdXN0aWZ5LXNlbGY6IHN0YXJ0O1xuXHRcdGAgfVxuXG5cdCR7ICggcHJvcHMgKSA9PlxuXHRcdHByb3BzLmNvbHVtbiA9PT0gNyAmJlxuXHRcdGBcblx0XHRqdXN0aWZ5LXNlbGY6IGVuZDtcblx0XHRgIH1cblxuXHQkeyAoIHByb3BzICkgPT5cblx0XHRwcm9wcy5kaXNhYmxlZCAmJlxuXHRcdGBcblx0XHRwb2ludGVyLWV2ZW50czogbm9uZTtcblx0XHRgIH1cblxuXHQmJiYge1xuXHRcdGJvcmRlci1yYWRpdXM6ICR7IENPTkZJRy5yYWRpdXNSb3VuZCB9O1xuXHRcdGhlaWdodDogJHsgc3BhY2UoIDcgKSB9O1xuXHRcdHdpZHRoOiAkeyBzcGFjZSggNyApIH07XG5cblx0XHQkeyAoIHByb3BzICkgPT5cblx0XHRcdHByb3BzLmlzU2VsZWN0ZWQgJiZcblx0XHRcdGBcblx0XHRcdFx0YmFja2dyb3VuZDogJHsgQ09MT1JTLnRoZW1lLmFjY2VudCB9O1xuXG5cdFx0XHRcdCYsXG5cdFx0XHRcdCY6aG92ZXI6bm90KDpkaXNhYmxlZCwgW2FyaWEtZGlzYWJsZWQ9dHJ1ZV0pIHtcblx0XHRcdFx0XHRjb2xvcjogJHsgQ09MT1JTLnRoZW1lLmFjY2VudEludmVydGVkIH07XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQmOmZvY3VzOm5vdCg6ZGlzYWJsZWQpLFxuXHRcdFx0XHQmOmZvY3VzOm5vdCg6ZGlzYWJsZWQpIHtcblx0XHRcdFx0XHRib3JkZXI6ICR7IENPTkZJRy5ib3JkZXJXaWR0aEZvY3VzIH0gc29saWQgY3VycmVudENvbG9yO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0LyogSGlnaGxpZ2h0IHRoZSBzZWxlY3RlZCBkYXkgZm9yIGhpZ2gtY29udHJhc3QgbW9kZSAqL1xuXHRcdFx0XHQmOjphZnRlciB7XG5cdFx0XHRcdFx0Y29udGVudDogJyc7XG5cdFx0XHRcdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdFx0XHRcdHBvaW50ZXItZXZlbnRzOiBub25lO1xuXHRcdFx0XHRcdGluc2V0OiAwO1xuXHRcdFx0XHRcdGJvcmRlci1yYWRpdXM6IGluaGVyaXQ7XG5cdFx0XHRcdFx0Ym9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG5cdFx0XHRcdH1cblx0XHRcdGAgfVxuXG5cdFx0JHsgKCBwcm9wcyApID0+XG5cdFx0XHQhIHByb3BzLmlzU2VsZWN0ZWQgJiZcblx0XHRcdHByb3BzLmlzVG9kYXkgJiZcblx0XHRcdGBcblx0XHRcdGJhY2tncm91bmQ6ICR7IENPTE9SUy50aGVtZS5ncmF5WyAyMDAgXSB9O1xuXHRcdFx0YCB9XG5cdH1cblxuXHQkeyAoIHByb3BzICkgPT5cblx0XHRwcm9wcy5oYXNFdmVudHMgJiZcblx0XHRgXG5cdFx0OjpiZWZvcmUge1xuXHRcdFx0Ym9yZGVyOiAycHggc29saWQgJHtcblx0XHRcdFx0cHJvcHMuaXNTZWxlY3RlZFxuXHRcdFx0XHRcdD8gQ09MT1JTLnRoZW1lLmFjY2VudEludmVydGVkXG5cdFx0XHRcdFx0OiBDT0xPUlMudGhlbWUuYWNjZW50XG5cdFx0XHR9O1xuXHRcdFx0Ym9yZGVyLXJhZGl1czogJHsgQ09ORklHLnJhZGl1c1JvdW5kIH07XG5cdFx0XHRjb250ZW50OiBcIiBcIjtcblx0XHRcdGxlZnQ6IDUwJTtcblx0XHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIDlweCk7XG5cdFx0fVxuXHRcdGAgfVxuYDtcbiJdfQ== */\"));\nexport const DayButton = /*#__PURE__*/_styled(Button, process.env.NODE_ENV === \"production\" ? {\n  shouldForwardProp: prop => !['column', 'isSelected', 'isToday', 'hasEvents'].includes(prop),\n  target: \"e105ri6r0\"\n} : {\n  shouldForwardProp: prop => !['column', 'isSelected', 'isToday', 'hasEvents'].includes(prop),\n  target: \"e105ri6r0\",\n  label: \"DayButton\"\n})(\"grid-column:\", props => props.column, \";position:relative;justify-content:center;\", props => props.column === 1 && `\n\t\tjustify-self: start;\n\t\t`, \" \", props => props.column === 7 && `\n\t\tjustify-self: end;\n\t\t`, \" \", props => props.disabled && `\n\t\tpointer-events: none;\n\t\t`, \" &&&{border-radius:\", CONFIG.radiusRound, \";height:\", space(7), \";width:\", space(7), \";\", props => props.isSelected && `\n\t\t\t\tbackground: ${COLORS.theme.accent};\n\n\t\t\t\t&,\n\t\t\t\t&:hover:not(:disabled, [aria-disabled=true]) {\n\t\t\t\t\tcolor: ${COLORS.theme.accentInverted};\n\t\t\t\t}\n\n\t\t\t\t&:focus:not(:disabled),\n\t\t\t\t&:focus:not(:disabled) {\n\t\t\t\t\tborder: ${CONFIG.borderWidthFocus} solid currentColor;\n\t\t\t\t}\n\n\t\t\t\t/* Highlight the selected day for high-contrast mode */\n\t\t\t\t&::after {\n\t\t\t\t\tcontent: '';\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\tpointer-events: none;\n\t\t\t\t\tinset: 0;\n\t\t\t\t\tborder-radius: inherit;\n\t\t\t\t\tborder: 1px solid transparent;\n\t\t\t\t}\n\t\t\t`, \" \", props => !props.isSelected && props.isToday && `\n\t\t\tbackground: ${COLORS.theme.gray[200]};\n\t\t\t`, \";}\", props => props.hasEvents && `\n\t\t::before {\n\t\t\tborder: 2px solid ${props.isSelected ? COLORS.theme.accentInverted : COLORS.theme.accent};\n\t\t\tborder-radius: ${CONFIG.radiusRound};\n\t\t\tcontent: \" \";\n\t\t\tleft: 50%;\n\t\t\tposition: absolute;\n\t\t\ttransform: translate(-50%, 9px);\n\t\t}\n\t\t`, \";\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvZGF0ZS10aW1lL2RhdGUvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTZERyIsImZpbGUiOiJAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL2RhdGUtdGltZS9kYXRlL3N0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IEJ1dHRvbiBmcm9tICcuLi8uLi9idXR0b24nO1xuaW1wb3J0IHsgYm94U2l6aW5nUmVzZXQsIENPTE9SUywgQ09ORklHIH0gZnJvbSAnLi4vLi4vdXRpbHMnO1xuaW1wb3J0IHsgSFN0YWNrIH0gZnJvbSAnLi4vLi4vaC1zdGFjayc7XG5pbXBvcnQgeyBIZWFkaW5nIH0gZnJvbSAnLi4vLi4vaGVhZGluZyc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uLy4uL3V0aWxzL3NwYWNlJztcblxuZXhwb3J0IGNvbnN0IFdyYXBwZXIgPSBzdHlsZWQuZGl2YFxuXHQkeyBib3hTaXppbmdSZXNldCB9XG5gO1xuXG5leHBvcnQgY29uc3QgTmF2aWdhdG9yID0gc3R5bGVkKCBIU3RhY2sgKWBcblx0bWFyZ2luLWJvdHRvbTogJHsgc3BhY2UoIDQgKSB9O1xuYDtcblxuZXhwb3J0IGNvbnN0IE5hdmlnYXRvckhlYWRpbmcgPSBzdHlsZWQoIEhlYWRpbmcgKWBcblx0Zm9udC1zaXplOiAkeyBDT05GSUcuZm9udFNpemUgfTtcblx0Zm9udC13ZWlnaHQ6ICR7IENPTkZJRy5mb250V2VpZ2h0IH07XG5cblx0c3Ryb25nIHtcblx0XHRmb250LXdlaWdodDogJHsgQ09ORklHLmZvbnRXZWlnaHRIZWFkaW5nIH07XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBDYWxlbmRhciA9IHN0eWxlZC5kaXZgXG5cdGNvbHVtbi1nYXA6ICR7IHNwYWNlKCAyICkgfTtcblx0ZGlzcGxheTogZ3JpZDtcblx0Z3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAwLjVmciByZXBlYXQoIDUsIDFmciApIDAuNWZyO1xuXHRqdXN0aWZ5LWl0ZW1zOiBjZW50ZXI7XG5cdHJvdy1nYXA6ICR7IHNwYWNlKCAyICkgfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBEYXlPZldlZWsgPSBzdHlsZWQuZGl2YFxuXHRjb2xvcjogJHsgQ09MT1JTLnRoZW1lLmdyYXlbIDcwMCBdIH07XG5cdGZvbnQtc2l6ZTogJHsgQ09ORklHLmZvbnRTaXplIH07XG5cdGxpbmUtaGVpZ2h0OiAkeyBDT05GSUcuZm9udExpbmVIZWlnaHRCYXNlIH07XG5cblx0JjpudGgtb2YtdHlwZSggMSApIHtcblx0XHRqdXN0aWZ5LXNlbGY6IHN0YXJ0O1xuXHR9XG5cblx0JjpudGgtb2YtdHlwZSggNyApIHtcblx0XHRqdXN0aWZ5LXNlbGY6IGVuZDtcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IERheUJ1dHRvbiA9IHN0eWxlZCggQnV0dG9uLCB7XG5cdHNob3VsZEZvcndhcmRQcm9wOiAoIHByb3A6IHN0cmluZyApID0+XG5cdFx0ISBbICdjb2x1bW4nLCAnaXNTZWxlY3RlZCcsICdpc1RvZGF5JywgJ2hhc0V2ZW50cycgXS5pbmNsdWRlcyggcHJvcCApLFxufSApPCB7XG5cdGNvbHVtbjogbnVtYmVyO1xuXHRpc1NlbGVjdGVkOiBib29sZWFuO1xuXHRpc1RvZGF5OiBib29sZWFuO1xuXHRoYXNFdmVudHM6IGJvb2xlYW47XG59ID5gXG5cdGdyaWQtY29sdW1uOiAkeyAoIHByb3BzICkgPT4gcHJvcHMuY29sdW1uIH07XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cblx0JHsgKCBwcm9wcyApID0+XG5cdFx0cHJvcHMuY29sdW1uID09PSAxICYmXG5cdFx0YFxuXHRcdGp1c3RpZnktc2VsZjogc3RhcnQ7XG5cdFx0YCB9XG5cblx0JHsgKCBwcm9wcyApID0+XG5cdFx0cHJvcHMuY29sdW1uID09PSA3ICYmXG5cdFx0YFxuXHRcdGp1c3RpZnktc2VsZjogZW5kO1xuXHRcdGAgfVxuXG5cdCR7ICggcHJvcHMgKSA9PlxuXHRcdHByb3BzLmRpc2FibGVkICYmXG5cdFx0YFxuXHRcdHBvaW50ZXItZXZlbnRzOiBub25lO1xuXHRcdGAgfVxuXG5cdCYmJiB7XG5cdFx0Ym9yZGVyLXJhZGl1czogJHsgQ09ORklHLnJhZGl1c1JvdW5kIH07XG5cdFx0aGVpZ2h0OiAkeyBzcGFjZSggNyApIH07XG5cdFx0d2lkdGg6ICR7IHNwYWNlKCA3ICkgfTtcblxuXHRcdCR7ICggcHJvcHMgKSA9PlxuXHRcdFx0cHJvcHMuaXNTZWxlY3RlZCAmJlxuXHRcdFx0YFxuXHRcdFx0XHRiYWNrZ3JvdW5kOiAkeyBDT0xPUlMudGhlbWUuYWNjZW50IH07XG5cblx0XHRcdFx0Jixcblx0XHRcdFx0Jjpob3Zlcjpub3QoOmRpc2FibGVkLCBbYXJpYS1kaXNhYmxlZD10cnVlXSkge1xuXHRcdFx0XHRcdGNvbG9yOiAkeyBDT0xPUlMudGhlbWUuYWNjZW50SW52ZXJ0ZWQgfTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdCY6Zm9jdXM6bm90KDpkaXNhYmxlZCksXG5cdFx0XHRcdCY6Zm9jdXM6bm90KDpkaXNhYmxlZCkge1xuXHRcdFx0XHRcdGJvcmRlcjogJHsgQ09ORklHLmJvcmRlcldpZHRoRm9jdXMgfSBzb2xpZCBjdXJyZW50Q29sb3I7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvKiBIaWdobGlnaHQgdGhlIHNlbGVjdGVkIGRheSBmb3IgaGlnaC1jb250cmFzdCBtb2RlICovXG5cdFx0XHRcdCY6OmFmdGVyIHtcblx0XHRcdFx0XHRjb250ZW50OiAnJztcblx0XHRcdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0XHRcdFx0cG9pbnRlci1ldmVudHM6IG5vbmU7XG5cdFx0XHRcdFx0aW5zZXQ6IDA7XG5cdFx0XHRcdFx0Ym9yZGVyLXJhZGl1czogaW5oZXJpdDtcblx0XHRcdFx0XHRib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcblx0XHRcdFx0fVxuXHRcdFx0YCB9XG5cblx0XHQkeyAoIHByb3BzICkgPT5cblx0XHRcdCEgcHJvcHMuaXNTZWxlY3RlZCAmJlxuXHRcdFx0cHJvcHMuaXNUb2RheSAmJlxuXHRcdFx0YFxuXHRcdFx0YmFja2dyb3VuZDogJHsgQ09MT1JTLnRoZW1lLmdyYXlbIDIwMCBdIH07XG5cdFx0XHRgIH1cblx0fVxuXG5cdCR7ICggcHJvcHMgKSA9PlxuXHRcdHByb3BzLmhhc0V2ZW50cyAmJlxuXHRcdGBcblx0XHQ6OmJlZm9yZSB7XG5cdFx0XHRib3JkZXI6IDJweCBzb2xpZCAke1xuXHRcdFx0XHRwcm9wcy5pc1NlbGVjdGVkXG5cdFx0XHRcdFx0PyBDT0xPUlMudGhlbWUuYWNjZW50SW52ZXJ0ZWRcblx0XHRcdFx0XHQ6IENPTE9SUy50aGVtZS5hY2NlbnRcblx0XHRcdH07XG5cdFx0XHRib3JkZXItcmFkaXVzOiAkeyBDT05GSUcucmFkaXVzUm91bmQgfTtcblx0XHRcdGNvbnRlbnQ6IFwiIFwiO1xuXHRcdFx0bGVmdDogNTAlO1xuXHRcdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdFx0dHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgOXB4KTtcblx0XHR9XG5cdFx0YCB9XG5gO1xuIl19 */\"));\n//# sourceMappingURL=styles.js.map","import _styled from \"@emotion/styled/base\";\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n/**\n * External dependencies\n */\n\nimport { css, keyframes } from '@emotion/react';\n\n/**\n * Internal dependencies\n */\nimport { COLORS, CONFIG } from '../utils';\nconst spinAnimation = keyframes`\n\tfrom {\n\t\ttransform: rotate(0deg);\n\t}\n\tto {\n\t\ttransform: rotate(360deg);\n\t}\n `;\nexport const StyledSpinner = /*#__PURE__*/_styled(\"svg\", process.env.NODE_ENV === \"production\" ? {\n  target: \"ea4tfvq2\"\n} : {\n  target: \"ea4tfvq2\",\n  label: \"StyledSpinner\"\n})(\"width:\", CONFIG.spinnerSize, \"px;height:\", CONFIG.spinnerSize, \"px;display:inline-block;margin:5px 11px 0;position:relative;color:\", COLORS.theme.accent, \";overflow:visible;opacity:1;background-color:transparent;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvc3Bpbm5lci9zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBb0J1QyIsImZpbGUiOiJAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL3NwaW5uZXIvc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgY3NzLCBrZXlmcmFtZXMgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IENPTE9SUywgQ09ORklHIH0gZnJvbSAnLi4vdXRpbHMnO1xuXG5jb25zdCBzcGluQW5pbWF0aW9uID0ga2V5ZnJhbWVzYFxuXHRmcm9tIHtcblx0XHR0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcblx0fVxuXHR0byB7XG5cdFx0dHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcblx0fVxuIGA7XG5cbmV4cG9ydCBjb25zdCBTdHlsZWRTcGlubmVyID0gc3R5bGVkLnN2Z2Bcblx0d2lkdGg6ICR7IENPTkZJRy5zcGlubmVyU2l6ZSB9cHg7XG5cdGhlaWdodDogJHsgQ09ORklHLnNwaW5uZXJTaXplIH1weDtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRtYXJnaW46IDVweCAxMXB4IDA7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0Y29sb3I6ICR7IENPTE9SUy50aGVtZS5hY2NlbnQgfTtcblx0b3ZlcmZsb3c6IHZpc2libGU7XG5cdG9wYWNpdHk6IDE7XG5cdGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuYDtcblxuY29uc3QgY29tbW9uUGF0aFByb3BzID0gY3NzYFxuXHRmaWxsOiB0cmFuc3BhcmVudDtcblx0c3Ryb2tlLXdpZHRoOiAxLjVweDtcbmA7XG5cbmV4cG9ydCBjb25zdCBTcGlubmVyVHJhY2sgPSBzdHlsZWQuY2lyY2xlYFxuXHQkeyBjb21tb25QYXRoUHJvcHMgfTtcblx0c3Ryb2tlOiAkeyBDT0xPUlMuZ3JheVsgMzAwIF0gfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBTcGlubmVySW5kaWNhdG9yID0gc3R5bGVkLnBhdGhgXG5cdCR7IGNvbW1vblBhdGhQcm9wcyB9O1xuXHRzdHJva2U6IGN1cnJlbnRDb2xvcjtcblx0c3Ryb2tlLWxpbmVjYXA6IHJvdW5kO1xuXHR0cmFuc2Zvcm0tb3JpZ2luOiA1MCUgNTAlO1xuXHRhbmltYXRpb246IDEuNHMgbGluZWFyIGluZmluaXRlIGJvdGggJHsgc3BpbkFuaW1hdGlvbiB9O1xuYDtcbiJdfQ== */\"));\nconst commonPathProps = process.env.NODE_ENV === \"production\" ? {\n  name: \"9s4963\",\n  styles: \"fill:transparent;stroke-width:1.5px\"\n} : {\n  name: \"o2zng0-commonPathProps\",\n  styles: \"fill:transparent;stroke-width:1.5px;label:commonPathProps;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvc3Bpbm5lci9zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBZ0MyQiIsImZpbGUiOiJAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL3NwaW5uZXIvc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgY3NzLCBrZXlmcmFtZXMgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IENPTE9SUywgQ09ORklHIH0gZnJvbSAnLi4vdXRpbHMnO1xuXG5jb25zdCBzcGluQW5pbWF0aW9uID0ga2V5ZnJhbWVzYFxuXHRmcm9tIHtcblx0XHR0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcblx0fVxuXHR0byB7XG5cdFx0dHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcblx0fVxuIGA7XG5cbmV4cG9ydCBjb25zdCBTdHlsZWRTcGlubmVyID0gc3R5bGVkLnN2Z2Bcblx0d2lkdGg6ICR7IENPTkZJRy5zcGlubmVyU2l6ZSB9cHg7XG5cdGhlaWdodDogJHsgQ09ORklHLnNwaW5uZXJTaXplIH1weDtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRtYXJnaW46IDVweCAxMXB4IDA7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0Y29sb3I6ICR7IENPTE9SUy50aGVtZS5hY2NlbnQgfTtcblx0b3ZlcmZsb3c6IHZpc2libGU7XG5cdG9wYWNpdHk6IDE7XG5cdGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuYDtcblxuY29uc3QgY29tbW9uUGF0aFByb3BzID0gY3NzYFxuXHRmaWxsOiB0cmFuc3BhcmVudDtcblx0c3Ryb2tlLXdpZHRoOiAxLjVweDtcbmA7XG5cbmV4cG9ydCBjb25zdCBTcGlubmVyVHJhY2sgPSBzdHlsZWQuY2lyY2xlYFxuXHQkeyBjb21tb25QYXRoUHJvcHMgfTtcblx0c3Ryb2tlOiAkeyBDT0xPUlMuZ3JheVsgMzAwIF0gfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBTcGlubmVySW5kaWNhdG9yID0gc3R5bGVkLnBhdGhgXG5cdCR7IGNvbW1vblBhdGhQcm9wcyB9O1xuXHRzdHJva2U6IGN1cnJlbnRDb2xvcjtcblx0c3Ryb2tlLWxpbmVjYXA6IHJvdW5kO1xuXHR0cmFuc2Zvcm0tb3JpZ2luOiA1MCUgNTAlO1xuXHRhbmltYXRpb246IDEuNHMgbGluZWFyIGluZmluaXRlIGJvdGggJHsgc3BpbkFuaW1hdGlvbiB9O1xuYDtcbiJdfQ== */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nexport const SpinnerTrack = /*#__PURE__*/_styled(\"circle\", process.env.NODE_ENV === \"production\" ? {\n  target: \"ea4tfvq1\"\n} : {\n  target: \"ea4tfvq1\",\n  label: \"SpinnerTrack\"\n})(commonPathProps, \";stroke:\", COLORS.gray[300], \";\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvc3Bpbm5lci9zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcUN5QyIsImZpbGUiOiJAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL3NwaW5uZXIvc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgY3NzLCBrZXlmcmFtZXMgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IENPTE9SUywgQ09ORklHIH0gZnJvbSAnLi4vdXRpbHMnO1xuXG5jb25zdCBzcGluQW5pbWF0aW9uID0ga2V5ZnJhbWVzYFxuXHRmcm9tIHtcblx0XHR0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcblx0fVxuXHR0byB7XG5cdFx0dHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcblx0fVxuIGA7XG5cbmV4cG9ydCBjb25zdCBTdHlsZWRTcGlubmVyID0gc3R5bGVkLnN2Z2Bcblx0d2lkdGg6ICR7IENPTkZJRy5zcGlubmVyU2l6ZSB9cHg7XG5cdGhlaWdodDogJHsgQ09ORklHLnNwaW5uZXJTaXplIH1weDtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRtYXJnaW46IDVweCAxMXB4IDA7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0Y29sb3I6ICR7IENPTE9SUy50aGVtZS5hY2NlbnQgfTtcblx0b3ZlcmZsb3c6IHZpc2libGU7XG5cdG9wYWNpdHk6IDE7XG5cdGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuYDtcblxuY29uc3QgY29tbW9uUGF0aFByb3BzID0gY3NzYFxuXHRmaWxsOiB0cmFuc3BhcmVudDtcblx0c3Ryb2tlLXdpZHRoOiAxLjVweDtcbmA7XG5cbmV4cG9ydCBjb25zdCBTcGlubmVyVHJhY2sgPSBzdHlsZWQuY2lyY2xlYFxuXHQkeyBjb21tb25QYXRoUHJvcHMgfTtcblx0c3Ryb2tlOiAkeyBDT0xPUlMuZ3JheVsgMzAwIF0gfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBTcGlubmVySW5kaWNhdG9yID0gc3R5bGVkLnBhdGhgXG5cdCR7IGNvbW1vblBhdGhQcm9wcyB9O1xuXHRzdHJva2U6IGN1cnJlbnRDb2xvcjtcblx0c3Ryb2tlLWxpbmVjYXA6IHJvdW5kO1xuXHR0cmFuc2Zvcm0tb3JpZ2luOiA1MCUgNTAlO1xuXHRhbmltYXRpb246IDEuNHMgbGluZWFyIGluZmluaXRlIGJvdGggJHsgc3BpbkFuaW1hdGlvbiB9O1xuYDtcbiJdfQ== */\"));\nexport const SpinnerIndicator = /*#__PURE__*/_styled(\"path\", process.env.NODE_ENV === \"production\" ? {\n  target: \"ea4tfvq0\"\n} : {\n  target: \"ea4tfvq0\",\n  label: \"SpinnerIndicator\"\n})(commonPathProps, \";stroke:currentColor;stroke-linecap:round;transform-origin:50% 50%;animation:1.4s linear infinite both \", spinAnimation, \";\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvc3Bpbm5lci9zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMEMyQyIsImZpbGUiOiJAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL3NwaW5uZXIvc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgY3NzLCBrZXlmcmFtZXMgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IENPTE9SUywgQ09ORklHIH0gZnJvbSAnLi4vdXRpbHMnO1xuXG5jb25zdCBzcGluQW5pbWF0aW9uID0ga2V5ZnJhbWVzYFxuXHRmcm9tIHtcblx0XHR0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcblx0fVxuXHR0byB7XG5cdFx0dHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcblx0fVxuIGA7XG5cbmV4cG9ydCBjb25zdCBTdHlsZWRTcGlubmVyID0gc3R5bGVkLnN2Z2Bcblx0d2lkdGg6ICR7IENPTkZJRy5zcGlubmVyU2l6ZSB9cHg7XG5cdGhlaWdodDogJHsgQ09ORklHLnNwaW5uZXJTaXplIH1weDtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRtYXJnaW46IDVweCAxMXB4IDA7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0Y29sb3I6ICR7IENPTE9SUy50aGVtZS5hY2NlbnQgfTtcblx0b3ZlcmZsb3c6IHZpc2libGU7XG5cdG9wYWNpdHk6IDE7XG5cdGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuYDtcblxuY29uc3QgY29tbW9uUGF0aFByb3BzID0gY3NzYFxuXHRmaWxsOiB0cmFuc3BhcmVudDtcblx0c3Ryb2tlLXdpZHRoOiAxLjVweDtcbmA7XG5cbmV4cG9ydCBjb25zdCBTcGlubmVyVHJhY2sgPSBzdHlsZWQuY2lyY2xlYFxuXHQkeyBjb21tb25QYXRoUHJvcHMgfTtcblx0c3Ryb2tlOiAkeyBDT0xPUlMuZ3JheVsgMzAwIF0gfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBTcGlubmVySW5kaWNhdG9yID0gc3R5bGVkLnBhdGhgXG5cdCR7IGNvbW1vblBhdGhQcm9wcyB9O1xuXHRzdHJva2U6IGN1cnJlbnRDb2xvcjtcblx0c3Ryb2tlLWxpbmVjYXA6IHJvdW5kO1xuXHR0cmFuc2Zvcm0tb3JpZ2luOiA1MCUgNTAlO1xuXHRhbmltYXRpb246IDEuNHMgbGluZWFyIGluZmluaXRlIGJvdGggJHsgc3BpbkFuaW1hdGlvbiB9O1xuYDtcbiJdfQ== */\"));\n//# sourceMappingURL=styles.js.map","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nfunction isObject(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (ctor === undefined) return true;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n}\n\nexport { isPlainObject };\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","/**\n * @license React\n * use-sync-external-store-shim.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var e=require(\"react\");function h(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var k=\"function\"===typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n(function(){c.value=d;c.getSnapshot=b;r(c)&&g({inst:c})},[a,d,b]);m(function(){r(c)&&g({inst:c});return a(function(){r(c)&&g({inst:c})})},[a]);p(d);return d}\nfunction r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}function t(a,b){return b()}var u=\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement?t:q;exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u;\n"],"names":[],"sourceRoot":""}