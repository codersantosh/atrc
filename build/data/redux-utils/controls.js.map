{"version":3,"names":["AtrcApis","AtrcStore","AtrcDataLocalStorageGetSettings","controls","GET_DATA","action","doApi","key","type","data","queryArgs","hiddenQueryArgsData","GET_ITEM","rowId","id","GET_SETTINGS","TYPES"],"sources":["D:/wamp/www/atrc-package/atrc/packages/data/redux-utils/controls.js"],"sourcesContent":["/* Internal */\r\nimport AtrcApis from '../api';\r\nimport { AtrcStore } from '../store';\r\nimport { AtrcDataLocalStorageGetSettings } from './../local-storage';\r\n\r\n/* Local */\r\n/**\r\n * Controls are used to handle side-effects that are triggered by the dispatch of an action.\r\n */\r\nexport const controls = {\r\n\t/**\r\n\t * Perform an API call to get data.\r\n\t *\r\n\t * @param {Object} action                - The action object with information about the request.\r\n\t * @param {string} action.key            - The data key, e.g., fonts, icons, posts, page, etc.\r\n\t * @param {Object} action.queryArgs      - Object containing query arguments.\r\n\t * @param {Object} action.hiddenQueryArgsData - Additional data passed to the API (optional).\r\n\t * @return {Promise} A promise representing the result of the API call.\r\n\t */\r\n\tGET_DATA: (action) => {\r\n\t\treturn AtrcApis.doApi({\r\n\t\t\tkey: action.key,\r\n\t\t\ttype: 'getData',\r\n\t\t\tdata: action.queryArgs,\r\n\t\t\thiddenQueryArgsData: action.hiddenQueryArgsData || null,\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * Perform an API call to get a specific item.\r\n\t *\r\n\t * @param {Object} action     - The action object with information about the request.\r\n\t * @param {string} action.key - The data key, e.g., fonts, icons, posts, page, etc.\r\n\t * @param {string} action.id  - The identifier of the item to retrieve.\r\n\t * @return {Promise} A promise representing the result of the API call.\r\n\t */\r\n\tGET_ITEM: (action) =>\r\n\t\tAtrcApis.doApi({\r\n\t\t\tkey: action.key,\r\n\t\t\ttype: 'getItem',\r\n\t\t\trowId: action.id,\r\n\t\t}),\r\n\r\n\t/**\r\n\t * Perform an API call to get settings.\r\n\t *\r\n\t * @param {Object} action     - The action object with information about the request.\r\n\t * @param {string} action.key - The settings key, mostly 'settings' or local storage data key.\r\n\t * @return {Promise} A promise representing the result of the API call.\r\n\t */\r\n\tGET_SETTINGS: (action) => {\r\n\t\tif ('localStorage' === AtrcStore.TYPES[action.key]) {\r\n\t\t\treturn AtrcDataLocalStorageGetSettings(action.key);\r\n\t\t}\r\n\t\treturn AtrcApis.doApi({ key: action.key, type: 'getSettings' });\r\n\t},\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,QAAQ,MAAM,QAAQ;AAC7B,SAASC,SAAS,QAAQ,UAAU;AACpC,SAASC,+BAA+B,QAAQ,oBAAoB;;AAEpE;AACA;AACA;AACA;AACA,OAAO,IAAMC,QAAQ,GAAG;EACvB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCC,QAAQ,EAAE,SAAAA,SAACC,MAAM,EAAK;IACrB,OAAOL,QAAQ,CAACM,KAAK,CAAC;MACrBC,GAAG,EAAEF,MAAM,CAACE,GAAG;MACfC,IAAI,EAAE,SAAS;MACfC,IAAI,EAAEJ,MAAM,CAACK,SAAS;MACtBC,mBAAmB,EAAEN,MAAM,CAACM,mBAAmB,IAAI;IACpD,CAAC,CAAC;EACH,CAAC;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACCC,QAAQ,EAAE,SAAAA,SAACP,MAAM;IAAA,OAChBL,QAAQ,CAACM,KAAK,CAAC;MACdC,GAAG,EAAEF,MAAM,CAACE,GAAG;MACfC,IAAI,EAAE,SAAS;MACfK,KAAK,EAAER,MAAM,CAACS;IACf,CAAC,CAAC;EAAA;EAEH;AACD;AACA;AACA;AACA;AACA;AACA;EACCC,YAAY,EAAE,SAAAA,aAACV,MAAM,EAAK;IACzB,IAAI,cAAc,KAAKJ,SAAS,CAACe,KAAK,CAACX,MAAM,CAACE,GAAG,CAAC,EAAE;MACnD,OAAOL,+BAA+B,CAACG,MAAM,CAACE,GAAG,CAAC;IACnD;IACA,OAAOP,QAAQ,CAACM,KAAK,CAAC;MAAEC,GAAG,EAAEF,MAAM,CAACE,GAAG;MAAEC,IAAI,EAAE;IAAc,CAAC,CAAC;EAChE;AACD,CAAC"}