{"version":3,"names":["React","__","sprintf","cloneDeep","isEqual","isObject","AtrcStore","AtrcFlushCache","AtrcGetQueryParts","getItemErrorNotice","_ref","error","message","code","action","type","reducer","state","arguments","length","undefined","DEFAULT_STATE","act","key","newState","queryKey","result","CACHE_STATE","isLoading","canSave","selectedItems","data","queryArgs","cachedData","newNotices","_toConsumableArray","notices","push","items","countQueryItems","totalPages","countAllItems","currentCache","_objectSpread","queryParts","find","item","id","filter","concat","dataKey","dataVal","original","updatedItem","map","confirmDelete","forEach","dataWithoutError","item1","some","item2","notice","existingNotices","indexToDelete","splice","extraData","_action$setNotice","setNotice","settings"],"sources":["D:/wamp/www/atrc-package/atrc/packages/data/redux-utils/reducer.js"],"sourcesContent":["import React from 'react';\n\n/* WordPress */\r\nimport { __, sprintf } from '@wordpress/i18n';\r\n\r\n/* Library */\r\nimport { cloneDeep, isEqual, isObject } from 'lodash';\r\n\r\n/* Internal */\r\nimport { AtrcStore } from '../store';\r\nimport { AtrcFlushCache, AtrcGetQueryParts } from '../utils';\r\n\r\n/* Local */\r\n/* Error Notice */\r\nconst getItemErrorNotice = ({ error }) => {\r\n\tlet message, code;\r\n\r\n\tif (error.message) {\r\n\t\t({ message } = error);\r\n\t} else {\r\n\t\tmessage = sprintf(\r\n\t\t\t// translators: %s: action type\r\n\t\t\t__('Error while data store process for %s.', 'atrc-prefix-atrc'),\r\n\t\t\taction.type\r\n\t\t);\r\n\t}\r\n\treturn {\r\n\t\ttype: 'error',\r\n\t\tcode: code || 'GENERAL',\r\n\t\tmessage,\r\n\t};\r\n};\r\n\r\n/**\r\n * Reducer function for managing state updates based on dispatched actions.\r\n *\r\n * @param {Object|null} state - The previous state.\r\n * @param {Object}      act   - The action object.\r\n * @return {Object} The updated state.\r\n */\r\nexport const reducer = (state = AtrcStore.DEFAULT_STATE, act) => {\r\n\tif (!('key' in act)) {\r\n\t\treturn state;\r\n\t}\r\n\r\n\tconst action = cloneDeep(act);\r\n\tconst { key } = action;\r\n\r\n\tlet newState = {};\r\n\r\n\tif (null === state) {\r\n\t\tnewState[key] = {};\r\n\t} else {\r\n\t\tnewState = cloneDeep(state);\r\n\t}\r\n\r\n\tswitch (action.type) {\r\n\t\t/* set isLoading true and and canSave false, if state is not set for the provided key, also selectedItems to empty since api will start for new data*/\r\n\t\tcase 'BEFORE_DATA_API': {\r\n\t\t\tconst { queryKey } = action;\r\n\r\n\t\t\tif (!newState[key]) {\r\n\t\t\t\tnewState[key] = null;\r\n\t\t\t}\r\n\t\t\tlet result = cloneDeep(newState[key]);\r\n\r\n\t\t\t/* Set default if state is not defined yet */\r\n\t\t\tif (!isObject(result)) {\r\n\t\t\t\tresult[queryKey] = AtrcStore.CACHE_STATE[key];\r\n\t\t\t}\r\n\r\n\t\t\tresult.isLoading = true;\r\n\t\t\tresult.canSave = false;\r\n\r\n\t\t\tresult.selectedItems = [];\r\n\r\n\t\t\tnewState[key] = result;\r\n\r\n\t\t\treturn newState;\r\n\t\t}\r\n\r\n\t\t/* set cachedData and current data to cachedData, cachedData is used specially on SET_QUERY_ARGS to set cached data to current data according to querykey, also selectedItems to empty since setting new data*/\r\n\t\tcase 'SET_DATA': {\r\n\t\t\tconst { data, queryArgs, queryKey } = action;\r\n\r\n\t\t\tif (!newState[key]) {\r\n\t\t\t\tnewState[key] = {};\r\n\t\t\t}\r\n\r\n\t\t\tlet result = cloneDeep(newState[key]);\r\n\r\n\t\t\t/* Set default if state is not defined yet */\r\n\t\t\tif (!isObject(result)) {\r\n\t\t\t\tresult[queryKey] = AtrcStore.CACHE_STATE;\r\n\t\t\t}\r\n\r\n\t\t\tresult.isLoading = false;\r\n\r\n\t\t\tconst cachedData = {};\r\n\t\t\tif (data.error) {\r\n\t\t\t\tconst newNotices = [...result.notices];\r\n\t\t\t\tnewNotices.push(getItemErrorNotice({ error: data.error }));\r\n\t\t\t\tcachedData.notices = newNotices;\r\n\t\t\t} else {\r\n\t\t\t\tcachedData.items = data.items;\r\n\t\t\t\tcachedData.countQueryItems = data.countQueryItems;\r\n\t\t\t\tcachedData.totalPages = data.totalPages;\r\n\t\t\t\tcachedData.countAllItems = data.countAllItems;\r\n\r\n\t\t\t\tcachedData.queryArgs = cloneDeep(queryArgs) || {};\r\n\t\t\t}\r\n\t\t\tresult[queryKey] = cachedData;\r\n\t\t\tresult.currentCache = queryKey;\r\n\r\n\t\t\tresult.selectedItems = [];\r\n\r\n\t\t\tresult = {\r\n\t\t\t\t...result,\r\n\t\t\t\t...cachedData,\r\n\t\t\t};\r\n\r\n\t\t\tnewState[key] = result;\r\n\t\t\treturn newState;\r\n\t\t}\r\n\r\n\t\t/* set state of queryArgs to provided queryArgs and if cached data is available set cached data to current data according to querykey,also selectedItems to empty since fetching new data or settings new data from cached*/\r\n\t\tcase 'SET_QUERY_ARGS': {\r\n\t\t\tlet result = cloneDeep(newState[key]);\r\n\r\n\t\t\tconst { queryArgs } = action;\r\n\r\n\t\t\tconst queryParts = AtrcGetQueryParts(queryArgs);\r\n\t\t\tconst { queryKey } = queryParts;\r\n\r\n\t\t\t/* Set default if state is not defined yet */\r\n\t\t\tif (!isObject(result)) {\r\n\t\t\t\tresult[queryKey] = AtrcStore.CACHE_STATE[key];\r\n\t\t\t}\r\n\r\n\t\t\tresult.currentCache = queryKey;\r\n\t\t\tif (result[queryKey]) {\r\n\t\t\t\tconst cachedData = result[queryKey];\r\n\t\t\t\tresult = {\r\n\t\t\t\t\t...result,\r\n\t\t\t\t\t...cachedData,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tresult.queryArgs = queryArgs;\r\n\r\n\t\t\tresult.selectedItems = [];\r\n\r\n\t\t\tnewState[key] = result;\r\n\r\n\t\t\treturn newState;\r\n\t\t}\r\n\r\n\t\t/* toggle state of all selected items to empty array or all items*/\r\n\t\tcase 'TOGGLE_SELECT_ALL': {\r\n\t\t\tconst result = cloneDeep(newState[key]);\r\n\r\n\t\t\tif (result.selectedItems.length === result.items.length) {\r\n\t\t\t\tresult.selectedItems = [];\r\n\t\t\t} else {\r\n\t\t\t\tresult.selectedItems = cloneDeep(result.items);\r\n\t\t\t}\r\n\r\n\t\t\tnewState[key] = result;\r\n\t\t\treturn newState;\r\n\t\t}\r\n\r\n\t\t/* toggle state of a selected item*/\r\n\t\tcase 'TOGGLE_SELECT': {\r\n\t\t\tconst result = cloneDeep(newState[key]);\r\n\r\n\t\t\t// eslint-disable-next-line eqeqeq\r\n\t\t\tif (result.selectedItems.find((item) => item.id == action.item.id)) {\r\n\t\t\t\tresult.selectedItems = result.selectedItems.filter(\r\n\t\t\t\t\t// eslint-disable-next-line eqeqeq\r\n\t\t\t\t\t(item) => item.id != action.item.id\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tresult.selectedItems = [\r\n\t\t\t\t\t...result.selectedItems,\r\n\t\t\t\t\tresult.items.find((item) => item.id === action.item.id),\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\tnewState[key] = result;\r\n\t\t\treturn newState;\r\n\t\t}\r\n\r\n\t\t/* Add/Edit Item */\r\n\t\t/* set isLoading true and and canSave false*/\r\n\t\tcase 'BEFORE_ITEM_API': {\r\n\t\t\tconst result = cloneDeep(newState[key]);\r\n\r\n\t\t\tresult.isLoading = true;\r\n\t\t\tresult.canSave = false;\r\n\r\n\t\t\tnewState[key] = result;\r\n\t\t\treturn newState;\r\n\t\t}\r\n\r\n\t\t/* set currently edit/view single item, set isLoading false and and canSave false since loading is completed and use need to update item data before it can be save*/\r\n\t\tcase 'SET_ITEM': {\r\n\t\t\tconst result = cloneDeep(newState[key]);\r\n\t\t\tresult.item = cloneDeep(action.data);\r\n\r\n\t\t\tresult.isLoading = false;\r\n\t\t\tresult.canSave = false;\r\n\r\n\t\t\tnewState[key] = result;\r\n\t\t\treturn newState;\r\n\t\t}\r\n\r\n\t\t/* set item properties to user changed data, after setting item data if it is equal to original data no need to save it again*/\r\n\t\tcase 'UPDATE_ITEM_DATA': {\r\n\t\t\tconst result = cloneDeep(newState[key]);\r\n\r\n\t\t\tresult.item[action.dataKey] = action.dataVal;\r\n\t\t\tif (isEqual(result.original, result.item)) {\r\n\t\t\t\tresult.canSave = false;\r\n\t\t\t} else {\r\n\t\t\t\tresult.canSave = true;\r\n\t\t\t}\r\n\r\n\t\t\tnewState[key] = result;\r\n\t\t\treturn newState;\r\n\t\t}\r\n\r\n\t\t/* add notice, updating a item data by id, and flush cache */\r\n\t\tcase 'UPDATE_ITEM': {\r\n\t\t\tconst { data } = action;\r\n\r\n\t\t\tconst result = cloneDeep(newState[key]);\r\n\r\n\t\t\tconst newNotices = [...result.notices];\r\n\r\n\t\t\tif (data.error) {\r\n\t\t\t\tnewNotices.push(getItemErrorNotice({ error: data.error }));\r\n\t\t\t} else {\r\n\t\t\t\tconst updatedItem = result.items.find((item) => item.id === data.id);\r\n\t\t\t\tif (updatedItem) {\r\n\t\t\t\t\tresult.items = result.items.map((item) =>\r\n\t\t\t\t\t\titem.id === data.id ? data : item\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.items = [...result.items, cloneDeep(data)];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresult.item = cloneDeep(data);\r\n\t\t\t\tresult.original = cloneDeep(data);\r\n\r\n\t\t\t\t/* Set success notice */\r\n\t\t\t\tnewNotices.push({\r\n\t\t\t\t\ttype: 'success',\r\n\t\t\t\t\tcode: 'GENERAL',\r\n\t\t\t\t\tmessage: sprintf(\r\n\t\t\t\t\t\t// translators: %s: item id\r\n\t\t\t\t\t\t__(\r\n\t\t\t\t\t\t\t'The item with id %s is updated successfully',\r\n\t\t\t\t\t\t\t'atrc-prefix-atrc'\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tresult.item.id\r\n\t\t\t\t\t),\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tresult.notices = newNotices;\r\n\t\t\tresult.isLoading = false;\r\n\t\t\tresult.canSave = false;\r\n\r\n\t\t\t/* flush all cache */\r\n\t\t\tAtrcFlushCache(result);\r\n\r\n\t\t\tnewState[key] = result;\r\n\r\n\t\t\treturn newState;\r\n\t\t}\r\n\r\n\t\t/* add notice, add a new item, and flush cache */\r\n\t\tcase 'INSERT_ITEM': {\r\n\t\t\tconst { data } = action;\r\n\r\n\t\t\tconst result = cloneDeep(newState[key]);\r\n\r\n\t\t\tlet newNotices = [...result.notices];\r\n\r\n\t\t\tif (data.error) {\r\n\t\t\t\tnewNotices.push(getItemErrorNotice({ error: data.error }));\r\n\t\t\t} else {\r\n\t\t\t\tresult.items = [...result.items, cloneDeep(data)];\r\n\r\n\t\t\t\tresult.item = cloneDeep(data);\r\n\t\t\t\tresult.original = cloneDeep(data);\r\n\r\n\t\t\t\t/* Set success notice */\r\n\t\t\t\tnewNotices.push({\r\n\t\t\t\t\ttype: 'success',\r\n\t\t\t\t\tcode: 'GENERAL',\r\n\t\t\t\t\tmessage: sprintf(\r\n\t\t\t\t\t\t// translators: %s: item id\r\n\t\t\t\t\t\t__('The item with id %s is added successfully', 'atrc-prefix-atrc'),\r\n\t\t\t\t\t\tresult.item.id\r\n\t\t\t\t\t),\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tresult.notices = newNotices;\r\n\t\t\tresult.isLoading = false;\r\n\t\t\tresult.canSave = false;\r\n\r\n\t\t\t/* flush all cache */\r\n\t\t\tAtrcFlushCache(result);\r\n\r\n\t\t\tnewState[key] = result;\r\n\r\n\t\t\treturn newState;\r\n\t\t}\r\n\r\n\t\t/* Delete Item/s */\r\n\t\t/* set array of ids to delete and is iopen in and object on confirmDelete key to delete item/s */\r\n\t\tcase 'SET_CONFIRM_DELETE': {\r\n\t\t\tconst result = cloneDeep(newState[key]);\r\n\t\t\tresult.confirmDelete = action.data;\r\n\r\n\t\t\tnewState[key] = result;\r\n\r\n\t\t\treturn newState;\r\n\t\t}\r\n\r\n\t\t/* adding notice, deleting the item data, and flush cache */\r\n\t\tcase 'DELETE_ITEMS': {\r\n\t\t\tconst { data } = action;\r\n\r\n\t\t\tconst result = cloneDeep(newState[key]);\r\n\t\t\tconst newNotices = [...result.notices];\r\n\r\n\t\t\tdata.forEach(function (item) {\r\n\t\t\t\tif (item.error) {\r\n\t\t\t\t\tnewNotices.push(getItemErrorNotice({ error: item.error }));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnewNotices.push({\r\n\t\t\t\t\t\ttype: 'success',\r\n\t\t\t\t\t\tcode: 'GENERAL',\r\n\t\t\t\t\t\tmessage: __('Deleted successfully', 'atrc-prefix-atrc'),\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tresult.notices = newNotices;\r\n\r\n\t\t\tconst dataWithoutError = data.filter((data) => !data.error);\r\n\r\n\t\t\tresult.items = result.items.filter(\r\n\t\t\t\t(item1) => !dataWithoutError.some((item2) => item1.id === item2.id)\r\n\t\t\t);\r\n\r\n\t\t\tresult.isLoading = false;\r\n\t\t\tresult.confirmDelete = {};\r\n\r\n\t\t\t/* flush all cache */\r\n\t\t\tAtrcFlushCache(result);\r\n\r\n\t\t\tnewState[key] = result;\r\n\r\n\t\t\treturn newState;\r\n\t\t}\r\n\r\n\t\t/* Notice */\r\n\t\t/* Add notice to existing notices */\r\n\t\tcase 'SET_NOTICE': {\r\n\t\t\tconst result = cloneDeep(newState[key]);\r\n\t\t\tconst newNotices = [...result.notices];\r\n\r\n\t\t\tnewNotices.push(action.notice);\r\n\t\t\tresult.notices = newNotices;\r\n\r\n\t\t\tnewState[key] = result;\r\n\t\t\treturn newState;\r\n\t\t}\r\n\r\n\t\t/* Remove notice*/\r\n\t\tcase 'REMOVE_NOTICE': {\r\n\t\t\tconst result = cloneDeep(newState[key]);\r\n\r\n\t\t\tconst existingNotices = [...result.notices];\r\n\r\n\t\t\t// Using action.index instead of action.id\r\n\t\t\tconst indexToDelete = action.id;\r\n\r\n\t\t\tif (indexToDelete >= 0 && indexToDelete < existingNotices.length) {\r\n\t\t\t\texistingNotices.splice(indexToDelete, 1);\r\n\t\t\t}\r\n\r\n\t\t\tresult.notices = existingNotices;\r\n\r\n\t\t\tnewState[key] = result;\r\n\t\t\treturn newState;\r\n\t\t}\r\n\r\n\t\t/* replacing notices to new provided notices */\r\n\t\tcase 'SET_NOTICES': {\r\n\t\t\tconst result = cloneDeep(newState[key]);\r\n\r\n\t\t\tresult.notices = cloneDeep(action.notices);\r\n\r\n\t\t\tnewState[key] = result;\r\n\t\t\treturn newState;\r\n\t\t}\r\n\r\n\t\t/* sometimes need extra data for some logic, called to reducer.js for adding extraData to new provided data */\r\n\t\tcase 'SET_EXTRA_DATA': {\r\n\t\t\tconst result = cloneDeep(newState[key]);\r\n\r\n\t\t\tresult.extraData = cloneDeep(action.data);\r\n\r\n\t\t\tnewState[key] = result;\r\n\t\t\treturn newState;\r\n\t\t}\r\n\r\n\t\t/* Settings */\r\n\t\t/* set isLoading true and and canSave false, if state is not set for the provided key, add global default data to state*/\r\n\t\tcase 'BEFORE_SETTINGS_API': {\r\n\t\t\tlet result = cloneDeep(newState[key]);\r\n\t\t\tif (!isObject(result)) {\r\n\t\t\t\tresult = AtrcStore.DEFAULT_STATE[key];\r\n\t\t\t}\r\n\r\n\t\t\tresult.isLoading = true;\r\n\t\t\tresult.canSave = false;\r\n\r\n\t\t\tnewState[key] = result;\r\n\r\n\t\t\treturn newState;\r\n\t\t}\r\n\r\n\t\t/* set new settings data to original and settings, original is for comparing and settings is changing on UPDATE_SETTING*/\r\n\t\tcase 'SET_SETTINGS': {\r\n\t\t\tconst { data, setNotice = false } = action;\r\n\r\n\t\t\tconst result = cloneDeep(newState[key]);\r\n\r\n\t\t\tconst newNotices = [...result.notices];\r\n\r\n\t\t\tif (data.error) {\r\n\t\t\t\tnewNotices.push(getItemErrorNotice({ error: data.error }));\r\n\r\n\t\t\t\tresult.notices = newNotices;\r\n\t\t\t} else {\r\n\t\t\t\tresult.original = data.settings;\r\n\t\t\t\tresult.settings = cloneDeep(data.settings);\r\n\r\n\t\t\t\tif (setNotice) {\r\n\t\t\t\t\t/* Set success notice */\r\n\t\t\t\t\tnewNotices.push({\r\n\t\t\t\t\t\ttype: 'success',\r\n\t\t\t\t\t\tcode: 'GENERAL',\r\n\t\t\t\t\t\tmessage: __('Updated successfully', 'atrc-prefix-atrc'),\r\n\t\t\t\t\t});\r\n\t\t\t\t\tresult.notices = newNotices;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tresult.canSave = false;\r\n\t\t\tresult.isLoading = false;\r\n\r\n\t\t\tnewState[key] = result;\r\n\t\t\treturn newState;\r\n\t\t}\r\n\r\n\t\t/* set a setting properties to user changed data, after setting setting data if it is equal to original data no need to save it again*/\r\n\t\tcase 'UPDATE_SETTING': {\r\n\t\t\tconst result = cloneDeep(newState[key]);\r\n\r\n\t\t\tresult.settings[action.dataKey] = action.dataVal;\r\n\r\n\t\t\tif (isEqual(result.original, result.settings)) {\r\n\t\t\t\tresult.canSave = false;\r\n\t\t\t} else {\r\n\t\t\t\tresult.canSave = true;\r\n\t\t\t}\r\n\t\t\tnewState[key] = result;\r\n\t\t\treturn newState;\r\n\t\t}\r\n\r\n\t\t/* Internally used by actions from actions.js*/\r\n\t\tcase 'SET_IS_LOADING': {\r\n\t\t\tconst result = cloneDeep(newState[key]);\r\n\t\t\tresult.isLoading = action.isLoading;\r\n\t\t\tresult.canSave = !action.isLoading;\r\n\r\n\t\t\tnewState[key] = result;\r\n\t\t\treturn newState;\r\n\t\t}\r\n\t}\r\n\r\n\treturn newState;\r\n};\r\n"],"mappings":"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","ignoreList":[]}