{"version":3,"names":["addQueryArgs","axios","AtrcStore","axiosFetch","options","key","path","data","method","startsWith","AtrcApis","baseUrls","replace","url","ClassAtrcApis","constructor","instance","types","XWPNonce","xWpNonce","val","baseUrl","register","props","callbacks","filterResult","filterData","addStore","type","optionName","queryArgs","allowedParams","push","getSettings","saveSettings","getItems","getItem","insertItem","updateItem","deleteItem","registerType","callback","doApi","rowId","api","find","item","console","error","result","response","defaults","headers","common","get","countAllItems","parseInt","totalPages","countQueryItems","items","settings","newData","log"],"sources":["D:/wamp/www/atrc-package/atrc/packages/data/api.js"],"sourcesContent":["/* WordPress */\r\nimport { addQueryArgs } from '@wordpress/url';\r\n\r\n/* Library */\r\nimport axios from 'axios';\r\n\r\n/* Inbuilt */\r\nimport { AtrcStore } from './store';\r\n\r\n/* Local */\r\n/* AtrcApis is a utility class that can be used to register and perform CRUD operations on different types of APIs. It allows for registering different types of APIs for a particular data type, such as posts, pages, and custom types, and also allows for registering custom types of APIs. The class utilizes the @wordpress/api-fetch and @wordpress/url libraries to handle the API calls and add query arguments to the URLs, and it allows for additional actions to be performed on the data before or after the API call is made. It also allows for adding store using @wordpress/data library.*/\r\n\r\nfunction axiosFetch(options) {\r\n\tlet { key, path, data, method } = options;\r\n\tif (!path.startsWith('http')) {\r\n\t\tif (!path.startsWith('wp-json')) {\r\n\t\t\tpath = `wp-json/${path}`;\r\n\t\t}\r\n\t}\r\n\tif (AtrcApis.baseUrls[key]) {\r\n\t\tpath = AtrcApis.baseUrls[key] + `/${path}`;\r\n\t} else if (AtrcApis.baseUrls['atrc-prefix-atrc-global']) {\r\n\t\tpath = AtrcApis.baseUrls['atrc-prefix-atrc-global'] + `/${path}`;\r\n\t}\r\n\tpath = path.replace(/([^:]\\/)\\/+/g, '$1');\r\n\tpath = path.replace(/wp-json\\/wp-json\\//, 'wp-json/');\r\n\r\n\treturn axios({\r\n\t\turl: path,\r\n\t\tmethod,\r\n\t\tdata,\r\n\t});\r\n}\r\n\r\nclass ClassAtrcApis {\r\n\tconstructor() {\r\n\t\tif (!ClassAtrcApis.instance) {\r\n\t\t\tClassAtrcApis.instance = this;\r\n\t\t\tthis.types = [];\r\n\t\t\tthis.baseUrls = {};\r\n\t\t\tthis.XWPNonce = '';\r\n\t\t}\r\n\t\treturn ClassAtrcApis.instance;\r\n\t}\r\n\r\n\txWpNonce(val) {\r\n\t\tthis.XWPNonce = val;\r\n\t}\r\n\r\n\tbaseUrl(key, url) {\r\n\t\tthis.baseUrls[key] = url;\r\n\t}\r\n\r\n\tregister(props) {\r\n\t\t/**\r\n\t\t * @param {string}        key          key data type eg: post, page, custom type, custom table etc\r\n\t\t * @param {string}        path         rest api respective or full path eg:/wp/v2/posts/ or http://example.com/wp-json/wp/v2/posts/\r\n\t\t * @param {Object}        callbacks    a set of callback function for respective type or types eg: { getItems: () => {}, getItem: () => {}, insertItem: () => {}, deleteItem: () => {}}\r\n\t\t * @param {function(...)} filterResult optional filter result to add additional data on result\r\n\t\t * @param {boolean}       addStore     add store using @wordpress/data\r\n\t\t */\r\n\t\tconst {\r\n\t\t\tkey,\r\n\t\t\tpath,\r\n\t\t\tcallbacks = {},\r\n\t\t\tfilterResult = null,\r\n\t\t\tfilterData = null,\r\n\t\t\taddStore = true,\r\n\t\t\ttype,\r\n\t\t\toptionName,\r\n\t\t\tqueryArgs,\r\n\t\t\tallowedParams,\r\n\t\t} = props;\r\n\t\tif ('settings' === type) {\r\n\t\t\tthis.types.push({\r\n\t\t\t\tkey,\r\n\t\t\t\tpath,\r\n\t\t\t\ttype: 'getSettings',\r\n\t\t\t\tcallbacks: callbacks.getSettings || null,\r\n\t\t\t\tfilterResult,\r\n\t\t\t\tfilterData,\r\n\t\t\t\toptionName,\r\n\t\t\t});\r\n\t\t\tthis.types.push({\r\n\t\t\t\tkey,\r\n\t\t\t\tpath,\r\n\t\t\t\ttype: 'saveSettings',\r\n\t\t\t\tcallbacks: callbacks.saveSettings || null,\r\n\t\t\t\tfilterResult,\r\n\t\t\t\tfilterData,\r\n\t\t\t\toptionName,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\t// Register all methods for the key and path\r\n\t\t\tthis.types.push({\r\n\t\t\t\tkey,\r\n\t\t\t\tpath,\r\n\t\t\t\ttype: 'getItems',\r\n\t\t\t\tcallbacks: callbacks.getItems || null,\r\n\t\t\t\tfilterResult,\r\n\t\t\t\tfilterData,\r\n\t\t\t});\r\n\t\t\tthis.types.push({\r\n\t\t\t\tkey,\r\n\t\t\t\tpath,\r\n\t\t\t\ttype: 'getItem',\r\n\t\t\t\tcallbacks: callbacks.getItem || null,\r\n\t\t\t\tfilterResult,\r\n\t\t\t\tfilterData,\r\n\t\t\t});\r\n\t\t\tthis.types.push({\r\n\t\t\t\tkey,\r\n\t\t\t\tpath,\r\n\t\t\t\ttype: 'insertItem',\r\n\t\t\t\tcallbacks: callbacks.insertItem || null,\r\n\t\t\t\tfilterResult,\r\n\t\t\t\tfilterData,\r\n\t\t\t});\r\n\t\t\tthis.types.push({\r\n\t\t\t\tkey,\r\n\t\t\t\tpath,\r\n\t\t\t\ttype: 'updateItem',\r\n\t\t\t\tcallbacks: callbacks.updateItem || null,\r\n\t\t\t\tfilterResult,\r\n\t\t\t\tfilterData,\r\n\t\t\t});\r\n\t\t\tthis.types.push({\r\n\t\t\t\tkey,\r\n\t\t\t\tpath,\r\n\t\t\t\ttype: 'deleteItem',\r\n\t\t\t\tcallbacks: callbacks.deleteItem || null,\r\n\t\t\t\tfilterResult,\r\n\t\t\t\tfilterData,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (addStore) {\r\n\t\t\tAtrcStore.register({\r\n\t\t\t\tkey,\r\n\t\t\t\ttype,\r\n\t\t\t\tqueryArgs,\r\n\t\t\t\tallowedParams,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {string}        key      key data type eg: post, page, custom type, custom table etc\r\n\t * @param {string}        path     rest api respective or full path eg:/wp/v2/posts/ or http://example.com/wp-json/wp/v2/posts/\r\n\t * @param {string}        type     custom type expect CURD operations\r\n\t * @param {function(...)} callback custom type callback function eg: doSomething: () => {}\r\n\t */\r\n\tregisterType(key, path, type, callback) {\r\n\t\tthis.types.push({ key, path, type, callback });\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {string} key   key data type eg: post, page, custom type, custom table etc\r\n\t * @param {string} type  type of api\r\n\t * @param {Object} data  optional either query args or insert/update data\r\n\t * @param {number} rowId optional either query args or insert/update data\r\n\t */\r\n\tasync doApi(key, type, data, rowId = 0) {\r\n\t\t// Find the API endpoint based on the key and type provided\r\n\t\tconst api = this.types.find(\r\n\t\t\t(item) => item.key === key && item.type === type\r\n\t\t);\r\n\t\tif (!api) {\r\n\t\t\tconsole.error(`API for key ${key} and type ${type} not found.`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Perform the API call based on the type\r\n\t\tlet result = {};\r\n\t\tlet response = {};\r\n\t\ttry {\r\n\t\t\tif (this.XWPNonce) {\r\n\t\t\t\taxios.defaults.headers.common['X-WP-Nonce'] = this.XWPNonce;\r\n\t\t\t}\r\n\r\n\t\t\tswitch (api.type) {\r\n\t\t\t\tcase 'getItems': {\r\n\t\t\t\t\tlet { path } = api;\r\n\r\n\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\tpath = addQueryArgs(path, data);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tresponse = await axiosFetch({\r\n\t\t\t\t\t\tkey,\r\n\t\t\t\t\t\tpath,\r\n\t\t\t\t\t\tmethod: 'GET',\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif (response.headers) {\r\n\t\t\t\t\t\tif (response.headers.get('X-WP-All-Total')) {\r\n\t\t\t\t\t\t\tresult.countAllItems = parseInt(\r\n\t\t\t\t\t\t\t\tresponse.headers.get('X-WP-All-Total')\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (response.headers.get('X-WP-TotalPages')) {\r\n\t\t\t\t\t\t\tresult.totalPages = parseInt(\r\n\t\t\t\t\t\t\t\tresponse.headers.get('X-WP-TotalPages')\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (response.headers.get('X-WP-Total')) {\r\n\t\t\t\t\t\t\tresult.countQueryItems = parseInt(\r\n\t\t\t\t\t\t\t\tresponse.headers.get('X-WP-Total')\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tresult.items = response.data;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcase 'getItem': {\r\n\t\t\t\t\tresponse = await axiosFetch({\r\n\t\t\t\t\t\tkey,\r\n\t\t\t\t\t\tpath: `${api.path}/${rowId}`,\r\n\t\t\t\t\t\tmethod: 'GET',\r\n\t\t\t\t\t});\r\n\t\t\t\t\tresult = response.data;\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcase 'insertItem':\r\n\t\t\t\t\tif (api.filterData) {\r\n\t\t\t\t\t\tdata = api.filterData(data, api);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresponse = await axiosFetch({\r\n\t\t\t\t\t\tkey,\r\n\t\t\t\t\t\tpath: api.path,\r\n\t\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\t\tdata,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tresult = response.data;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'updateItem':\r\n\t\t\t\t\tif (api.filterData) {\r\n\t\t\t\t\t\tdata = api.filterData(data, api);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tresponse = await axiosFetch({\r\n\t\t\t\t\t\tkey,\r\n\t\t\t\t\t\tpath: `${api.path}/${rowId}`,\r\n\t\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\t\tdata,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tresult = response.data;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'deleteItem':\r\n\t\t\t\t\tresponse = await axiosFetch({\r\n\t\t\t\t\t\tkey,\r\n\t\t\t\t\t\tpath: `${api.path}/${rowId}`,\r\n\t\t\t\t\t\tmethod: 'DELETE',\r\n\t\t\t\t\t});\r\n\t\t\t\t\tresult = response.data;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t/* Settings */\r\n\t\t\t\tcase 'getSettings': {\r\n\t\t\t\t\tresponse = await axiosFetch({\r\n\t\t\t\t\t\tkey,\r\n\t\t\t\t\t\tpath: api.path,\r\n\t\t\t\t\t\tmethod: 'GET',\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (api.optionName) {\r\n\t\t\t\t\t\tif (response.data[api.optionName]) {\r\n\t\t\t\t\t\t\tresult.settings = response.data[api.optionName];\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tresult.settings = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult.settings = response.data;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcase 'saveSettings': {\r\n\t\t\t\t\tlet newData;\r\n\t\t\t\t\tif (api.optionName) {\r\n\t\t\t\t\t\tnewData = {};\r\n\t\t\t\t\t\tnewData[api.optionName] = data;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnewData = data;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tresponse = await axiosFetch({\r\n\t\t\t\t\t\tkey,\r\n\t\t\t\t\t\tpath: api.path,\r\n\t\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\t\tdata: newData,\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif (api.optionName) {\r\n\t\t\t\t\t\tif (response.data[api.optionName]) {\r\n\t\t\t\t\t\t\tresult.settings = response.data[api.optionName];\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tresult.settings = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult.settings = response.data;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (api.callbacks) {\r\n\t\t\t\t\t\tresult = api.callbacks(key, type, data, rowId);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error(`Invalid type ${api.type} provided.`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (api.filterResult) {\r\n\t\t\t\tresult = api.filterResult(result, response);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\t// eslint-disable-next-line no-console\r\n\t\t\tconsole.log(\r\n\t\t\t\t`Error while performing AtrcApis call. API details :${api}  Error: ${error}`\r\n\t\t\t);\r\n\t\t\tresult.error = error;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n}\r\nconst AtrcApis = new ClassAtrcApis();\r\n\r\nexport default AtrcApis;\r\n"],"mappings":"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"}