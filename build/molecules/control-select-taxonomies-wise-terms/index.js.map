{"version":3,"names":["_data","require","_coreData","_controlSelectTerm","_interopRequireDefault","_label","_excluded","obj","__esModule","default","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","ownKeys","e","r","t","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","_toPrimitive","_typeof","String","Symbol","toPrimitive","TypeError","Number","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","AtrcUseTaxonomies","exports","props","undefined","_props$postType","postType","taxonomies","useSelect","select","_select","coreStore","getTaxonomies","queryArgs","type","filteredTaxonomies","AtrcControlSelectTaxonomyWiseTerms","label","onChange","_props$postType2","defaultProps","React","createElement","Fragment","map","taxonomy","termIds","slug","handleChange","newTermIds","wrapProps","className","name","tax","_default"],"sources":["D:/wamp/www/atrc-package/atrc/packages/molecules/control-select-taxonomies-wise-terms/index.js"],"sourcesContent":["/* WordPress*/\r\nimport { useSelect } from '@wordpress/data';\r\n\r\nimport { store as coreStore } from '@wordpress/core-data';\r\n\r\n/*Inbuilt*/\r\nimport AtrcControlSelectTerm from './../control-select-term';\r\n\r\nimport AtrcLabel from '../../atoms/label';\r\n\r\n/* Local*/\r\n/**\r\n * Hook that returns the taxonomies associated with a specific post type.\r\n *\r\n * @param {Object} props\r\n * @return {Object[]} An array of the associated taxonomies.\r\n */\r\nexport const AtrcUseTaxonomies = (props = {}) => {\r\n\tconst { postType = '' } = props;\r\n\r\n\tconst taxonomies = useSelect(\r\n\t\t(select) => {\r\n\t\t\tconst { getTaxonomies } = select(coreStore);\r\n\t\t\tconst queryArgs = {};\r\n\t\t\tif (postType) {\r\n\t\t\t\tqueryArgs.type = postType;\r\n\t\t\t}\r\n\t\t\tconst filteredTaxonomies = getTaxonomies(queryArgs);\r\n\t\t\treturn filteredTaxonomies;\r\n\t\t},\r\n\t\t[postType]\r\n\t);\r\n\treturn taxonomies;\r\n};\r\n\r\n/*AtrcControlSelectTaxonomyWiseTerms*/\r\nfunction AtrcControlSelectTaxonomyWiseTerms(props) {\r\n\tconst { label, value, onChange, postType = '', ...defaultProps } = props;\r\n\tconst taxonomies = AtrcUseTaxonomies({ postType });\r\n\tif (!taxonomies || taxonomies.length === 0) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{label ? <AtrcLabel>{label}</AtrcLabel> : null}\r\n\t\t\t{taxonomies.map((taxonomy) => {\r\n\t\t\t\tconst termIds = value?.[taxonomy.slug] || [];\r\n\t\t\t\tconst handleChange = (newTermIds) => {\r\n\t\t\t\t\tonChange({\r\n\t\t\t\t\t\t...value,\r\n\t\t\t\t\t\t[taxonomy.slug]: newTermIds,\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<AtrcControlSelectTerm\r\n\t\t\t\t\t\tkey={taxonomy.slug}\r\n\t\t\t\t\t\twrapProps={{\r\n\t\t\t\t\t\t\tclassName: 'at-flx-grw-1',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tlabel={taxonomy.name}\r\n\t\t\t\t\t\tvalue={termIds}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\ttax={taxonomy.slug}\r\n\t\t\t\t\t\t{...defaultProps}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default AtrcControlSelectTaxonomyWiseTerms;\r\n"],"mappings":"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"}