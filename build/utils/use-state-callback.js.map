{"version":3,"names":["useCallback","useEffect","useRef","useState","AtrcUseStateCallback","initialState","_useState","_useState2","_slicedToArray","state","setState","cbRef","setStateCallback","st","cb","current"],"sources":["D:/wamp/www/atrc-package/atrc/packages/utils/use-state-callback.js"],"sourcesContent":["/*WordPress*/\r\nimport { useCallback, useEffect, useRef, useState } from '@wordpress/element';\r\n\r\n/*Local*/\r\n/*\r\n * https://stackoverflow.com/a/61842546/4713045\r\n * */\r\nexport default function AtrcUseStateCallback(initialState) {\r\n\tconst [state, setState] = useState(initialState);\r\n\tconst cbRef = useRef(null); // init mutable ref container for callbacks\r\n\r\n\tconst setStateCallback = useCallback((st, cb) => {\r\n\t\tcbRef.current = cb; // store current, passed callback in ref\r\n\t\tsetState(st);\r\n\t}, []); // keep object reference stable, exactly like `useState`\r\n\r\n\tuseEffect(() => {\r\n\t\t// cb.current is `null` on initial render,\r\n\t\t// so we only invoke callback on state *updates*\r\n\t\tif (cbRef.current) {\r\n\t\t\tcbRef.current(state);\r\n\t\t\tcbRef.current = null; // reset callback after execution\r\n\t\t}\r\n\t}, [state]);\r\n\r\n\treturn [state, setStateCallback];\r\n}\r\n"],"mappings":";;;;;;AAAA;AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,oBAAoB;;AAE7E;AACA;AACA;AACA;AACA,eAAe,SAASC,oBAAoBA,CAACC,YAAY,EAAE;EAC1D,IAAAC,SAAA,GAA0BH,QAAQ,CAACE,YAAY,CAAC;IAAAE,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAMI,KAAK,GAAGT,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE5B,IAAMU,gBAAgB,GAAGZ,WAAW,CAAC,UAACa,EAAE,EAAEC,EAAE,EAAK;IAChDH,KAAK,CAACI,OAAO,GAAGD,EAAE,CAAC,CAAC;IACpBJ,QAAQ,CAACG,EAAE,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAERZ,SAAS,CAAC,YAAM;IACf;IACA;IACA,IAAIU,KAAK,CAACI,OAAO,EAAE;MAClBJ,KAAK,CAACI,OAAO,CAACN,KAAK,CAAC;MACpBE,KAAK,CAACI,OAAO,GAAG,IAAI,CAAC,CAAC;IACvB;EACD,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC;EAEX,OAAO,CAACA,KAAK,EAAEG,gBAAgB,CAAC;AACjC"}