{"version":3,"names":["useMemo","__","store","coreStore","useSelect","classnames","AtrcControlSelect","AtrcNotice","AtrcPrefix","AtrcUseIsPostTypeHierarchical","postType","select","type","getPostType","viewable","hierarchical","excludedPostTypes","AtrcControlGetPostTypeOptions","props","arguments","length","undefined","_props$tax","tax","_props$showOptionNone","showOptionNone","_props$optionNoneValu","optionNoneValue","postTypes","_getPostTypes","_select","getPostTypes","filteredPostTypes","per_page","filter","_ref","slug","includes","options","baseOptions","forEach","_ref2","labels","taxonomies","push","label","singular_name","value","concat","AtrcControlSelectPostType","onChange","_props$showOptionNone2","_props$optionNoneValu2","_props$variant","variant","_props$className","className","defaultProps","_objectWithoutProperties","_excluded","React","createElement","autoDismiss","isDismissible","_extends"],"sources":["D:/wamp/www/atrc-package/atrc/packages/controls/control-select-post-type/index.js"],"sourcesContent":["/* WordPress*/\r\nimport { useMemo } from '@wordpress/element';\r\n\r\nimport { __ } from '@wordpress/i18n';\r\n\r\nimport { store as coreStore } from '@wordpress/core-data';\r\n\r\nimport { useSelect } from '@wordpress/data';\r\n\r\n/*Library*/\r\nimport classnames from 'classnames';\r\n\r\n/*Controls*/\r\nimport AtrcControlSelect from '../control-select';\r\n\r\n/* Molecules */\r\nimport AtrcNotice from '../../molecules/notice';\r\n\r\n/* Prefix */\r\nimport AtrcPrefix from '../../prefix-vars';\r\n\r\n/* Local*/\r\n/**\r\n * Hook that returns whether a specific post type is hierarchical.\r\n *\r\n * @param {string} postType The post type to check.\r\n * @return {boolean} Whether a specific post type is hierarchical.\r\n */\r\nexport function AtrcUseIsPostTypeHierarchical(postType) {\r\n\treturn useSelect(\r\n\t\t(select) => {\r\n\t\t\tconst type = select(coreStore).getPostType(postType);\r\n\t\t\treturn type?.viewable && type?.hierarchical;\r\n\t\t},\r\n\t\t[postType]\r\n\t);\r\n}\r\nconst excludedPostTypes = [\r\n\t'attachment',\r\n\t'gutentor-fonts',\r\n\t'wp_template',\r\n\t'gutentor-icons',\r\n];\r\n\r\nexport function AtrcControlGetPostTypeOptions(props = {}) {\r\n\tconst { tax = '', showOptionNone = false, optionNoneValue = '' } = props;\r\n\r\n\tconst postTypes = useSelect((select) => {\r\n\t\tconst { getPostTypes } = select(coreStore);\r\n\r\n\t\tconst filteredPostTypes = getPostTypes({ per_page: -1 })?.filter(\r\n\t\t\t({ viewable, slug }) => viewable && !excludedPostTypes.includes(slug)\r\n\t\t);\r\n\t\treturn filteredPostTypes;\r\n\t}, []);\r\n\r\n\tconst options = useMemo(() => {\r\n\t\tconst baseOptions = [];\r\n\r\n\t\t(postTypes || []).forEach(({ labels, slug, taxonomies }) => {\r\n\t\t\tif (!tax) {\r\n\t\t\t\tbaseOptions.push({\r\n\t\t\t\t\tlabel: labels.singular_name,\r\n\t\t\t\t\tvalue: slug,\r\n\t\t\t\t});\r\n\t\t\t} else if (taxonomies.includes(tax)) {\r\n\t\t\t\tbaseOptions.push({\r\n\t\t\t\t\tlabel: labels.singular_name,\r\n\t\t\t\t\tvalue: slug,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (showOptionNone) {\r\n\t\t\treturn [\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: optionNoneValue,\r\n\t\t\t\t\tlabel: __('Select', 'atrc-prefix-atrc'),\r\n\t\t\t\t},\r\n\t\t\t\t...baseOptions,\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\treturn baseOptions;\r\n\t}, [tax, postTypes, showOptionNone]);\r\n\r\n\treturn options;\r\n}\r\n\r\n/*AtrcControlSelectPostType*/\r\nfunction AtrcControlSelectPostType(props) {\r\n\tconst {\r\n\t\tlabel,\r\n\t\tvalue,\r\n\t\tonChange,\r\n\t\tshowOptionNone = true,\r\n\t\toptionNoneValue = '',\r\n\t\tvariant = '',\r\n\t\tclassName = '',\r\n\t\t...defaultProps\r\n\t} = props;\r\n\r\n\tconst options = AtrcControlGetPostTypeOptions({\r\n\t\tshowOptionNone,\r\n\t\toptionNoneValue,\r\n\t});\r\n\r\n\tif (!options || !options.length) {\r\n\t\treturn (\r\n\t\t\t<AtrcNotice\r\n\t\t\t\tautoDismiss={false}\r\n\t\t\t\tisDismissible={false}>\r\n\t\t\t\t{__('No types found!', 'atrc-prefix-atrc')}\r\n\t\t\t</AtrcNotice>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AtrcControlSelect\r\n\t\t\tlabel={label}\r\n\t\t\tclassName={classnames(\r\n\t\t\t\tAtrcPrefix('ctrl-select-post-type'),\r\n\t\t\t\tclassName,\r\n\t\t\t\tvariant ? AtrcPrefix('ctrl-select-post-type') + '-' + variant : ''\r\n\t\t\t)}\r\n\t\t\tvalue={value}\r\n\t\t\tonChange={onChange}\r\n\t\t\toptions={options}\r\n\t\t\t{...defaultProps}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport default AtrcControlSelectPostType;\r\n"],"mappings":"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"}