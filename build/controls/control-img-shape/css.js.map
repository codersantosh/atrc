{"version":3,"names":["React","isEmpty","AtrcAvailableDevices","SvgShapeOptions","SelectedShape","value","options","selectedShape","filter","item","length","AtrcSvgToBase64","svgString","base64Data","btoa","base64Url","concat","AtrcControlImgShapeCss","_ref","_ref$properties","properties","maskImage","maskMode","maskOrigin","maskPosition","maskRepeat","maskSize","transform","zIndex","innerOutput","xs","sm","md","lg","xl","xxl","type","imgUrl","svgFrm","svgCust","svgDefd","svg","flipH","flipV","sz","avDevices","forEach","deviceProps","on","device","name","x","y","h","w","posX","posY","zIdx"],"sources":["D:/wamp/www/atrc-package/atrc/packages/controls/control-img-shape/css.js"],"sourcesContent":["import React from 'react';\n\n/*Library*/\r\nimport { isEmpty } from 'lodash';\r\n\r\n/* Utils */\r\nimport AtrcAvailableDevices from '../../utils/available-devices';\r\n\r\n/* Internal */\r\nimport SvgShapeOptions from './options';\r\n\r\n/*Local*/\r\nconst SelectedShape = (value, options) => {\r\n\tconst selectedShape = options.filter(function (item) {\r\n\t\treturn item.value === value;\r\n\t});\r\n\tif (selectedShape.length) {\r\n\t\treturn selectedShape[0];\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nexport function AtrcSvgToBase64(svgString) {\r\n\tconst base64Data = btoa(svgString);\r\n\tconst base64Url = `data:image/svg+xml;base64,${base64Data}`;\r\n\treturn base64Url;\r\n}\r\n\r\nconst AtrcControlImgShapeCss = ({\r\n\tvalue,\r\n\tproperties = {\r\n\t\tmaskImage: '--at-msk-img',\r\n\t\tmaskMode: '--at-msk-mode',\r\n\t\tmaskOrigin: '--at-msk-org',\r\n\t\tmaskPosition: '--at-msk-pos',\r\n\t\tmaskRepeat: '--at-msk-rpt',\r\n\t\tmaskSize: '--at-msk-sz',\r\n\t\ttransform: '--at-tf',\r\n\t\tzIndex: '--at-z-idx',\r\n\t},\r\n}) => {\r\n\tconst innerOutput = {\r\n\t\txs: '',\r\n\t\tsm: '',\r\n\t\tmd: '',\r\n\t\tlg: '',\r\n\t\txl: '',\r\n\t\txxl: '',\r\n\t};\r\n\tif (!isEmpty(value)) {\r\n\t\tif ('img' === value.type) {\r\n\t\t\tif (value.imgUrl) {\r\n\t\t\t\tinnerOutput.xs += `${properties.maskImage} : url(\"${value.imgUrl}\");`;\r\n\t\t\t}\r\n\t\t} else if ('cust' === value.svgFrm) {\r\n\t\t\tif (value.svgCust) {\r\n\t\t\t\tconst base64Url = AtrcSvgToBase64(value.svgCust);\r\n\t\t\t\tinnerOutput.xs += `${properties.maskImage} : url('${base64Url}');`;\r\n\t\t\t}\r\n\t\t} else if (value.svgDefd) {\r\n\t\t\tconst selectedShape = SelectedShape(value.svgDefd, SvgShapeOptions());\r\n\t\t\tif (selectedShape && selectedShape.svg) {\r\n\t\t\t\tconst { svg } = selectedShape;\r\n\t\t\t\tconst base64Url = AtrcSvgToBase64(svg);\r\n\r\n\t\t\t\tinnerOutput.xs += `${properties.maskImage} : url('${base64Url}');`;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (value.flipH || value.flipV) {\r\n\t\t\tif (value.flipH && value.flipV) {\r\n\t\t\t\tinnerOutput.xs += `${properties.transform} : scale(-1,-1);`;\r\n\t\t\t} else if (value.flipH) {\r\n\t\t\t\tinnerOutput.xs += `${properties.transform} : scaleX(-1);`;\r\n\t\t\t} else if (value.flipV) {\r\n\t\t\t\tinnerOutput.xs += `${properties.transform} : scaleY(-1);`;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ('cust' === value.sz) {\r\n\t\t\tconst avDevices = AtrcAvailableDevices();\r\n\r\n\t\t\tavDevices.forEach((deviceProps) => {\r\n\t\t\t\tif (deviceProps.on) {\r\n\t\t\t\t\tconst device = deviceProps.name;\r\n\t\t\t\t\tlet x = 0;\r\n\t\t\t\t\tlet y = 0;\r\n\t\t\t\t\tif (device === 'xs') {\r\n\t\t\t\t\t\tif (value.h && value.w) {\r\n\t\t\t\t\t\t\tx = value.w;\r\n\t\t\t\t\t\t\ty = value.h;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (value[device + 'W'] && value[device + 'H']) {\r\n\t\t\t\t\t\tx = value[device + 'W'];\r\n\t\t\t\t\t\ty = value[device + 'H'];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (x && y) {\r\n\t\t\t\t\t\tinnerOutput[device] += `${properties.maskSize} : ${x} ${y};`;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else if (value.sz) {\r\n\t\t\tinnerOutput.xs += `${properties.maskSize} : ${value.sz};`;\r\n\t\t}\r\n\r\n\t\tif (value.posX || value.posY) {\r\n\t\t\tinnerOutput.xs += `${properties.maskPosition} : ${value.posX || 0} ${\r\n\t\t\t\tvalue.posY || 0\r\n\t\t\t};`;\r\n\t\t}\r\n\t\tif (value.zIdx) {\r\n\t\t\tinnerOutput.xs += `${properties.zIndex} : 99999;`;\r\n\t\t}\r\n\t}\r\n\treturn innerOutput;\r\n};\r\n\r\nexport default AtrcControlImgShapeCss;\r\n"],"mappings":"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","ignoreList":[]}