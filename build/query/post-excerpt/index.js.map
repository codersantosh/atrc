{"version":3,"names":["__","useEntityProp","forwardRef","AtrcWrap","AtrcPostExcerpt","props","ref","postType","postId","htmlTag","excerptLength","wordCountType","defaultProps","rawExcerpt","setExcerpt","rawOrRenderedExcerpt","trim","trimmedExcerpt","split","join","excerptWithSpaces","numberOfSpaces","length","replaceAll","isTrimmed","excerptContent","React","createElement","_extends","tag"],"sources":["D:/wamp/www/atrc-package/atrc/packages/query/post-excerpt/index.js"],"sourcesContent":["/*WordPress*/\r\nimport { __ } from '@wordpress/i18n';\r\n\r\nimport { useEntityProp } from '@wordpress/core-data';\r\n\r\nimport { forwardRef } from '@wordpress/element';\r\n\r\n/* Inbuilt */\r\nimport AtrcWrap from '../../atoms/wrap';\r\n\r\n/* Local */\r\nconst AtrcPostExcerpt = (props, ref) => {\r\n\tconst {\r\n\t\tpostType,\r\n\t\tpostId,\r\n\t\thtmlTag,\r\n\t\texcerptLength = 55,\r\n\t\twordCountType = 'w',\r\n\t\t...defaultProps\r\n\t} = props;\r\n\r\n\tconst [\r\n\t\trawExcerpt,\r\n\t\t// eslint-disable-next-line no-unused-vars\r\n\t\tsetExcerpt,\r\n\t] = useEntityProp('postType', postType, 'excerpt', postId);\r\n\r\n\t/**\r\n\t * The excerpt length setting needs to be applied to both\r\n\t * the raw and the rendered excerpt depending on which is being used.\r\n\t */\r\n\tconst rawOrRenderedExcerpt = rawExcerpt.trim();\r\n\r\n\tlet trimmedExcerpt = '';\r\n\tif (wordCountType === 'w') {\r\n\t\ttrimmedExcerpt = rawOrRenderedExcerpt.split(' ', excerptLength).join(' ');\r\n\t} else if (wordCountType === 'ce') {\r\n\t\t/*\r\n\t\t * 1. Split the excerpt at the character limit,\r\n\t\t * then join the substrings back into one string.\r\n\t\t * 2. Count the number of spaces in the excerpt\r\n\t\t * by comparing the lengths of the string with and without spaces.\r\n\t\t * 3. Add the number to the length of the visible excerpt,\r\n\t\t * so that the spaces are excluded from the word count.\r\n\t\t */\r\n\t\tconst excerptWithSpaces = rawOrRenderedExcerpt\r\n\t\t\t.split('', excerptLength)\r\n\t\t\t.join('');\r\n\r\n\t\tconst numberOfSpaces =\r\n\t\t\texcerptWithSpaces.length - excerptWithSpaces.replaceAll(' ', '').length;\r\n\r\n\t\ttrimmedExcerpt = rawOrRenderedExcerpt\r\n\t\t\t.split('', excerptLength + numberOfSpaces)\r\n\t\t\t.join('');\r\n\t} else if (wordCountType === 'ci') {\r\n\t\ttrimmedExcerpt = rawOrRenderedExcerpt.split('', excerptLength).join('');\r\n\t}\r\n\r\n\tconst isTrimmed = trimmedExcerpt !== rawOrRenderedExcerpt;\r\n\r\n\tconst excerptContent = !isTrimmed\r\n\t\t? rawOrRenderedExcerpt || __('No excerpt found', 'atrc-prefix-atrc')\r\n\t\t: trimmedExcerpt;\r\n\r\n\treturn (\r\n\t\t<AtrcWrap\r\n\t\t\t{...defaultProps}\r\n\t\t\tref={ref}\r\n\t\t\ttag={htmlTag}>\r\n\t\t\t{excerptContent}\r\n\t\t</AtrcWrap>\r\n\t);\r\n};\r\nexport default forwardRef(AtrcPostExcerpt);\r\n"],"mappings":";AAAA;AACA,SAASA,EAAE,QAAQ,iBAAiB;AAEpC,SAASC,aAAa,QAAQ,sBAAsB;AAEpD,SAASC,UAAU,QAAQ,oBAAoB;;AAE/C;AACA,OAAOC,QAAQ,MAAM,kBAAkB;;AAEvC;AACA,MAAMC,eAAe,GAAGA,CAACC,KAAK,EAAEC,GAAG,KAAK;EACvC,MAAM;IACLC,QAAQ;IACRC,MAAM;IACNC,OAAO;IACPC,aAAa,GAAG,EAAE;IAClBC,aAAa,GAAG,GAAG;IACnB,GAAGC;EACJ,CAAC,GAAGP,KAAK;EAET,MAAM,CACLQ,UAAU;EACV;EACAC,UAAU,CACV,GAAGb,aAAa,CAAC,UAAU,EAAEM,QAAQ,EAAE,SAAS,EAAEC,MAAM,CAAC;;EAE1D;AACD;AACA;AACA;EACC,MAAMO,oBAAoB,GAAGF,UAAU,CAACG,IAAI,CAAC,CAAC;EAE9C,IAAIC,cAAc,GAAG,EAAE;EACvB,IAAIN,aAAa,KAAK,GAAG,EAAE;IAC1BM,cAAc,GAAGF,oBAAoB,CAACG,KAAK,CAAC,GAAG,EAAER,aAAa,CAAC,CAACS,IAAI,CAAC,GAAG,CAAC;EAC1E,CAAC,MAAM,IAAIR,aAAa,KAAK,IAAI,EAAE;IAClC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,MAAMS,iBAAiB,GAAGL,oBAAoB,CAC5CG,KAAK,CAAC,EAAE,EAAER,aAAa,CAAC,CACxBS,IAAI,CAAC,EAAE,CAAC;IAEV,MAAME,cAAc,GACnBD,iBAAiB,CAACE,MAAM,GAAGF,iBAAiB,CAACG,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC,CAACD,MAAM;IAExEL,cAAc,GAAGF,oBAAoB,CACnCG,KAAK,CAAC,EAAE,EAAER,aAAa,GAAGW,cAAc,CAAC,CACzCF,IAAI,CAAC,EAAE,CAAC;EACX,CAAC,MAAM,IAAIR,aAAa,KAAK,IAAI,EAAE;IAClCM,cAAc,GAAGF,oBAAoB,CAACG,KAAK,CAAC,EAAE,EAAER,aAAa,CAAC,CAACS,IAAI,CAAC,EAAE,CAAC;EACxE;EAEA,MAAMK,SAAS,GAAGP,cAAc,KAAKF,oBAAoB;EAEzD,MAAMU,cAAc,GAAG,CAACD,SAAS,GAC9BT,oBAAoB,IAAIf,EAAE,CAAC,kBAAkB,EAAE,kBAAkB,CAAC,GAClEiB,cAAc;EAEjB,oBACCS,KAAA,CAAAC,aAAA,CAACxB,QAAQ,EAAAyB,QAAA,KACJhB,YAAY;IAChBN,GAAG,EAAEA,GAAI;IACTuB,GAAG,EAAEpB;EAAQ,IACZgB,cACQ,CAAC;AAEb,CAAC;AACD,eAAevB,UAAU,CAACE,eAAe,CAAC"}