{"version":3,"names":["React","forwardRef","__","useEffect","useState","apiFetch","addQueryArgs","AtrcWrap","AtrcNotice","AtrcPostCommentCount","props","ref","postId","htmlTag","defaultProps","_objectWithoutProperties","_excluded","_useState","_useState2","_slicedToArray","commentsCount","setCommentsCount","currentPostId","path","post","parse","then","res","headers","get","hasPostAndComments","undefined","createElement","_extends","tag"],"sources":["D:/wamp/www/atrc-package/atrc/packages/query/post-comment-count/index.js"],"sourcesContent":["import React from 'react';\n\n/*React*/\r\nimport { forwardRef } from 'react';\r\n\r\n/*WordPress*/\r\nimport { __ } from '@wordpress/i18n';\r\n\r\nimport { useEffect, useState } from '@wordpress/element';\r\n\r\nimport apiFetch from '@wordpress/api-fetch';\r\n\r\nimport { addQueryArgs } from '@wordpress/url';\r\n\r\n/* Atoms */\r\nimport AtrcWrap from '../../atoms/wrap';\r\n\r\n/* Molecules */\r\nimport AtrcNotice from './../../molecules/notice';\r\n\r\n/* Local */\r\nconst AtrcPostCommentCount = (props, ref) => {\r\n\tconst { postId, htmlTag, ...defaultProps } = props;\r\n\r\n\tconst [commentsCount, setCommentsCount] = useState();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!postId) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst currentPostId = postId;\r\n\t\tapiFetch({\r\n\t\t\tpath: addQueryArgs('/wp/v2/comments', {\r\n\t\t\t\tpost: postId,\r\n\t\t\t}),\r\n\t\t\tparse: false,\r\n\t\t}).then((res) => {\r\n\t\t\t// Stale requests will have the `currentPostId` of an older closure.\r\n\t\t\tif (currentPostId === postId) {\r\n\t\t\t\tsetCommentsCount(res.headers.get('X-WP-Total'));\r\n\t\t\t}\r\n\t\t});\r\n\t}, [postId]);\r\n\r\n\tconst hasPostAndComments = postId && commentsCount !== undefined;\r\n\r\n\tif (!hasPostAndComments) {\r\n\t\treturn <AtrcNotice>{__('Post not found.', 'atrc-prefix-atrc')}</AtrcNotice>;\r\n\t}\r\n\treturn (\r\n\t\t<AtrcWrap\r\n\t\t\t{...defaultProps}\r\n\t\t\tref={ref}\r\n\t\t\ttag={htmlTag}>\r\n\t\t\t{commentsCount}\r\n\t\t</AtrcWrap>\r\n\t);\r\n};\r\n\r\nexport default forwardRef(AtrcPostCommentCount);\r\n"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,SAASC,UAAU,QAAQ,OAAO;;AAElC;AACA,SAASC,EAAE,QAAQ,iBAAiB;AAEpC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,oBAAoB;AAExD,OAAOC,QAAQ,MAAM,sBAAsB;AAE3C,SAASC,YAAY,QAAQ,gBAAgB;;AAE7C;AACA,OAAOC,QAAQ,MAAM,kBAAkB;;AAEvC;AACA,OAAOC,UAAU,MAAM,0BAA0B;;AAEjD;AACA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIC,KAAK,EAAEC,GAAG,EAAK;EAC5C,IAAQC,MAAM,GAA+BF,KAAK,CAA1CE,MAAM;IAAEC,OAAO,GAAsBH,KAAK,CAAlCG,OAAO;IAAKC,YAAY,GAAAC,wBAAA,CAAKL,KAAK,EAAAM,SAAA;EAElD,IAAAC,SAAA,GAA0Cb,QAAQ,CAAC,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7CG,aAAa,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EAEtCf,SAAS,CAAC,YAAM;IACf,IAAI,CAACS,MAAM,EAAE;MACZ;IACD;IACA,IAAMU,aAAa,GAAGV,MAAM;IAC5BP,QAAQ,CAAC;MACRkB,IAAI,EAAEjB,YAAY,CAAC,iBAAiB,EAAE;QACrCkB,IAAI,EAAEZ;MACP,CAAC,CAAC;MACFa,KAAK,EAAE;IACR,CAAC,CAAC,CAACC,IAAI,CAAC,UAACC,GAAG,EAAK;MAChB;MACA,IAAIL,aAAa,KAAKV,MAAM,EAAE;QAC7BS,gBAAgB,CAACM,GAAG,CAACC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC,CAAC;MAChD;IACD,CAAC,CAAC;EACH,CAAC,EAAE,CAACjB,MAAM,CAAC,CAAC;EAEZ,IAAMkB,kBAAkB,GAAGlB,MAAM,IAAIQ,aAAa,KAAKW,SAAS;EAEhE,IAAI,CAACD,kBAAkB,EAAE;IACxB,oBAAO9B,KAAA,CAAAgC,aAAA,CAACxB,UAAU,QAAEN,EAAE,CAAC,iBAAiB,EAAE,kBAAkB,CAAc,CAAC;EAC5E;EACA,oBACCF,KAAA,CAAAgC,aAAA,CAACzB,QAAQ,EAAA0B,QAAA,KACJnB,YAAY;IAChBH,GAAG,EAAEA,GAAI;IACTuB,GAAG,EAAErB;EAAQ,IACZO,aACQ,CAAC;AAEb,CAAC;AAED,4BAAenB,UAAU,CAACQ,oBAAoB,CAAC","ignoreList":[]}